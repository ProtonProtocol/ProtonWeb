{"version":3,"file":"bundle.js","sources":["../node_modules/tslib/tslib.es6.js","../node_modules/rollup-plugin-node-polyfills/polyfills/global.js","../node_modules/rollup-plugin-node-polyfills/polyfills/buffer-es6.js","../node_modules/eosjs/dist/ripemd.js","../node_modules/eosjs/dist/eosjs-numeric.js","../node_modules/eosjs/dist/eosjs-serialize.js","../node_modules/eosjs/dist/eosjs-api.js","../node_modules/eosjs/dist/eosjs-api-interfaces.js","../node_modules/eosjs/dist/eosjs-rpcerror.js","../node_modules/eosjs/dist/eosjs-jsonrpc.js","../node_modules/eosjs/dist/eosjs-rpc-interfaces.js","../node_modules/eosjs/dist/index.js","../node_modules/fast-sha256/sha256.js","../node_modules/eosio-signing-request/lib/abi.js","../node_modules/eosio-signing-request/lib/base64u.js","../node_modules/eosio-signing-request/lib/signing-request.js","../node_modules/rollup-plugin-node-polyfills/polyfills/process-es6.js","../node_modules/safe-buffer/index.js","../node_modules/randombytes/browser.js","../node_modules/long/dist/long.js","../node_modules/bytebuffer/dist/bytebuffer.js","../node_modules/browserify-aes/aes.js","../node_modules/rollup-plugin-node-polyfills/polyfills/events.js","../node_modules/rollup-plugin-node-polyfills/polyfills/inherits.js","../node_modules/rollup-plugin-node-polyfills/polyfills/util.js","../node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/buffer-list.js","../node_modules/rollup-plugin-node-polyfills/polyfills/string-decoder.js","../node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/readable.js","../node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/writable.js","../node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/duplex.js","../node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/transform.js","../node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/passthrough.js","../node_modules/rollup-plugin-node-polyfills/polyfills/stream.js","../node_modules/inherits/inherits_browser.js","../node_modules/cipher-base/index.js","../node_modules/browserify-aes/modes.js","../node_modules/readable-stream/lib/internal/streams/buffer_list.js","../node_modules/readable-stream/lib/internal/streams/destroy.js","../node_modules/readable-stream/errors-browser.js","../node_modules/readable-stream/lib/internal/streams/state.js","../node_modules/util-deprecate/browser.js","../node_modules/readable-stream/lib/_stream_writable.js","../node_modules/readable-stream/lib/_stream_duplex.js","../node_modules/string_decoder/lib/string_decoder.js","../node_modules/readable-stream/lib/internal/streams/end-of-stream.js","../node_modules/readable-stream/lib/internal/streams/async_iterator.js","../node_modules/readable-stream/lib/internal/streams/from-browser.js","../node_modules/readable-stream/lib/_stream_readable.js","../node_modules/readable-stream/lib/_stream_transform.js","../node_modules/readable-stream/lib/_stream_passthrough.js","../node_modules/readable-stream/lib/internal/streams/pipeline.js","../node_modules/readable-stream/readable-browser.js","../node_modules/hash-base/index.js","../node_modules/md5.js/index.js","../node_modules/evp_bytestokey/index.js","../node_modules/browserify-aes/streamCipher.js","../node_modules/browserify-aes/ghash.js","../node_modules/buffer-xor/index.js","../node_modules/browserify-aes/authCipher.js","../node_modules/browserify-aes/modes/ecb.js","../node_modules/browserify-aes/modes/cbc.js","../node_modules/browserify-aes/modes/cfb.js","../node_modules/browserify-aes/modes/cfb8.js","../node_modules/browserify-aes/modes/cfb1.js","../node_modules/browserify-aes/modes/ofb.js","../node_modules/browserify-aes/modes/ctr.js","../node_modules/browserify-aes/encrypter.js","../node_modules/browserify-aes/decrypter.js","../node_modules/browserify-aes/browser.js","../node_modules/rollup-plugin-node-polyfills/polyfills/assert.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/bigi/lib/bigi.js","../node_modules/bigi/lib/convert.js","../node_modules/ecurve/lib/point.js","../node_modules/ecurve/lib/curve.js","../node_modules/ecurve/lib/names.js","../node_modules/ecurve/lib/index.js","../node_modules/create-hash/make-hash.js","../node_modules/create-hash/md5.js","../node_modules/ripemd160/index.js","../node_modules/sha.js/hash.js","../node_modules/sha.js/sha.js","../node_modules/sha.js/sha1.js","../node_modules/sha.js/sha256.js","../node_modules/sha.js/sha224.js","../node_modules/sha.js/sha512.js","../node_modules/sha.js/sha384.js","../node_modules/sha.js/index.js","../node_modules/create-hash/browser.js","../node_modules/create-hmac/legacy.js","../node_modules/create-hmac/browser.js","../node_modules/eosjs-ecc/lib/hash.js","../node_modules/base-x/src/index.js","../node_modules/eosjs-ecc/lib/key_utils.js","../node_modules/eosjs-ecc/lib/key_public.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/eosjs-ecc/lib/key_private.js","../node_modules/eosjs-ecc/lib/promise-async.js","../node_modules/eosjs-ecc/lib/aes.js","../node_modules/eosjs-ecc/lib/enforce_types.js","../node_modules/eosjs-ecc/lib/ecsignature.js","../node_modules/eosjs-ecc/lib/ecdsa.js","../node_modules/eosjs-ecc/lib/signature.js","../node_modules/eosjs-ecc/lib/api_common.js","../node_modules/eosjs-ecc/lib/api_object.js","../node_modules/eosjs-ecc/lib/index.js","../node_modules/isomorphic-ws/browser.js","../node_modules/pako/lib/utils/common.js","../node_modules/pako/lib/zlib/trees.js","../node_modules/pako/lib/zlib/adler32.js","../node_modules/pako/lib/zlib/crc32.js","../node_modules/pako/lib/zlib/messages.js","../node_modules/pako/lib/zlib/deflate.js","../node_modules/pako/lib/utils/strings.js","../node_modules/pako/lib/zlib/zstream.js","../node_modules/pako/lib/deflate.js","../node_modules/pako/lib/zlib/inffast.js","../node_modules/pako/lib/zlib/inftrees.js","../node_modules/pako/lib/zlib/inflate.js","../node_modules/pako/lib/zlib/constants.js","../node_modules/pako/lib/zlib/gzheader.js","../node_modules/pako/lib/inflate.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/anchor-link/lib/errors.js","../node_modules/anchor-link/lib/link-options.js","../node_modules/anchor-link/lib/utils.js","../node_modules/fetch-ponyfill/build/fetch-browser.js","../node_modules/anchor-link/lib/link-abi-data.js","../node_modules/anchor-link/lib/link-session.js","../node_modules/anchor-link/lib/link.js","../node_modules/qrcode/lib/can-promise.js","../node_modules/isarray/index.js","../node_modules/qrcode/lib/utils/typedarray-buffer.js","../node_modules/qrcode/lib/core/utils.js","../node_modules/qrcode/lib/core/error-correction-level.js","../node_modules/qrcode/lib/core/bit-buffer.js","../node_modules/qrcode/lib/core/bit-matrix.js","../node_modules/qrcode/lib/core/alignment-pattern.js","../node_modules/qrcode/lib/core/finder-pattern.js","../node_modules/qrcode/lib/core/mask-pattern.js","../node_modules/qrcode/lib/core/error-correction-code.js","../node_modules/qrcode/lib/core/galois-field.js","../node_modules/qrcode/lib/core/polynomial.js","../node_modules/qrcode/lib/core/reed-solomon-encoder.js","../node_modules/qrcode/lib/core/regex.js","../node_modules/qrcode/lib/core/mode.js","../node_modules/qrcode/lib/core/version.js","../node_modules/qrcode/lib/core/format-info.js","../node_modules/qrcode/lib/core/numeric-data.js","../node_modules/qrcode/lib/core/alphanumeric-data.js","../node_modules/qrcode/lib/core/byte-data.js","../node_modules/qrcode/lib/core/kanji-data.js","../node_modules/dijkstrajs/dijkstra.js","../node_modules/qrcode/lib/core/segments.js","../node_modules/qrcode/lib/core/qrcode.js","../node_modules/qrcode/lib/renderer/utils.js","../node_modules/qrcode/lib/renderer/canvas.js","../node_modules/qrcode/lib/renderer/svg-tag.js","../node_modules/qrcode/lib/browser.js","../node_modules/@protonprotocol/proton-browser-transport/lib/index.js","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export default (typeof global !== \"undefined\" ? global :\n  typeof self !== \"undefined\" ? self :\n  typeof window !== \"undefined\" ? window : {});","var lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar inited = false;\nfunction init () {\n  inited = true;\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62;\n  revLookup['_'.charCodeAt(0)] = 63;\n}\n\nfunction toByteArray (b64) {\n  if (!inited) {\n    init();\n  }\n  var i, j, l, tmp, placeHolders, arr;\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders);\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len;\n\n  var L = 0;\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)];\n    arr[L++] = (tmp >> 16) & 0xFF;\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4);\n    arr[L++] = tmp & 0xFF;\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2);\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  if (!inited) {\n    init();\n  }\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n  var output = '';\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    output += lookup[tmp >> 2];\n    output += lookup[(tmp << 4) & 0x3F];\n    output += '==';\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1]);\n    output += lookup[tmp >> 10];\n    output += lookup[(tmp >> 4) & 0x3F];\n    output += lookup[(tmp << 2) & 0x3F];\n    output += '=';\n  }\n\n  parts.push(output);\n\n  return parts.join('')\n}\n\nfunction read (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? (nBytes - 1) : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nfunction write (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);\n  var i = isLE ? 0 : (nBytes - 1);\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n}\n\nvar toString = {}.toString;\n\nvar isArray = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar INSPECT_MAX_BYTES = 50;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : true;\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nvar _kMaxLength = kMaxLength();\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n    that.length = length;\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr\n};\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size);\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n};\n\nfunction allocUnsafe (that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n};\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (internalIsBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0;\n  }\n  return Buffer.alloc(+length)\n}\nBuffer.isBuffer = isBuffer;\nfunction internalIsBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n};\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n    if (!internalIsBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n  return buffer\n};\n\nfunction byteLength (string, encoding) {\n  if (internalIsBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false;\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true;\n\nfunction swap (b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length;\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n  return this\n};\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length;\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n  return this\n};\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length;\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n  return this\n};\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0;\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n};\n\nBuffer.prototype.equals = function equals (b) {\n  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n};\n\nBuffer.prototype.inspect = function inspect () {\n  var str = '';\n  var max = INSPECT_MAX_BYTES;\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n  return '<Buffer ' + str + '>'\n};\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!internalIsBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  byteOffset = +byteOffset;  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1);\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (internalIsBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i;\n  if (dir) {\n    var foundIndex = -1;\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n};\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n};\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed;\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n};\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return fromByteArray(buf)\n  } else {\n    return fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n\n  var i = start;\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = '';\n  var i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    );\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length;\n\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n\n  var out = '';\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n\n  var newBuf;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset]\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | (this[offset + 1] << 8)\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return (this[offset] << 8) | this[offset + 1]\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n};\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | (this[offset + 1] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | (this[offset] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, true, 23, 4)\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, false, 23, 4)\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, true, 52, 8)\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, false, 52, 8)\n};\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!internalIsBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 1] = (value >>> 8);\n    this[offset] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 3] = (value >>> 24);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4);\n  }\n  write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n};\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8);\n  }\n  write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    );\n  }\n\n  return len\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n      if (code < 256) {\n        val = code;\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n\n  if (!val) val = 0;\n\n  var i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = internalIsBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this\n};\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray\n}\n\n\nfunction base64ToBytes (str) {\n  return toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i];\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nfunction isBuffer(obj) {\n  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\n}\n\nfunction isFastBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))\n}\n\nexport { Buffer, INSPECT_MAX_BYTES, SlowBuffer, isBuffer, _kMaxLength as kMaxLength };\n","// https://gist.githubusercontent.com/wlzla000/bac83df6d3c51916c4dd0bc947e46947/raw/7ee3462b095ab22580ddaf191f44a590da6fe33b/RIPEMD-160.js\n\n/*\n\tRIPEMD-160.js\n\n\t\tdeveloped\n\t\t\tby K. (https://github.com/wlzla000)\n\t\t\ton December 27-29, 2017,\n\n\t\tlicensed under\n\n\n\t\tthe MIT license\n\n\t\tCopyright (c) 2017 K.\n\n\t\t Permission is hereby granted, free of charge, to any person\n\t\tobtaining a copy of this software and associated documentation\n\t\tfiles (the \"Software\"), to deal in the Software without\n\t\trestriction, including without limitation the rights to use,\n\t\tcopy, modify, merge, publish, distribute, sublicense, and/or\n\t\tsell copies of the Software, and to permit persons to whom the\n\t\tSoftware is furnished to do so, subject to the following\n\t\tconditions:\n\n\t\t The above copyright notice and this permission notice shall be\n\t\tincluded in all copies or substantial portions of the Software.\n\n\t\t THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t\tEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t\tOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t\tNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t\tHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t\tWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t\tFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t\tOTHER DEALINGS IN THE SOFTWARE.\n*/\n\n\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RIPEMD160 = function () {\n\tfunction RIPEMD160() {\n\t\t// https://webcache.googleusercontent.com/search?q=cache:CnLOgolTHYEJ:https://www.cosic.esat.kuleuven.be/publications/article-317.pdf\n\t\t// http://shodhganga.inflibnet.ac.in/bitstream/10603/22978/13/13_appendix.pdf\n\n\t\t_classCallCheck(this, RIPEMD160);\n\t}\n\n\t_createClass(RIPEMD160, null, [{\n\t\tkey: \"get_n_pad_bytes\",\n\t\tvalue: function get_n_pad_bytes(message_size /* in bytes, 1 byte is 8 bits. */) {\n\t\t\t//  Obtain the number of bytes needed to pad the message.\n\t\t\t// It does not contain the size of the message size information.\n\t\t\t/*\n   \thttps://webcache.googleusercontent.com/search?q=cache:CnLOgolTHYEJ:https://www.cosic.esat.kuleuven.be/publications/article-317.pdf\n   \t\tThe Cryptographic Hash Function RIPEMD-160\n   \t\twritten by\n   \t\tBart Preneel,\n   \t\tHans Dobbertin,\n   \t\tAntoon Bosselaers\n   \tin\n   \t\t1997.\n   \t\t--------------------------------------------------\n   \t\t§5     Description of RIPEMD-160\n   \t\t......\n   \t\t In order to guarantee that the total input size is a\n   \tmultiple of 512 bits, the input is padded in the same\n   \tway as for all the members of the MD4-family: one\n   \tappends a single 1 followed by a string of 0s (the\n   \tnumber of 0s lies between 0 and 511); the last 64 bits\n   \tof the extended input contain the binary representation\n   \tof the input size in bits, least significant byte first.\n   */\n\t\t\t/*\n   \thttps://tools.ietf.org/rfc/rfc1186.txt\n   \t\tRFC 1186: MD4 Message Digest Algorithm.\n   \t\twritten by\n   \t\tRonald Linn Rivest\n   \tin\n   \t\tOctober 1990.\n   \t\t--------------------------------------------------\n   \t\t§3     MD4 Algorithm Description\n   \t\t......\n   \t\tStep 1. Append padding bits\n   \t\t The message is \"padded\" (extended) so that its length\n   \t(in bits) is congruent to 448, modulo 512. That is, the\n   \tmessage is extended so that it is just 64 bits shy of\n   \tbeing a multiple of 512 bits long. Padding is always\n   \tperformed, even if the length of the message is already\n   \tcongruent to 448, modulo 512 (in which case 512 bits of\n   \tpadding are added).\n   \t\t Padding is performed as follows: a single \"1\" bit is\n   \tappended to the message, and then enough zero bits are\n   \tappended so that the length in bits of the padded\n   \tmessage becomes congruent to 448, modulo 512.\n   \t\tStep 2. Append length\n   \t\t A 64-bit representation of b (the length of the message\n   \tbefore the padding bits were added) is appended to the\n   \tresult of the previous step. In the unlikely event that\n   \tb is greater than 2^64, then only the low-order 64 bits\n   \tof b are used. (These bits are appended as two 32-bit\n   \twords and appended low-order word first in accordance\n   \twith the previous conventions.)\n   \t\t At this point the resulting message (after padding with\n   \tbits and with b) has a length that is an exact multiple\n   \tof 512 bits. Equivalently, this message has a length\n   \tthat is an exact multiple of 16 (32-bit) words. Let\n   \tM[0 ... N-1] denote the words of the resulting message,\n   \twhere N is a multiple of 16.\n   */\n\t\t\t// https://crypto.stackexchange.com/a/32407/54568\n\t\t\t/*\n   \tExample case  # 1\n   \t\t[0 bit: message.]\n   \t\t[1 bit: 1.]\n   \t\t[447 bits: 0.]\n   \t\t[64 bits: message size information.]\n   \t\tExample case  # 2\n   \t\t[512-bits: message]\n   \t\t[1 bit: 1.]\n   \t\t[447 bits: 0.]\n   \t\t[64 bits: message size information.]\n   \t\tExample case  # 3\n   \t\t[(512 - 64 = 448) bits: message.]\n   \t\t[1 bit: 1.]\n   \t\t[511 bits: 0.]\n   \t\t[64 bits: message size information.]\n   \t\tExample case  # 4\n   \t\t[(512 - 65 = 447) bits: message.]\n   \t\t[1 bit: 1.]\n   \t\t[0 bit: 0.]\n   \t\t[64 bits: message size information.]\n   */\n\t\t\t// The number of padding zero bits:\n\t\t\t//      511 - [{(message size in bits) + 64} (mod 512)]\n\t\t\treturn 64 - (message_size + 8 & 63 /* 63 */);\n\t\t}\n\t}, {\n\t\tkey: \"pad\",\n\t\tvalue: function pad(message /* An ArrayBuffer. */) {\n\t\t\tvar message_size = message.byteLength;\n\t\t\tvar n_pad = RIPEMD160.get_n_pad_bytes(message_size);\n\n\t\t\t//  `Number.MAX_SAFE_INTEGER` is ((2 ** 53) - 1) and\n\t\t\t// bitwise operation in Javascript is done on 32-bits operands.\n\t\t\tvar divmod = function divmod(dividend, divisor) {\n\t\t\t\treturn [Math.floor(dividend / divisor), dividend % divisor];\n\t\t\t};\n\t\t\t/*\n   To shift\n     00000000 000????? ???????? ???????? ???????? ???????? ???????? ????????\n                                      t o\n    00000000 ???????? ???????? ???????? ???????? ???????? ???????? ?????000\n   --------------------------------------------------------------------------------\n   Method #1\n      00000000 000????? ???????? ????????  ???????? ???????? ???????? ????????\n    [00000000 000AAAAA AAAAAAAA AAAAAAAA] (<A> captured)\n    [00000000 AAAAAAAA AAAAAAAA AAAAA000] (<A> shifted)\n                          (<B> captured) [BBBBBBBB BBBBBBBB BBBBBBBB BBBBBBBB]\n                      (<B> shifted) [BBB][BBBBBBBB BBBBBBBB BBBBBBBB BBBBB000]\n    [00000000 AAAAAAAA AAAAAAAA AAAAABBB] (<A> & <B_2> merged)\n    [00000000 AAAAAAAA AAAAAAAA AAAAABBB][BBBBBBBB BBBBBBBB BBBBBBBB BBBBB000]\n     00000000 ???????? ???????? ????????  ???????? ???????? ???????? ?????000\n   \tconst uint32_max_plus_1 = 0x100000000; // (2 ** 32)\n   const [\n   \tmsg_byte_size_most, // Value range [0, (2 ** 21) - 1].\n   \tmsg_byte_size_least // Value range [0, (2 ** 32) - 1].\n   ] = divmod(message_size, uint32_max_plus_1);\n   const [\n   \tcarry, // Value range [0, 7].\n   \tmsg_bit_size_least // Value range [0, (2 ** 32) - 8].\n   ] = divmod(message_byte_size_least * 8, uint32_max_plus_1);\n   const message_bit_size_most = message_byte_size_most * 8\n   \t+ carry; // Value range [0, (2 ** 24) - 1].\n   --------------------------------------------------------------------------------\n   Method #2\n     00000000 000????? ???????? ????????  ???????? ???????? ???????? ????????\n       [00000 000AAAAA AAAAAAAA AAAAAAAA  AAA] (<A> captured)\n                          (<B> captured) [000BBBBB BBBBBBBB BBBBBBBB BBBBBBBB]\n                           (<B> shifted) [BBBBBBBB BBBBBBBB BBBBBBBB BBBBB000]\n    [00000000 AAAAAAAA AAAAAAAA AAAAAAAA][BBBBBBBB BBBBBBBB BBBBBBBB BBBBB000]\n     00000000 ???????? ???????? ????????  ???????? ???????? ???????? ?????000\n   \t*/\n\n\t\t\tvar _divmod$map = divmod(message_size, 536870912 /* (2 ** 29) */).map(function (x, index) {\n\t\t\t\treturn index ? x * 8 : x;\n\t\t\t}),\n\t\t\t    _divmod$map2 = _slicedToArray(_divmod$map, 2),\n\t\t\t    msg_bit_size_most = _divmod$map2[0],\n\t\t\t    msg_bit_size_least = _divmod$map2[1];\n\n\t\t\t// `ArrayBuffer.transfer()` is not supported.\n\n\n\t\t\tvar padded = new Uint8Array(message_size + n_pad + 8);\n\t\t\tpadded.set(new Uint8Array(message), 0);\n\t\t\tvar data_view = new DataView(padded.buffer);\n\t\t\tdata_view.setUint8(message_size, 128);\n\t\t\tdata_view.setUint32(message_size + n_pad, msg_bit_size_least, true // Little-endian\n\t\t\t);\n\t\t\tdata_view.setUint32(message_size + n_pad + 4, msg_bit_size_most, true // Little-endian\n\t\t\t);\n\n\t\t\treturn padded.buffer;\n\t\t}\n\t}, {\n\t\tkey: \"f\",\n\t\tvalue: function f(j, x, y, z) {\n\t\t\tif (0 <= j && j <= 15) {\n\t\t\t\t// Exclusive-OR\n\t\t\t\treturn x ^ y ^ z;\n\t\t\t}\n\t\t\tif (16 <= j && j <= 31) {\n\t\t\t\t// Multiplexing (muxing)\n\t\t\t\treturn x & y | ~x & z;\n\t\t\t}\n\t\t\tif (32 <= j && j <= 47) {\n\t\t\t\treturn (x | ~y) ^ z;\n\t\t\t}\n\t\t\tif (48 <= j && j <= 63) {\n\t\t\t\t// Multiplexing (muxing)\n\t\t\t\treturn x & z | y & ~z;\n\t\t\t}\n\t\t\tif (64 <= j && j <= 79) {\n\t\t\t\treturn x ^ (y | ~z);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"K\",\n\t\tvalue: function K(j) {\n\t\t\tif (0 <= j && j <= 15) {\n\t\t\t\treturn 0x00000000;\n\t\t\t}\n\t\t\tif (16 <= j && j <= 31) {\n\t\t\t\t// Math.floor((2 ** 30) * Math.SQRT2)\n\t\t\t\treturn 0x5A827999;\n\t\t\t}\n\t\t\tif (32 <= j && j <= 47) {\n\t\t\t\t// Math.floor((2 ** 30) * Math.sqrt(3))\n\t\t\t\treturn 0x6ED9EBA1;\n\t\t\t}\n\t\t\tif (48 <= j && j <= 63) {\n\t\t\t\t// Math.floor((2 ** 30) * Math.sqrt(5))\n\t\t\t\treturn 0x8F1BBCDC;\n\t\t\t}\n\t\t\tif (64 <= j && j <= 79) {\n\t\t\t\t// Math.floor((2 ** 30) * Math.sqrt(7))\n\t\t\t\treturn 0xA953FD4E;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"KP\",\n\t\tvalue: function KP(j) // K'\n\t\t{\n\t\t\tif (0 <= j && j <= 15) {\n\t\t\t\t// Math.floor((2 ** 30) * Math.cbrt(2))\n\t\t\t\treturn 0x50A28BE6;\n\t\t\t}\n\t\t\tif (16 <= j && j <= 31) {\n\t\t\t\t// Math.floor((2 ** 30) * Math.cbrt(3))\n\t\t\t\treturn 0x5C4DD124;\n\t\t\t}\n\t\t\tif (32 <= j && j <= 47) {\n\t\t\t\t// Math.floor((2 ** 30) * Math.cbrt(5))\n\t\t\t\treturn 0x6D703EF3;\n\t\t\t}\n\t\t\tif (48 <= j && j <= 63) {\n\t\t\t\t// Math.floor((2 ** 30) * Math.cbrt(7))\n\t\t\t\treturn 0x7A6D76E9;\n\t\t\t}\n\t\t\tif (64 <= j && j <= 79) {\n\t\t\t\treturn 0x00000000;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"add_modulo32\",\n\t\tvalue: function add_modulo32() /* ...... */{\n\t\t\t// 1.  Modulo addition (addition modulo) is associative.\n\t\t\t//    https://proofwiki.org/wiki/Modulo_Addition_is_Associative\n\t\t\t// 2.  Bitwise operation in Javascript\n\t\t\t//    is done on 32-bits operands\n\t\t\t//    and results in a 32-bits value.\n\t\t\treturn Array.from(arguments).reduce(function (a, b) {\n\t\t\t\treturn a + b;\n\t\t\t}, 0) | 0;\n\t\t}\n\t}, {\n\t\tkey: \"rol32\",\n\t\tvalue: function rol32(value, count) {\n\t\t\t// Cyclic left shift (rotate) on 32-bits value.\n\t\t\treturn value << count | value >>> 32 - count;\n\t\t}\n\t}, {\n\t\tkey: \"hash\",\n\t\tvalue: function hash(message /* An ArrayBuffer. */) {\n\t\t\t//////////       Padding       //////////\n\n\t\t\t// The padded message.\n\t\t\tvar padded = RIPEMD160.pad(message);\n\n\t\t\t//////////     Compression     //////////\n\n\t\t\t// Message word selectors.\n\t\t\tvar r = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13];\n\t\t\tvar rP = [// r'\n\t\t\t5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11];\n\n\t\t\t// Amounts for 'rotate left' operation.\n\t\t\tvar s = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6];\n\t\t\tvar sP = [// s'\n\t\t\t8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];\n\n\t\t\t// The size, in bytes, of a word.\n\t\t\tvar word_size = 4;\n\n\t\t\t// The size, in bytes, of a 16-words block.\n\t\t\tvar block_size = 64;\n\n\t\t\t// The number of the 16-words blocks.\n\t\t\tvar t = padded.byteLength / block_size;\n\n\t\t\t//  The message after padding consists of t 16-word blocks that\n\t\t\t// are denoted with X_i[j], with 0≤i≤(t − 1) and 0≤j≤15.\n\t\t\tvar X = new Array(t).fill(undefined).map(function (_, i) {\n\t\t\t\treturn function (j) {\n\t\t\t\t\treturn new DataView(padded, i * block_size, block_size).getUint32(j * word_size, true // Little-endian\n\t\t\t\t\t);\n\t\t\t\t};\n\t\t\t});\n\n\t\t\t//  The result of RIPEMD-160 is contained in five 32-bit words,\n\t\t\t// which form the internal state of the algorithm. The final\n\t\t\t// content of these five 32-bit words is converted to a 160-bit\n\t\t\t// string, again using the little-endian convention.\n\t\t\tvar h = [0x67452301, // h_0\n\t\t\t0xEFCDAB89, // h_1\n\t\t\t0x98BADCFE, // h_2\n\t\t\t0x10325476, // h_3\n\t\t\t0xC3D2E1F0 // h_4\n\t\t\t];\n\n\t\t\tfor (var i = 0; i < t; ++i) {\n\t\t\t\tvar A = h[0],\n\t\t\t\t    B = h[1],\n\t\t\t\t    C = h[2],\n\t\t\t\t    D = h[3],\n\t\t\t\t    E = h[4];\n\t\t\t\tvar AP = A,\n\t\t\t\t    BP = B,\n\t\t\t\t    CP = C,\n\t\t\t\t    DP = D,\n\t\t\t\t    EP = E;\n\t\t\t\tfor (var j = 0; j < 80; ++j) {\n\t\t\t\t\t// Left rounds\n\t\t\t\t\tvar _T = RIPEMD160.add_modulo32(RIPEMD160.rol32(RIPEMD160.add_modulo32(A, RIPEMD160.f(j, B, C, D), X[i](r[j]), RIPEMD160.K(j)), s[j]), E);\n\t\t\t\t\tA = E;\n\t\t\t\t\tE = D;\n\t\t\t\t\tD = RIPEMD160.rol32(C, 10);\n\t\t\t\t\tC = B;\n\t\t\t\t\tB = _T;\n\n\t\t\t\t\t// Right rounds\n\t\t\t\t\t_T = RIPEMD160.add_modulo32(RIPEMD160.rol32(RIPEMD160.add_modulo32(AP, RIPEMD160.f(79 - j, BP, CP, DP), X[i](rP[j]), RIPEMD160.KP(j)), sP[j]), EP);\n\t\t\t\t\tAP = EP;\n\t\t\t\t\tEP = DP;\n\t\t\t\t\tDP = RIPEMD160.rol32(CP, 10);\n\t\t\t\t\tCP = BP;\n\t\t\t\t\tBP = _T;\n\t\t\t\t}\n\t\t\t\tvar T = RIPEMD160.add_modulo32(h[1], C, DP);\n\t\t\t\th[1] = RIPEMD160.add_modulo32(h[2], D, EP);\n\t\t\t\th[2] = RIPEMD160.add_modulo32(h[3], E, AP);\n\t\t\t\th[3] = RIPEMD160.add_modulo32(h[4], A, BP);\n\t\t\t\th[4] = RIPEMD160.add_modulo32(h[0], B, CP);\n\t\t\t\th[0] = T;\n\t\t\t}\n\n\t\t\t//  The final output string then consists of the concatenatation\n\t\t\t// of h_0, h_1, h_2, h_3, and h_4 after converting each h_i to a\n\t\t\t// 4-byte string using the little-endian convention.\n\t\t\tvar result = new ArrayBuffer(20);\n\t\t\tvar data_view = new DataView(result);\n\t\t\th.forEach(function (h_i, i) {\n\t\t\t\treturn data_view.setUint32(i * 4, h_i, true);\n\t\t\t});\n\t\t\treturn result;\n\t\t}\n\t}]);\n\n\treturn RIPEMD160;\n}();\n\nmodule.exports = {\n\tRIPEMD160: RIPEMD160\n};\n","\"use strict\";\n/**\n * @module Numeric\n */\n// copyright defined in eosjs/LICENSE.txt\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ripemd160 = require('./ripemd').RIPEMD160.hash;\nvar base58Chars = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nvar base64Chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nfunction create_base58_map() {\n    var base58M = Array(256).fill(-1);\n    for (var i = 0; i < base58Chars.length; ++i) {\n        base58M[base58Chars.charCodeAt(i)] = i;\n    }\n    return base58M;\n}\nvar base58Map = create_base58_map();\nfunction create_base64_map() {\n    var base64M = Array(256).fill(-1);\n    for (var i = 0; i < base64Chars.length; ++i) {\n        base64M[base64Chars.charCodeAt(i)] = i;\n    }\n    base64M['='.charCodeAt(0)] = 0;\n    return base64M;\n}\nvar base64Map = create_base64_map();\n/** Is `bignum` a negative number? */\nfunction isNegative(bignum) {\n    return (bignum[bignum.length - 1] & 0x80) !== 0;\n}\nexports.isNegative = isNegative;\n/** Negate `bignum` */\nfunction negate(bignum) {\n    var carry = 1;\n    for (var i = 0; i < bignum.length; ++i) {\n        var x = (~bignum[i] & 0xff) + carry;\n        bignum[i] = x;\n        carry = x >> 8;\n    }\n}\nexports.negate = negate;\n/**\n * Convert an unsigned decimal number in `s` to a bignum\n * @param size bignum size (bytes)\n */\nfunction decimalToBinary(size, s) {\n    var result = new Uint8Array(size);\n    for (var i = 0; i < s.length; ++i) {\n        var srcDigit = s.charCodeAt(i);\n        if (srcDigit < '0'.charCodeAt(0) || srcDigit > '9'.charCodeAt(0)) {\n            throw new Error('invalid number');\n        }\n        var carry = srcDigit - '0'.charCodeAt(0);\n        for (var j = 0; j < size; ++j) {\n            var x = result[j] * 10 + carry;\n            result[j] = x;\n            carry = x >> 8;\n        }\n        if (carry) {\n            throw new Error('number is out of range');\n        }\n    }\n    return result;\n}\nexports.decimalToBinary = decimalToBinary;\n/**\n * Convert a signed decimal number in `s` to a bignum\n * @param size bignum size (bytes)\n */\nfunction signedDecimalToBinary(size, s) {\n    var negative = s[0] === '-';\n    if (negative) {\n        s = s.substr(1);\n    }\n    var result = decimalToBinary(size, s);\n    if (negative) {\n        negate(result);\n        if (!isNegative(result)) {\n            throw new Error('number is out of range');\n        }\n    }\n    else if (isNegative(result)) {\n        throw new Error('number is out of range');\n    }\n    return result;\n}\nexports.signedDecimalToBinary = signedDecimalToBinary;\n/**\n * Convert `bignum` to an unsigned decimal number\n * @param minDigits 0-pad result to this many digits\n */\nfunction binaryToDecimal(bignum, minDigits) {\n    if (minDigits === void 0) { minDigits = 1; }\n    var result = Array(minDigits).fill('0'.charCodeAt(0));\n    for (var i = bignum.length - 1; i >= 0; --i) {\n        var carry = bignum[i];\n        for (var j = 0; j < result.length; ++j) {\n            var x = ((result[j] - '0'.charCodeAt(0)) << 8) + carry;\n            result[j] = '0'.charCodeAt(0) + x % 10;\n            carry = (x / 10) | 0;\n        }\n        while (carry) {\n            result.push('0'.charCodeAt(0) + carry % 10);\n            carry = (carry / 10) | 0;\n        }\n    }\n    result.reverse();\n    return String.fromCharCode.apply(String, __spread(result));\n}\nexports.binaryToDecimal = binaryToDecimal;\n/**\n * Convert `bignum` to a signed decimal number\n * @param minDigits 0-pad result to this many digits\n */\nfunction signedBinaryToDecimal(bignum, minDigits) {\n    if (minDigits === void 0) { minDigits = 1; }\n    if (isNegative(bignum)) {\n        var x = bignum.slice();\n        negate(x);\n        return '-' + binaryToDecimal(x, minDigits);\n    }\n    return binaryToDecimal(bignum, minDigits);\n}\nexports.signedBinaryToDecimal = signedBinaryToDecimal;\n/**\n * Convert an unsigned base-58 number in `s` to a bignum\n * @param size bignum size (bytes)\n */\nfunction base58ToBinary(size, s) {\n    var result = new Uint8Array(size);\n    for (var i = 0; i < s.length; ++i) {\n        var carry = base58Map[s.charCodeAt(i)];\n        if (carry < 0) {\n            throw new Error('invalid base-58 value');\n        }\n        for (var j = 0; j < size; ++j) {\n            var x = result[j] * 58 + carry;\n            result[j] = x;\n            carry = x >> 8;\n        }\n        if (carry) {\n            throw new Error('base-58 value is out of range');\n        }\n    }\n    result.reverse();\n    return result;\n}\nexports.base58ToBinary = base58ToBinary;\n/**\n * Convert `bignum` to a base-58 number\n * @param minDigits 0-pad result to this many digits\n */\nfunction binaryToBase58(bignum, minDigits) {\n    if (minDigits === void 0) { minDigits = 1; }\n    var e_1, _a, e_2, _b;\n    var result = [];\n    try {\n        for (var bignum_1 = __values(bignum), bignum_1_1 = bignum_1.next(); !bignum_1_1.done; bignum_1_1 = bignum_1.next()) {\n            var byte = bignum_1_1.value;\n            var carry = byte;\n            for (var j = 0; j < result.length; ++j) {\n                var x = (base58Map[result[j]] << 8) + carry;\n                result[j] = base58Chars.charCodeAt(x % 58);\n                carry = (x / 58) | 0;\n            }\n            while (carry) {\n                result.push(base58Chars.charCodeAt(carry % 58));\n                carry = (carry / 58) | 0;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (bignum_1_1 && !bignum_1_1.done && (_a = bignum_1.return)) _a.call(bignum_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    try {\n        for (var bignum_2 = __values(bignum), bignum_2_1 = bignum_2.next(); !bignum_2_1.done; bignum_2_1 = bignum_2.next()) {\n            var byte = bignum_2_1.value;\n            if (byte) {\n                break;\n            }\n            else {\n                result.push('1'.charCodeAt(0));\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (bignum_2_1 && !bignum_2_1.done && (_b = bignum_2.return)) _b.call(bignum_2);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    result.reverse();\n    return String.fromCharCode.apply(String, __spread(result));\n}\nexports.binaryToBase58 = binaryToBase58;\n/** Convert an unsigned base-64 number in `s` to a bignum */\nfunction base64ToBinary(s) {\n    var len = s.length;\n    if ((len & 3) === 1 && s[len - 1] === '=') {\n        len -= 1;\n    } // fc appends an extra '='\n    if ((len & 3) !== 0) {\n        throw new Error('base-64 value is not padded correctly');\n    }\n    var groups = len >> 2;\n    var bytes = groups * 3;\n    if (len > 0 && s[len - 1] === '=') {\n        if (s[len - 2] === '=') {\n            bytes -= 2;\n        }\n        else {\n            bytes -= 1;\n        }\n    }\n    var result = new Uint8Array(bytes);\n    for (var group = 0; group < groups; ++group) {\n        var digit0 = base64Map[s.charCodeAt(group * 4 + 0)];\n        var digit1 = base64Map[s.charCodeAt(group * 4 + 1)];\n        var digit2 = base64Map[s.charCodeAt(group * 4 + 2)];\n        var digit3 = base64Map[s.charCodeAt(group * 4 + 3)];\n        result[group * 3 + 0] = (digit0 << 2) | (digit1 >> 4);\n        if (group * 3 + 1 < bytes) {\n            result[group * 3 + 1] = ((digit1 & 15) << 4) | (digit2 >> 2);\n        }\n        if (group * 3 + 2 < bytes) {\n            result[group * 3 + 2] = ((digit2 & 3) << 6) | digit3;\n        }\n    }\n    return result;\n}\nexports.base64ToBinary = base64ToBinary;\n/** Key types this library supports */\nvar KeyType;\n(function (KeyType) {\n    KeyType[KeyType[\"k1\"] = 0] = \"k1\";\n    KeyType[KeyType[\"r1\"] = 1] = \"r1\";\n})(KeyType = exports.KeyType || (exports.KeyType = {}));\n/** Public key data size, excluding type field */\nexports.publicKeyDataSize = 33;\n/** Private key data size, excluding type field */\nexports.privateKeyDataSize = 32;\n/** Signature data size, excluding type field */\nexports.signatureDataSize = 65;\nfunction digestSuffixRipemd160(data, suffix) {\n    var d = new Uint8Array(data.length + suffix.length);\n    for (var i = 0; i < data.length; ++i) {\n        d[i] = data[i];\n    }\n    for (var i = 0; i < suffix.length; ++i) {\n        d[data.length + i] = suffix.charCodeAt(i);\n    }\n    return ripemd160(d);\n}\nfunction stringToKey(s, type, size, suffix) {\n    var whole = base58ToBinary(size + 4, s);\n    var result = { type: type, data: new Uint8Array(whole.buffer, 0, size) };\n    var digest = new Uint8Array(digestSuffixRipemd160(result.data, suffix));\n    if (digest[0] !== whole[size + 0] || digest[1] !== whole[size + 1]\n        || digest[2] !== whole[size + 2] || digest[3] !== whole[size + 3]) {\n        throw new Error('checksum doesn\\'t match');\n    }\n    return result;\n}\nfunction keyToString(key, suffix, prefix) {\n    var digest = new Uint8Array(digestSuffixRipemd160(key.data, suffix));\n    var whole = new Uint8Array(key.data.length + 4);\n    for (var i = 0; i < key.data.length; ++i) {\n        whole[i] = key.data[i];\n    }\n    for (var i = 0; i < 4; ++i) {\n        whole[i + key.data.length] = digest[i];\n    }\n    return prefix + binaryToBase58(whole);\n}\n/** Convert key in `s` to binary form */\nfunction stringToPublicKey(s) {\n    if (typeof s !== 'string') {\n        throw new Error('expected string containing public key');\n    }\n    if (s.substr(0, 3) === 'EOS') {\n        var whole = base58ToBinary(exports.publicKeyDataSize + 4, s.substr(3));\n        var key = { type: KeyType.k1, data: new Uint8Array(exports.publicKeyDataSize) };\n        for (var i = 0; i < exports.publicKeyDataSize; ++i) {\n            key.data[i] = whole[i];\n        }\n        var digest = new Uint8Array(ripemd160(key.data));\n        if (digest[0] !== whole[exports.publicKeyDataSize] || digest[1] !== whole[34]\n            || digest[2] !== whole[35] || digest[3] !== whole[36]) {\n            throw new Error('checksum doesn\\'t match');\n        }\n        return key;\n    }\n    else if (s.substr(0, 7) === 'PUB_K1_') {\n        return stringToKey(s.substr(7), KeyType.k1, exports.publicKeyDataSize, 'K1');\n    }\n    else if (s.substr(0, 7) === 'PUB_R1_') {\n        return stringToKey(s.substr(7), KeyType.r1, exports.publicKeyDataSize, 'R1');\n    }\n    else {\n        throw new Error('unrecognized public key format');\n    }\n}\nexports.stringToPublicKey = stringToPublicKey;\n/** Convert `key` to string (base-58) form */\nfunction publicKeyToString(key) {\n    if (key.type === KeyType.k1 && key.data.length === exports.publicKeyDataSize) {\n        return keyToString(key, 'K1', 'PUB_K1_');\n    }\n    else if (key.type === KeyType.r1 && key.data.length === exports.publicKeyDataSize) {\n        return keyToString(key, 'R1', 'PUB_R1_');\n    }\n    else {\n        throw new Error('unrecognized public key format');\n    }\n}\nexports.publicKeyToString = publicKeyToString;\n/** If a key is in the legacy format (`EOS` prefix), then convert it to the new format (`PUB_K1_`).\n * Leaves other formats untouched\n */\nfunction convertLegacyPublicKey(s) {\n    if (s.substr(0, 3) === 'EOS') {\n        return publicKeyToString(stringToPublicKey(s));\n    }\n    return s;\n}\nexports.convertLegacyPublicKey = convertLegacyPublicKey;\n/** If a key is in the legacy format (`EOS` prefix), then convert it to the new format (`PUB_K1_`).\n * Leaves other formats untouched\n */\nfunction convertLegacyPublicKeys(keys) {\n    return keys.map(convertLegacyPublicKey);\n}\nexports.convertLegacyPublicKeys = convertLegacyPublicKeys;\n/** Convert key in `s` to binary form */\nfunction stringToPrivateKey(s) {\n    if (typeof s !== 'string') {\n        throw new Error('expected string containing private key');\n    }\n    if (s.substr(0, 7) === 'PVT_R1_') {\n        return stringToKey(s.substr(7), KeyType.r1, exports.privateKeyDataSize, 'R1');\n    }\n    else {\n        throw new Error('unrecognized private key format');\n    }\n}\nexports.stringToPrivateKey = stringToPrivateKey;\n/** Convert `key` to string (base-58) form */\nfunction privateKeyToString(key) {\n    if (key.type === KeyType.r1) {\n        return keyToString(key, 'R1', 'PVT_R1_');\n    }\n    else {\n        throw new Error('unrecognized private key format');\n    }\n}\nexports.privateKeyToString = privateKeyToString;\n/** Convert key in `s` to binary form */\nfunction stringToSignature(s) {\n    if (typeof s !== 'string') {\n        throw new Error('expected string containing signature');\n    }\n    if (s.substr(0, 7) === 'SIG_K1_') {\n        return stringToKey(s.substr(7), KeyType.k1, exports.signatureDataSize, 'K1');\n    }\n    else if (s.substr(0, 7) === 'SIG_R1_') {\n        return stringToKey(s.substr(7), KeyType.r1, exports.signatureDataSize, 'R1');\n    }\n    else {\n        throw new Error('unrecognized signature format');\n    }\n}\nexports.stringToSignature = stringToSignature;\n/** Convert `signature` to string (base-58) form */\nfunction signatureToString(signature) {\n    if (signature.type === KeyType.k1) {\n        return keyToString(signature, 'K1', 'SIG_K1_');\n    }\n    else if (signature.type === KeyType.r1) {\n        return keyToString(signature, 'R1', 'SIG_R1_');\n    }\n    else {\n        throw new Error('unrecognized signature format');\n    }\n}\nexports.signatureToString = signatureToString;\n//# sourceMappingURL=eosjs-numeric.js.map","\"use strict\";\n/**\n * @module Serialize\n */\n// copyright defined in eosjs/LICENSE.txt\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numeric = require(\"./eosjs-numeric\");\n/** State for serialize() and deserialize() */\nvar SerializerState = /** @class */ (function () {\n    function SerializerState(options) {\n        if (options === void 0) { options = {}; }\n        /** Have any binary extensions been skipped? */\n        this.skippedBinaryExtension = false;\n        this.options = options;\n    }\n    return SerializerState;\n}());\nexports.SerializerState = SerializerState;\n/** Serialize and deserialize data */\nvar SerialBuffer = /** @class */ (function () {\n    /**\n     * @param __namedParameters\n     *    * `array`: `null` if serializing, or binary data to deserialize\n     *    * `textEncoder`: `TextEncoder` instance to use. Pass in `null` if running in a browser\n     *    * `textDecoder`: `TextDecider` instance to use. Pass in `null` if running in a browser\n     */\n    function SerialBuffer(_a) {\n        var _b = _a === void 0 ? {} : _a, textEncoder = _b.textEncoder, textDecoder = _b.textDecoder, array = _b.array;\n        /** Current position while reading (deserializing) */\n        this.readPos = 0;\n        this.array = array || new Uint8Array(1024);\n        this.length = array ? array.length : 0;\n        this.textEncoder = textEncoder || new TextEncoder();\n        this.textDecoder = textDecoder || new TextDecoder('utf-8', { fatal: true });\n    }\n    /** Resize `array` if needed to have at least `size` bytes free */\n    SerialBuffer.prototype.reserve = function (size) {\n        if (this.length + size <= this.array.length) {\n            return;\n        }\n        var l = this.array.length;\n        while (this.length + size > l) {\n            l = Math.ceil(l * 1.5);\n        }\n        var newArray = new Uint8Array(l);\n        newArray.set(this.array);\n        this.array = newArray;\n    };\n    /** Is there data available to read? */\n    SerialBuffer.prototype.haveReadData = function () {\n        return this.readPos < this.length;\n    };\n    /** Restart reading from the beginning */\n    SerialBuffer.prototype.restartRead = function () {\n        this.readPos = 0;\n    };\n    /** Return data with excess storage trimmed away */\n    SerialBuffer.prototype.asUint8Array = function () {\n        return new Uint8Array(this.array.buffer, this.array.byteOffset, this.length);\n    };\n    /** Append bytes */\n    SerialBuffer.prototype.pushArray = function (v) {\n        this.reserve(v.length);\n        this.array.set(v, this.length);\n        this.length += v.length;\n    };\n    /** Append bytes */\n    SerialBuffer.prototype.push = function () {\n        var v = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            v[_i] = arguments[_i];\n        }\n        this.pushArray(v);\n    };\n    /** Get a single byte */\n    SerialBuffer.prototype.get = function () {\n        if (this.readPos < this.length) {\n            return this.array[this.readPos++];\n        }\n        throw new Error('Read past end of buffer');\n    };\n    /** Append bytes in `v`. Throws if `len` doesn't match `v.length` */\n    SerialBuffer.prototype.pushUint8ArrayChecked = function (v, len) {\n        if (v.length !== len) {\n            throw new Error('Binary data has incorrect size');\n        }\n        this.pushArray(v);\n    };\n    /** Get `len` bytes */\n    SerialBuffer.prototype.getUint8Array = function (len) {\n        if (this.readPos + len > this.length) {\n            throw new Error('Read past end of buffer');\n        }\n        var result = new Uint8Array(this.array.buffer, this.array.byteOffset + this.readPos, len);\n        this.readPos += len;\n        return result;\n    };\n    /** Append a `uint16` */\n    SerialBuffer.prototype.pushUint16 = function (v) {\n        this.push((v >> 0) & 0xff, (v >> 8) & 0xff);\n    };\n    /** Get a `uint16` */\n    SerialBuffer.prototype.getUint16 = function () {\n        var v = 0;\n        v |= this.get() << 0;\n        v |= this.get() << 8;\n        return v;\n    };\n    /** Append a `uint32` */\n    SerialBuffer.prototype.pushUint32 = function (v) {\n        this.push((v >> 0) & 0xff, (v >> 8) & 0xff, (v >> 16) & 0xff, (v >> 24) & 0xff);\n    };\n    /** Get a `uint32` */\n    SerialBuffer.prototype.getUint32 = function () {\n        var v = 0;\n        v |= this.get() << 0;\n        v |= this.get() << 8;\n        v |= this.get() << 16;\n        v |= this.get() << 24;\n        return v >>> 0;\n    };\n    /** Append a `uint64`. *Caution*: `number` only has 53 bits of precision */\n    SerialBuffer.prototype.pushNumberAsUint64 = function (v) {\n        this.pushUint32(v >>> 0);\n        this.pushUint32(Math.floor(v / 4294967296) >>> 0);\n    };\n    /**\n     * Get a `uint64` as a `number`. *Caution*: `number` only has 53 bits of precision; some values will change.\n     * `numeric.binaryToDecimal(serialBuffer.getUint8Array(8))` recommended instead\n     */\n    SerialBuffer.prototype.getUint64AsNumber = function () {\n        var low = this.getUint32();\n        var high = this.getUint32();\n        return (high >>> 0) * 4294967296 + (low >>> 0);\n    };\n    /** Append a `varuint32` */\n    SerialBuffer.prototype.pushVaruint32 = function (v) {\n        while (true) {\n            if (v >>> 7) {\n                this.push(0x80 | (v & 0x7f));\n                v = v >>> 7;\n            }\n            else {\n                this.push(v);\n                break;\n            }\n        }\n    };\n    /** Get a `varuint32` */\n    SerialBuffer.prototype.getVaruint32 = function () {\n        var v = 0;\n        var bit = 0;\n        while (true) {\n            var b = this.get();\n            v |= (b & 0x7f) << bit;\n            bit += 7;\n            if (!(b & 0x80)) {\n                break;\n            }\n        }\n        return v >>> 0;\n    };\n    /** Append a `varint32` */\n    SerialBuffer.prototype.pushVarint32 = function (v) {\n        this.pushVaruint32((v << 1) ^ (v >> 31));\n    };\n    /** Get a `varint32` */\n    SerialBuffer.prototype.getVarint32 = function () {\n        var v = this.getVaruint32();\n        if (v & 1) {\n            return ((~v) >> 1) | 2147483648;\n        }\n        else {\n            return v >>> 1;\n        }\n    };\n    /** Append a `float32` */\n    SerialBuffer.prototype.pushFloat32 = function (v) {\n        this.pushArray(new Uint8Array((new Float32Array([v])).buffer));\n    };\n    /** Get a `float32` */\n    SerialBuffer.prototype.getFloat32 = function () {\n        return new Float32Array(this.getUint8Array(4).slice().buffer)[0];\n    };\n    /** Append a `float64` */\n    SerialBuffer.prototype.pushFloat64 = function (v) {\n        this.pushArray(new Uint8Array((new Float64Array([v])).buffer));\n    };\n    /** Get a `float64` */\n    SerialBuffer.prototype.getFloat64 = function () {\n        return new Float64Array(this.getUint8Array(8).slice().buffer)[0];\n    };\n    /** Append a `name` */\n    SerialBuffer.prototype.pushName = function (s) {\n        if (typeof s !== 'string') {\n            throw new Error('Expected string containing name');\n        }\n        function charToSymbol(c) {\n            if (c >= 'a'.charCodeAt(0) && c <= 'z'.charCodeAt(0)) {\n                return (c - 'a'.charCodeAt(0)) + 6;\n            }\n            if (c >= '1'.charCodeAt(0) && c <= '5'.charCodeAt(0)) {\n                return (c - '1'.charCodeAt(0)) + 1;\n            }\n            return 0;\n        }\n        var a = new Uint8Array(8);\n        var bit = 63;\n        for (var i = 0; i < s.length; ++i) {\n            var c = charToSymbol(s.charCodeAt(i));\n            if (bit < 5) {\n                c = c << 1;\n            }\n            for (var j = 4; j >= 0; --j) {\n                if (bit >= 0) {\n                    a[Math.floor(bit / 8)] |= ((c >> j) & 1) << (bit % 8);\n                    --bit;\n                }\n            }\n        }\n        this.pushArray(a);\n    };\n    /** Get a `name` */\n    SerialBuffer.prototype.getName = function () {\n        var a = this.getUint8Array(8);\n        var result = '';\n        for (var bit = 63; bit >= 0;) {\n            var c = 0;\n            for (var i = 0; i < 5; ++i) {\n                if (bit >= 0) {\n                    c = (c << 1) | ((a[Math.floor(bit / 8)] >> (bit % 8)) & 1);\n                    --bit;\n                }\n            }\n            if (c >= 6) {\n                result += String.fromCharCode(c + 'a'.charCodeAt(0) - 6);\n            }\n            else if (c >= 1) {\n                result += String.fromCharCode(c + '1'.charCodeAt(0) - 1);\n            }\n            else {\n                result += '.';\n            }\n        }\n        while (result.endsWith('.')) {\n            result = result.substr(0, result.length - 1);\n        }\n        return result;\n    };\n    /** Append length-prefixed binary data */\n    SerialBuffer.prototype.pushBytes = function (v) {\n        this.pushVaruint32(v.length);\n        this.pushArray(v);\n    };\n    /** Get length-prefixed binary data */\n    SerialBuffer.prototype.getBytes = function () {\n        return this.getUint8Array(this.getVaruint32());\n    };\n    /** Append a string */\n    SerialBuffer.prototype.pushString = function (v) {\n        this.pushBytes(this.textEncoder.encode(v));\n    };\n    /** Get a string */\n    SerialBuffer.prototype.getString = function () {\n        return this.textDecoder.decode(this.getBytes());\n    };\n    /** Append a `symbol_code`. Unlike `symbol`, `symbol_code` doesn't include a precision. */\n    SerialBuffer.prototype.pushSymbolCode = function (name) {\n        if (typeof name !== 'string') {\n            throw new Error('Expected string containing symbol_code');\n        }\n        var a = [];\n        a.push.apply(a, __spread(this.textEncoder.encode(name)));\n        while (a.length < 8) {\n            a.push(0);\n        }\n        this.pushArray(a.slice(0, 8));\n    };\n    /** Get a `symbol_code`. Unlike `symbol`, `symbol_code` doesn't include a precision. */\n    SerialBuffer.prototype.getSymbolCode = function () {\n        var a = this.getUint8Array(8);\n        var len;\n        for (len = 0; len < a.length; ++len) {\n            if (!a[len]) {\n                break;\n            }\n        }\n        var name = this.textDecoder.decode(new Uint8Array(a.buffer, a.byteOffset, len));\n        return name;\n    };\n    /** Append a `symbol` */\n    SerialBuffer.prototype.pushSymbol = function (_a) {\n        var name = _a.name, precision = _a.precision;\n        var a = [precision & 0xff];\n        a.push.apply(a, __spread(this.textEncoder.encode(name)));\n        while (a.length < 8) {\n            a.push(0);\n        }\n        this.pushArray(a.slice(0, 8));\n    };\n    /** Get a `symbol` */\n    SerialBuffer.prototype.getSymbol = function () {\n        var precision = this.get();\n        var a = this.getUint8Array(7);\n        var len;\n        for (len = 0; len < a.length; ++len) {\n            if (!a[len]) {\n                break;\n            }\n        }\n        var name = this.textDecoder.decode(new Uint8Array(a.buffer, a.byteOffset, len));\n        return { name: name, precision: precision };\n    };\n    /** Append an asset */\n    SerialBuffer.prototype.pushAsset = function (s) {\n        if (typeof s !== 'string') {\n            throw new Error('Expected string containing asset');\n        }\n        s = s.trim();\n        var pos = 0;\n        var amount = '';\n        var precision = 0;\n        if (s[pos] === '-') {\n            amount += '-';\n            ++pos;\n        }\n        var foundDigit = false;\n        while (pos < s.length && s.charCodeAt(pos) >= '0'.charCodeAt(0) && s.charCodeAt(pos) <= '9'.charCodeAt(0)) {\n            foundDigit = true;\n            amount += s[pos];\n            ++pos;\n        }\n        if (!foundDigit) {\n            throw new Error('Asset must begin with a number');\n        }\n        if (s[pos] === '.') {\n            ++pos;\n            while (pos < s.length && s.charCodeAt(pos) >= '0'.charCodeAt(0) && s.charCodeAt(pos) <= '9'.charCodeAt(0)) {\n                amount += s[pos];\n                ++precision;\n                ++pos;\n            }\n        }\n        var name = s.substr(pos).trim();\n        this.pushArray(numeric.signedDecimalToBinary(8, amount));\n        this.pushSymbol({ name: name, precision: precision });\n    };\n    /** Get an asset */\n    SerialBuffer.prototype.getAsset = function () {\n        var amount = this.getUint8Array(8);\n        var _a = this.getSymbol(), name = _a.name, precision = _a.precision;\n        var s = numeric.signedBinaryToDecimal(amount, precision + 1);\n        if (precision) {\n            s = s.substr(0, s.length - precision) + '.' + s.substr(s.length - precision);\n        }\n        return s + ' ' + name;\n    };\n    /** Append a public key */\n    SerialBuffer.prototype.pushPublicKey = function (s) {\n        var key = numeric.stringToPublicKey(s);\n        this.push(key.type);\n        this.pushArray(key.data);\n    };\n    /** Get a public key */\n    SerialBuffer.prototype.getPublicKey = function () {\n        var type = this.get();\n        var data = this.getUint8Array(numeric.publicKeyDataSize);\n        return numeric.publicKeyToString({ type: type, data: data });\n    };\n    /** Append a private key */\n    SerialBuffer.prototype.pushPrivateKey = function (s) {\n        var key = numeric.stringToPrivateKey(s);\n        this.push(key.type);\n        this.pushArray(key.data);\n    };\n    /** Get a private key */\n    SerialBuffer.prototype.getPrivateKey = function () {\n        var type = this.get();\n        var data = this.getUint8Array(numeric.privateKeyDataSize);\n        return numeric.privateKeyToString({ type: type, data: data });\n    };\n    /** Append a signature */\n    SerialBuffer.prototype.pushSignature = function (s) {\n        var key = numeric.stringToSignature(s);\n        this.push(key.type);\n        this.pushArray(key.data);\n    };\n    /** Get a signature */\n    SerialBuffer.prototype.getSignature = function () {\n        var type = this.get();\n        var data = this.getUint8Array(numeric.signatureDataSize);\n        return numeric.signatureToString({ type: type, data: data });\n    };\n    return SerialBuffer;\n}()); // SerialBuffer\nexports.SerialBuffer = SerialBuffer;\n/** Is this a supported ABI version? */\nfunction supportedAbiVersion(version) {\n    return version.startsWith('eosio::abi/1.');\n}\nexports.supportedAbiVersion = supportedAbiVersion;\nfunction checkDateParse(date) {\n    var result = Date.parse(date);\n    if (Number.isNaN(result)) {\n        throw new Error('Invalid time format');\n    }\n    return result;\n}\n/** Convert date in ISO format to `time_point` (miliseconds since epoch) */\nfunction dateToTimePoint(date) {\n    return Math.round(checkDateParse(date + 'Z') * 1000);\n}\nexports.dateToTimePoint = dateToTimePoint;\n/** Convert `time_point` (miliseconds since epoch) to date in ISO format */\nfunction timePointToDate(us) {\n    var s = (new Date(us / 1000)).toISOString();\n    return s.substr(0, s.length - 1);\n}\nexports.timePointToDate = timePointToDate;\n/** Convert date in ISO format to `time_point_sec` (seconds since epoch) */\nfunction dateToTimePointSec(date) {\n    return Math.round(checkDateParse(date + 'Z') / 1000);\n}\nexports.dateToTimePointSec = dateToTimePointSec;\n/** Convert `time_point_sec` (seconds since epoch) to to date in ISO format */\nfunction timePointSecToDate(sec) {\n    var s = (new Date(sec * 1000)).toISOString();\n    return s.substr(0, s.length - 1);\n}\nexports.timePointSecToDate = timePointSecToDate;\n/** Convert date in ISO format to `block_timestamp_type` (half-seconds since a different epoch) */\nfunction dateToBlockTimestamp(date) {\n    return Math.round((checkDateParse(date + 'Z') - 946684800000) / 500);\n}\nexports.dateToBlockTimestamp = dateToBlockTimestamp;\n/** Convert `block_timestamp_type` (half-seconds since a different epoch) to to date in ISO format */\nfunction blockTimestampToDate(slot) {\n    var s = (new Date(slot * 500 + 946684800000)).toISOString();\n    return s.substr(0, s.length - 1);\n}\nexports.blockTimestampToDate = blockTimestampToDate;\n/** Convert `string` to `Symbol`. format: `precision,NAME`. */\nfunction stringToSymbol(s) {\n    if (typeof s !== 'string') {\n        throw new Error('Expected string containing symbol');\n    }\n    var m = s.match(/^([0-9]+),([A-Z]+)$/);\n    if (!m) {\n        throw new Error('Invalid symbol');\n    }\n    return { name: m[2], precision: +m[1] };\n}\nexports.stringToSymbol = stringToSymbol;\n/** Convert `Symbol` to `string`. format: `precision,NAME`. */\nfunction symbolToString(_a) {\n    var name = _a.name, precision = _a.precision;\n    return precision + ',' + name;\n}\nexports.symbolToString = symbolToString;\n/** Convert binary data to hex */\nfunction arrayToHex(data) {\n    var e_1, _a;\n    var result = '';\n    try {\n        for (var data_1 = __values(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {\n            var x = data_1_1.value;\n            result += ('00' + x.toString(16)).slice(-2);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (data_1_1 && !data_1_1.done && (_a = data_1.return)) _a.call(data_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return result.toUpperCase();\n}\nexports.arrayToHex = arrayToHex;\n/** Convert hex to binary data */\nfunction hexToUint8Array(hex) {\n    if (typeof hex !== 'string') {\n        throw new Error('Expected string containing hex digits');\n    }\n    if (hex.length % 2) {\n        throw new Error('Odd number of hex digits');\n    }\n    var l = hex.length / 2;\n    var result = new Uint8Array(l);\n    for (var i = 0; i < l; ++i) {\n        var x = parseInt(hex.substr(i * 2, 2), 16);\n        if (Number.isNaN(x)) {\n            throw new Error('Expected hex string');\n        }\n        result[i] = x;\n    }\n    return result;\n}\nexports.hexToUint8Array = hexToUint8Array;\nfunction serializeUnknown(buffer, data) {\n    throw new Error('Don\\'t know how to serialize ' + this.name);\n}\nfunction deserializeUnknown(buffer) {\n    throw new Error('Don\\'t know how to deserialize ' + this.name);\n}\nfunction serializeStruct(buffer, data, state, allowExtensions) {\n    if (state === void 0) { state = new SerializerState(); }\n    if (allowExtensions === void 0) { allowExtensions = true; }\n    var e_2, _a;\n    if (typeof data !== 'object') {\n        throw new Error('expected object containing data: ' + JSON.stringify(data));\n    }\n    if (this.base) {\n        this.base.serialize(buffer, data, state, allowExtensions);\n    }\n    try {\n        for (var _b = __values(this.fields), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var field = _c.value;\n            if (field.name in data) {\n                if (state.skippedBinaryExtension) {\n                    throw new Error('unexpected ' + this.name + '.' + field.name);\n                }\n                field.type.serialize(buffer, data[field.name], state, allowExtensions && field === this.fields[this.fields.length - 1]);\n            }\n            else {\n                if (allowExtensions && field.type.extensionOf) {\n                    state.skippedBinaryExtension = true;\n                }\n                else {\n                    throw new Error('missing ' + this.name + '.' + field.name + ' (type=' + field.type.name + ')');\n                }\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n}\nfunction deserializeStruct(buffer, state, allowExtensions) {\n    if (state === void 0) { state = new SerializerState(); }\n    if (allowExtensions === void 0) { allowExtensions = true; }\n    var e_3, _a;\n    var result;\n    if (this.base) {\n        result = this.base.deserialize(buffer, state, allowExtensions);\n    }\n    else {\n        result = {};\n    }\n    try {\n        for (var _b = __values(this.fields), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var field = _c.value;\n            if (allowExtensions && field.type.extensionOf && !buffer.haveReadData()) {\n                state.skippedBinaryExtension = true;\n            }\n            else {\n                result[field.name] = field.type.deserialize(buffer, state, allowExtensions);\n            }\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return result;\n}\nfunction serializeVariant(buffer, data, state, allowExtensions) {\n    if (!Array.isArray(data) || data.length !== 2 || typeof data[0] !== 'string') {\n        throw new Error('expected variant: [\"type\", value]');\n    }\n    var i = this.fields.findIndex(function (field) { return field.name === data[0]; });\n    if (i < 0) {\n        throw new Error(\"type \\\"\" + data[0] + \"\\\" is not valid for variant\");\n    }\n    buffer.pushVaruint32(i);\n    this.fields[i].type.serialize(buffer, data[1], state, allowExtensions);\n}\nfunction deserializeVariant(buffer, state, allowExtensions) {\n    var i = buffer.getVaruint32();\n    if (i >= this.fields.length) {\n        throw new Error(\"type index \" + i + \" is not valid for variant\");\n    }\n    var field = this.fields[i];\n    return [field.name, field.type.deserialize(buffer, state, allowExtensions)];\n}\nfunction serializeArray(buffer, data, state, allowExtensions) {\n    var e_4, _a;\n    buffer.pushVaruint32(data.length);\n    try {\n        for (var data_2 = __values(data), data_2_1 = data_2.next(); !data_2_1.done; data_2_1 = data_2.next()) {\n            var item = data_2_1.value;\n            this.arrayOf.serialize(buffer, item, state, false);\n        }\n    }\n    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n    finally {\n        try {\n            if (data_2_1 && !data_2_1.done && (_a = data_2.return)) _a.call(data_2);\n        }\n        finally { if (e_4) throw e_4.error; }\n    }\n}\nfunction deserializeArray(buffer, state, allowExtensions) {\n    var len = buffer.getVaruint32();\n    var result = [];\n    for (var i = 0; i < len; ++i) {\n        result.push(this.arrayOf.deserialize(buffer, state, false));\n    }\n    return result;\n}\nfunction serializeOptional(buffer, data, state, allowExtensions) {\n    if (data === null || data === undefined) {\n        buffer.push(0);\n    }\n    else {\n        buffer.push(1);\n        this.optionalOf.serialize(buffer, data, state, allowExtensions);\n    }\n}\nfunction deserializeOptional(buffer, state, allowExtensions) {\n    if (buffer.get()) {\n        return this.optionalOf.deserialize(buffer, state, allowExtensions);\n    }\n    else {\n        return null;\n    }\n}\nfunction serializeExtension(buffer, data, state, allowExtensions) {\n    this.extensionOf.serialize(buffer, data, state, allowExtensions);\n}\nfunction deserializeExtension(buffer, state, allowExtensions) {\n    return this.extensionOf.deserialize(buffer, state, allowExtensions);\n}\nfunction createType(attrs) {\n    return __assign({ name: '<missing name>', aliasOfName: '', arrayOf: null, optionalOf: null, extensionOf: null, baseName: '', base: null, fields: [], serialize: serializeUnknown, deserialize: deserializeUnknown }, attrs);\n}\nfunction checkRange(orig, converted) {\n    if (Number.isNaN(+orig) || Number.isNaN(+converted) || (typeof orig !== 'number' && typeof orig !== 'string')) {\n        throw new Error('Expected number');\n    }\n    if (+orig !== +converted) {\n        throw new Error('Number is out of range');\n    }\n    return +orig;\n}\n/** Create the set of types built-in to the abi format */\nfunction createInitialTypes() {\n    var result = new Map(Object.entries({\n        bool: createType({\n            name: 'bool',\n            serialize: function (buffer, data) {\n                if (typeof data !== 'boolean') {\n                    throw new Error('Expected true or false');\n                }\n                buffer.push(data ? 1 : 0);\n            },\n            deserialize: function (buffer) { return !!buffer.get(); },\n        }),\n        uint8: createType({\n            name: 'uint8',\n            serialize: function (buffer, data) { buffer.push(checkRange(data, data & 0xff)); },\n            deserialize: function (buffer) { return buffer.get(); },\n        }),\n        int8: createType({\n            name: 'int8',\n            serialize: function (buffer, data) { buffer.push(checkRange(data, data << 24 >> 24)); },\n            deserialize: function (buffer) { return buffer.get() << 24 >> 24; },\n        }),\n        uint16: createType({\n            name: 'uint16',\n            serialize: function (buffer, data) { buffer.pushUint16(checkRange(data, data & 0xffff)); },\n            deserialize: function (buffer) { return buffer.getUint16(); },\n        }),\n        int16: createType({\n            name: 'int16',\n            serialize: function (buffer, data) { buffer.pushUint16(checkRange(data, data << 16 >> 16)); },\n            deserialize: function (buffer) { return buffer.getUint16() << 16 >> 16; },\n        }),\n        uint32: createType({\n            name: 'uint32',\n            serialize: function (buffer, data) { buffer.pushUint32(checkRange(data, data >>> 0)); },\n            deserialize: function (buffer) { return buffer.getUint32(); },\n        }),\n        uint64: createType({\n            name: 'uint64',\n            serialize: function (buffer, data) {\n                buffer.pushArray(numeric.decimalToBinary(8, '' + data));\n            },\n            deserialize: function (buffer) { return numeric.binaryToDecimal(buffer.getUint8Array(8)); },\n        }),\n        int64: createType({\n            name: 'int64',\n            serialize: function (buffer, data) {\n                buffer.pushArray(numeric.signedDecimalToBinary(8, '' + data));\n            },\n            deserialize: function (buffer) { return numeric.signedBinaryToDecimal(buffer.getUint8Array(8)); },\n        }),\n        int32: createType({\n            name: 'int32',\n            serialize: function (buffer, data) { buffer.pushUint32(checkRange(data, data | 0)); },\n            deserialize: function (buffer) { return buffer.getUint32() | 0; },\n        }),\n        varuint32: createType({\n            name: 'varuint32',\n            serialize: function (buffer, data) { buffer.pushVaruint32(checkRange(data, data >>> 0)); },\n            deserialize: function (buffer) { return buffer.getVaruint32(); },\n        }),\n        varint32: createType({\n            name: 'varint32',\n            serialize: function (buffer, data) { buffer.pushVarint32(checkRange(data, data | 0)); },\n            deserialize: function (buffer) { return buffer.getVarint32(); },\n        }),\n        uint128: createType({\n            name: 'uint128',\n            serialize: function (buffer, data) { buffer.pushArray(numeric.decimalToBinary(16, '' + data)); },\n            deserialize: function (buffer) { return numeric.binaryToDecimal(buffer.getUint8Array(16)); },\n        }),\n        int128: createType({\n            name: 'int128',\n            serialize: function (buffer, data) {\n                buffer.pushArray(numeric.signedDecimalToBinary(16, '' + data));\n            },\n            deserialize: function (buffer) { return numeric.signedBinaryToDecimal(buffer.getUint8Array(16)); },\n        }),\n        float32: createType({\n            name: 'float32',\n            serialize: function (buffer, data) { buffer.pushFloat32(data); },\n            deserialize: function (buffer) { return buffer.getFloat32(); },\n        }),\n        float64: createType({\n            name: 'float64',\n            serialize: function (buffer, data) { buffer.pushFloat64(data); },\n            deserialize: function (buffer) { return buffer.getFloat64(); },\n        }),\n        float128: createType({\n            name: 'float128',\n            serialize: function (buffer, data) { buffer.pushUint8ArrayChecked(hexToUint8Array(data), 16); },\n            deserialize: function (buffer) { return arrayToHex(buffer.getUint8Array(16)); },\n        }),\n        bytes: createType({\n            name: 'bytes',\n            serialize: function (buffer, data) {\n                if (data instanceof Uint8Array || Array.isArray(data)) {\n                    buffer.pushBytes(data);\n                }\n                else {\n                    buffer.pushBytes(hexToUint8Array(data));\n                }\n            },\n            deserialize: function (buffer, state) {\n                if (state && state.options.bytesAsUint8Array) {\n                    return buffer.getBytes();\n                }\n                else {\n                    return arrayToHex(buffer.getBytes());\n                }\n            },\n        }),\n        string: createType({\n            name: 'string',\n            serialize: function (buffer, data) { buffer.pushString(data); },\n            deserialize: function (buffer) { return buffer.getString(); },\n        }),\n        name: createType({\n            name: 'name',\n            serialize: function (buffer, data) { buffer.pushName(data); },\n            deserialize: function (buffer) { return buffer.getName(); },\n        }),\n        time_point: createType({\n            name: 'time_point',\n            serialize: function (buffer, data) { buffer.pushNumberAsUint64(dateToTimePoint(data)); },\n            deserialize: function (buffer) { return timePointToDate(buffer.getUint64AsNumber()); },\n        }),\n        time_point_sec: createType({\n            name: 'time_point_sec',\n            serialize: function (buffer, data) { buffer.pushUint32(dateToTimePointSec(data)); },\n            deserialize: function (buffer) { return timePointSecToDate(buffer.getUint32()); },\n        }),\n        block_timestamp_type: createType({\n            name: 'block_timestamp_type',\n            serialize: function (buffer, data) { buffer.pushUint32(dateToBlockTimestamp(data)); },\n            deserialize: function (buffer) { return blockTimestampToDate(buffer.getUint32()); },\n        }),\n        symbol_code: createType({\n            name: 'symbol_code',\n            serialize: function (buffer, data) { buffer.pushSymbolCode(data); },\n            deserialize: function (buffer) { return buffer.getSymbolCode(); },\n        }),\n        symbol: createType({\n            name: 'symbol',\n            serialize: function (buffer, data) { buffer.pushSymbol(stringToSymbol(data)); },\n            deserialize: function (buffer) { return symbolToString(buffer.getSymbol()); },\n        }),\n        asset: createType({\n            name: 'asset',\n            serialize: function (buffer, data) { buffer.pushAsset(data); },\n            deserialize: function (buffer) { return buffer.getAsset(); },\n        }),\n        checksum160: createType({\n            name: 'checksum160',\n            serialize: function (buffer, data) { buffer.pushUint8ArrayChecked(hexToUint8Array(data), 20); },\n            deserialize: function (buffer) { return arrayToHex(buffer.getUint8Array(20)); },\n        }),\n        checksum256: createType({\n            name: 'checksum256',\n            serialize: function (buffer, data) { buffer.pushUint8ArrayChecked(hexToUint8Array(data), 32); },\n            deserialize: function (buffer) { return arrayToHex(buffer.getUint8Array(32)); },\n        }),\n        checksum512: createType({\n            name: 'checksum512',\n            serialize: function (buffer, data) { buffer.pushUint8ArrayChecked(hexToUint8Array(data), 64); },\n            deserialize: function (buffer) { return arrayToHex(buffer.getUint8Array(64)); },\n        }),\n        public_key: createType({\n            name: 'public_key',\n            serialize: function (buffer, data) { buffer.pushPublicKey(data); },\n            deserialize: function (buffer) { return buffer.getPublicKey(); },\n        }),\n        private_key: createType({\n            name: 'private_key',\n            serialize: function (buffer, data) { buffer.pushPrivateKey(data); },\n            deserialize: function (buffer) { return buffer.getPrivateKey(); },\n        }),\n        signature: createType({\n            name: 'signature',\n            serialize: function (buffer, data) { buffer.pushSignature(data); },\n            deserialize: function (buffer) { return buffer.getSignature(); },\n        }),\n    }));\n    result.set('extended_asset', createType({\n        name: 'extended_asset',\n        baseName: '',\n        fields: [\n            { name: 'quantity', typeName: 'asset', type: result.get('asset') },\n            { name: 'contract', typeName: 'name', type: result.get('name') },\n        ],\n        serialize: serializeStruct,\n        deserialize: deserializeStruct,\n    }));\n    return result;\n} // createInitialTypes()\nexports.createInitialTypes = createInitialTypes;\n/** Get type from `types` */\nfunction getType(types, name) {\n    var type = types.get(name);\n    if (type && type.aliasOfName) {\n        return getType(types, type.aliasOfName);\n    }\n    if (type) {\n        return type;\n    }\n    if (name.endsWith('[]')) {\n        return createType({\n            name: name,\n            arrayOf: getType(types, name.substr(0, name.length - 2)),\n            serialize: serializeArray,\n            deserialize: deserializeArray,\n        });\n    }\n    if (name.endsWith('?')) {\n        return createType({\n            name: name,\n            optionalOf: getType(types, name.substr(0, name.length - 1)),\n            serialize: serializeOptional,\n            deserialize: deserializeOptional,\n        });\n    }\n    if (name.endsWith('$')) {\n        return createType({\n            name: name,\n            extensionOf: getType(types, name.substr(0, name.length - 1)),\n            serialize: serializeExtension,\n            deserialize: deserializeExtension,\n        });\n    }\n    throw new Error('Unknown type: ' + name);\n}\nexports.getType = getType;\n/**\n * Get types from abi\n * @param initialTypes Set of types to build on.\n *     In most cases, it's best to fill this from a fresh call to `getTypesFromAbi()`.\n */\nfunction getTypesFromAbi(initialTypes, abi) {\n    var e_5, _a, e_6, _b, e_7, _c, e_8, _d, e_9, _e;\n    var types = new Map(initialTypes);\n    if (abi.types) {\n        try {\n            for (var _f = __values(abi.types), _g = _f.next(); !_g.done; _g = _f.next()) {\n                var _h = _g.value, new_type_name = _h.new_type_name, type = _h.type;\n                types.set(new_type_name, createType({ name: new_type_name, aliasOfName: type }));\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (_g && !_g.done && (_a = _f.return)) _a.call(_f);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n    }\n    if (abi.structs) {\n        try {\n            for (var _j = __values(abi.structs), _k = _j.next(); !_k.done; _k = _j.next()) {\n                var _l = _k.value, name_1 = _l.name, base = _l.base, fields = _l.fields;\n                types.set(name_1, createType({\n                    name: name_1,\n                    baseName: base,\n                    fields: fields.map(function (_a) {\n                        var n = _a.name, type = _a.type;\n                        return ({ name: n, typeName: type, type: null });\n                    }),\n                    serialize: serializeStruct,\n                    deserialize: deserializeStruct,\n                }));\n            }\n        }\n        catch (e_6_1) { e_6 = { error: e_6_1 }; }\n        finally {\n            try {\n                if (_k && !_k.done && (_b = _j.return)) _b.call(_j);\n            }\n            finally { if (e_6) throw e_6.error; }\n        }\n    }\n    if (abi.variants) {\n        try {\n            for (var _m = __values(abi.variants), _o = _m.next(); !_o.done; _o = _m.next()) {\n                var _p = _o.value, name_2 = _p.name, t = _p.types;\n                types.set(name_2, createType({\n                    name: name_2,\n                    fields: t.map(function (s) { return ({ name: s, typeName: s, type: null }); }),\n                    serialize: serializeVariant,\n                    deserialize: deserializeVariant,\n                }));\n            }\n        }\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\n        finally {\n            try {\n                if (_o && !_o.done && (_c = _m.return)) _c.call(_m);\n            }\n            finally { if (e_7) throw e_7.error; }\n        }\n    }\n    try {\n        for (var types_1 = __values(types), types_1_1 = types_1.next(); !types_1_1.done; types_1_1 = types_1.next()) {\n            var _q = __read(types_1_1.value, 2), name_3 = _q[0], type = _q[1];\n            if (type.baseName) {\n                type.base = getType(types, type.baseName);\n            }\n            try {\n                for (var _r = __values(type.fields), _s = _r.next(); !_s.done; _s = _r.next()) {\n                    var field = _s.value;\n                    field.type = getType(types, field.typeName);\n                }\n            }\n            catch (e_9_1) { e_9 = { error: e_9_1 }; }\n            finally {\n                try {\n                    if (_s && !_s.done && (_e = _r.return)) _e.call(_r);\n                }\n                finally { if (e_9) throw e_9.error; }\n            }\n        }\n    }\n    catch (e_8_1) { e_8 = { error: e_8_1 }; }\n    finally {\n        try {\n            if (types_1_1 && !types_1_1.done && (_d = types_1.return)) _d.call(types_1);\n        }\n        finally { if (e_8) throw e_8.error; }\n    }\n    return types;\n} // getTypesFromAbi\nexports.getTypesFromAbi = getTypesFromAbi;\n/** TAPoS: Return transaction fields which reference `refBlock` and expire `expireSeconds` after `refBlock.timestamp` */\nfunction transactionHeader(refBlock, expireSeconds) {\n    return {\n        expiration: timePointSecToDate(dateToTimePointSec(refBlock.timestamp) + expireSeconds),\n        ref_block_num: refBlock.block_num & 0xffff,\n        ref_block_prefix: refBlock.ref_block_prefix,\n    };\n}\nexports.transactionHeader = transactionHeader;\n/** Convert action data to serialized form (hex) */\nfunction serializeActionData(contract, account, name, data, textEncoder, textDecoder) {\n    var action = contract.actions.get(name);\n    if (!action) {\n        throw new Error(\"Unknown action \" + name + \" in contract \" + account);\n    }\n    var buffer = new SerialBuffer({ textEncoder: textEncoder, textDecoder: textDecoder });\n    action.serialize(buffer, data);\n    return arrayToHex(buffer.asUint8Array());\n}\nexports.serializeActionData = serializeActionData;\n/** Return action in serialized form */\nfunction serializeAction(contract, account, name, authorization, data, textEncoder, textDecoder) {\n    return {\n        account: account,\n        name: name,\n        authorization: authorization,\n        data: serializeActionData(contract, account, name, data, textEncoder, textDecoder),\n    };\n}\nexports.serializeAction = serializeAction;\n/** Deserialize action data. If `data` is a `string`, then it's assumed to be in hex. */\nfunction deserializeActionData(contract, account, name, data, textEncoder, textDecoder) {\n    var action = contract.actions.get(name);\n    if (typeof data === 'string') {\n        data = hexToUint8Array(data);\n    }\n    if (!action) {\n        throw new Error(\"Unknown action \" + name + \" in contract \" + account);\n    }\n    var buffer = new SerialBuffer({ textDecoder: textDecoder, textEncoder: textEncoder });\n    buffer.pushArray(data);\n    return action.deserialize(buffer);\n}\nexports.deserializeActionData = deserializeActionData;\n/** Deserialize action. If `data` is a `string`, then it's assumed to be in hex. */\nfunction deserializeAction(contract, account, name, authorization, data, textEncoder, textDecoder) {\n    return {\n        account: account,\n        name: name,\n        authorization: authorization,\n        data: deserializeActionData(contract, account, name, data, textEncoder, textDecoder),\n    };\n}\nexports.deserializeAction = deserializeAction;\n//# sourceMappingURL=eosjs-serialize.js.map","\"use strict\";\n/**\n * @module API\n */\n// copyright defined in eosjs/LICENSE.txt\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ser = require(\"./eosjs-serialize\");\nvar abiAbi = require('../src/abi.abi.json');\nvar transactionAbi = require('../src/transaction.abi.json');\nvar Api = /** @class */ (function () {\n    /**\n     * @param args\n     *    * `rpc`: Issues RPC calls\n     *    * `authorityProvider`: Get public keys needed to meet authorities in a transaction\n     *    * `abiProvider`: Supplies ABIs in raw form (binary)\n     *    * `signatureProvider`: Signs transactions\n     *    * `chainId`: Identifies chain\n     *    * `textEncoder`: `TextEncoder` instance to use. Pass in `null` if running in a browser\n     *    * `textDecoder`: `TextDecoder` instance to use. Pass in `null` if running in a browser\n     */\n    function Api(args) {\n        /** Holds information needed to serialize contract actions */\n        this.contracts = new Map();\n        /** Fetched abis */\n        this.cachedAbis = new Map();\n        this.rpc = args.rpc;\n        this.authorityProvider = args.authorityProvider || args.rpc;\n        this.abiProvider = args.abiProvider || args.rpc;\n        this.signatureProvider = args.signatureProvider;\n        this.chainId = args.chainId;\n        this.textEncoder = args.textEncoder;\n        this.textDecoder = args.textDecoder;\n        this.abiTypes = ser.getTypesFromAbi(ser.createInitialTypes(), abiAbi);\n        this.transactionTypes = ser.getTypesFromAbi(ser.createInitialTypes(), transactionAbi);\n    }\n    /** Decodes an abi as Uint8Array into json. */\n    Api.prototype.rawAbiToJson = function (rawAbi) {\n        var buffer = new ser.SerialBuffer({\n            textEncoder: this.textEncoder,\n            textDecoder: this.textDecoder,\n            array: rawAbi,\n        });\n        if (!ser.supportedAbiVersion(buffer.getString())) {\n            throw new Error('Unsupported abi version');\n        }\n        buffer.restartRead();\n        return this.abiTypes.get('abi_def').deserialize(buffer);\n    };\n    /** Get abi in both binary and structured forms. Fetch when needed. */\n    Api.prototype.getCachedAbi = function (accountName, reload) {\n        if (reload === void 0) { reload = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var cachedAbi, rawAbi, abi, e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!reload && this.cachedAbis.get(accountName)) {\n                            return [2 /*return*/, this.cachedAbis.get(accountName)];\n                        }\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.abiProvider.getRawAbi(accountName)];\n                    case 2:\n                        rawAbi = (_a.sent()).abi;\n                        abi = this.rawAbiToJson(rawAbi);\n                        cachedAbi = { rawAbi: rawAbi, abi: abi };\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_1 = _a.sent();\n                        e_1.message = \"fetching abi for \" + accountName + \": \" + e_1.message;\n                        throw e_1;\n                    case 4:\n                        if (!cachedAbi) {\n                            throw new Error(\"Missing abi for \" + accountName);\n                        }\n                        this.cachedAbis.set(accountName, cachedAbi);\n                        return [2 /*return*/, cachedAbi];\n                }\n            });\n        });\n    };\n    /** Get abi in structured form. Fetch when needed. */\n    Api.prototype.getAbi = function (accountName, reload) {\n        if (reload === void 0) { reload = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCachedAbi(accountName, reload)];\n                    case 1: return [2 /*return*/, (_a.sent()).abi];\n                }\n            });\n        });\n    };\n    /** Get abis needed by a transaction */\n    Api.prototype.getTransactionAbis = function (transaction, reload) {\n        if (reload === void 0) { reload = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var accounts, uniqueAccounts, actionPromises;\n            var _this = this;\n            return __generator(this, function (_a) {\n                accounts = transaction.actions.map(function (action) { return action.account; });\n                uniqueAccounts = new Set(accounts);\n                actionPromises = __spread(uniqueAccounts).map(function (account) { return __awaiter(_this, void 0, void 0, function () {\n                    var _a;\n                    return __generator(this, function (_b) {\n                        switch (_b.label) {\n                            case 0:\n                                _a = {\n                                    accountName: account\n                                };\n                                return [4 /*yield*/, this.getCachedAbi(account, reload)];\n                            case 1: return [2 /*return*/, (_a.abi = (_b.sent()).rawAbi,\n                                    _a)];\n                        }\n                    });\n                }); });\n                return [2 /*return*/, Promise.all(actionPromises)];\n            });\n        });\n    };\n    /** Get data needed to serialize actions in a contract */\n    Api.prototype.getContract = function (accountName, reload) {\n        if (reload === void 0) { reload = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var e_2, _a, abi, types, actions, _b, _c, _d, name_1, type, result;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        if (!reload && this.contracts.get(accountName)) {\n                            return [2 /*return*/, this.contracts.get(accountName)];\n                        }\n                        return [4 /*yield*/, this.getAbi(accountName, reload)];\n                    case 1:\n                        abi = _e.sent();\n                        types = ser.getTypesFromAbi(ser.createInitialTypes(), abi);\n                        actions = new Map();\n                        try {\n                            for (_b = __values(abi.actions), _c = _b.next(); !_c.done; _c = _b.next()) {\n                                _d = _c.value, name_1 = _d.name, type = _d.type;\n                                actions.set(name_1, ser.getType(types, type));\n                            }\n                        }\n                        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                        finally {\n                            try {\n                                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                            }\n                            finally { if (e_2) throw e_2.error; }\n                        }\n                        result = { types: types, actions: actions };\n                        this.contracts.set(accountName, result);\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /** Convert `value` to binary form. `type` must be a built-in abi type or in `transaction.abi.json`. */\n    Api.prototype.serialize = function (buffer, type, value) {\n        this.transactionTypes.get(type).serialize(buffer, value);\n    };\n    /** Convert data in `buffer` to structured form. `type` must be a built-in abi type or in `transaction.abi.json`. */\n    Api.prototype.deserialize = function (buffer, type) {\n        return this.transactionTypes.get(type).deserialize(buffer);\n    };\n    /** Convert a transaction to binary */\n    Api.prototype.serializeTransaction = function (transaction) {\n        var buffer = new ser.SerialBuffer({ textEncoder: this.textEncoder, textDecoder: this.textDecoder });\n        this.serialize(buffer, 'transaction', __assign({ max_net_usage_words: 0, max_cpu_usage_ms: 0, delay_sec: 0, context_free_actions: [], actions: [], transaction_extensions: [] }, transaction));\n        return buffer.asUint8Array();\n    };\n    /** Convert a transaction from binary. Leaves actions in hex. */\n    Api.prototype.deserializeTransaction = function (transaction) {\n        var buffer = new ser.SerialBuffer({ textEncoder: this.textEncoder, textDecoder: this.textDecoder });\n        buffer.pushArray(transaction);\n        return this.deserialize(buffer, 'transaction');\n    };\n    /** Convert actions to hex */\n    Api.prototype.serializeActions = function (actions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.all(actions.map(function (_a) {\n                            var account = _a.account, name = _a.name, authorization = _a.authorization, data = _a.data;\n                            return __awaiter(_this, void 0, void 0, function () {\n                                var contract;\n                                return __generator(this, function (_b) {\n                                    switch (_b.label) {\n                                        case 0: return [4 /*yield*/, this.getContract(account)];\n                                        case 1:\n                                            contract = _b.sent();\n                                            return [2 /*return*/, ser.serializeAction(contract, account, name, authorization, data, this.textEncoder, this.textDecoder)];\n                                    }\n                                });\n                            });\n                        }))];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /** Convert actions from hex */\n    Api.prototype.deserializeActions = function (actions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.all(actions.map(function (_a) {\n                            var account = _a.account, name = _a.name, authorization = _a.authorization, data = _a.data;\n                            return __awaiter(_this, void 0, void 0, function () {\n                                var contract;\n                                return __generator(this, function (_b) {\n                                    switch (_b.label) {\n                                        case 0: return [4 /*yield*/, this.getContract(account)];\n                                        case 1:\n                                            contract = _b.sent();\n                                            return [2 /*return*/, ser.deserializeAction(contract, account, name, authorization, data, this.textEncoder, this.textDecoder)];\n                                    }\n                                });\n                            });\n                        }))];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /** Convert a transaction from binary. Also deserializes actions. */\n    Api.prototype.deserializeTransactionWithActions = function (transaction) {\n        return __awaiter(this, void 0, void 0, function () {\n            var deserializedTransaction, deserializedActions;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (typeof transaction === 'string') {\n                            transaction = ser.hexToUint8Array(transaction);\n                        }\n                        deserializedTransaction = this.deserializeTransaction(transaction);\n                        return [4 /*yield*/, this.deserializeActions(deserializedTransaction.actions)];\n                    case 1:\n                        deserializedActions = _a.sent();\n                        return [2 /*return*/, __assign({}, deserializedTransaction, { actions: deserializedActions })];\n                }\n            });\n        });\n    };\n    /**\n     * Create and optionally broadcast a transaction.\n     *\n     * Named Parameters:\n     *    * `broadcast`: broadcast this transaction?\n     *    * `sign`: sign this transaction?\n     *    * If both `blocksBehind` and `expireSeconds` are present,\n     *      then fetch the block which is `blocksBehind` behind head block,\n     *      use it as a reference for TAPoS, and expire the transaction `expireSeconds` after that block's time.\n     * @returns node response if `broadcast`, `{signatures, serializedTransaction}` if `!broadcast`\n     */\n    Api.prototype.transact = function (transaction, _a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.broadcast, broadcast = _c === void 0 ? true : _c, _d = _b.sign, sign = _d === void 0 ? true : _d, blocksBehind = _b.blocksBehind, expireSeconds = _b.expireSeconds;\n        return __awaiter(this, void 0, void 0, function () {\n            var info, refBlock, abis, _e, _f, serializedTransaction, pushTransactionArgs, availableKeys, requiredKeys;\n            return __generator(this, function (_g) {\n                switch (_g.label) {\n                    case 0:\n                        if (!!this.chainId) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.rpc.get_info()];\n                    case 1:\n                        info = _g.sent();\n                        this.chainId = info.chain_id;\n                        _g.label = 2;\n                    case 2:\n                        if (!(typeof blocksBehind === 'number' && expireSeconds)) return [3 /*break*/, 6];\n                        if (!!info) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.rpc.get_info()];\n                    case 3:\n                        info = _g.sent();\n                        _g.label = 4;\n                    case 4: return [4 /*yield*/, this.rpc.get_block(info.head_block_num - blocksBehind)];\n                    case 5:\n                        refBlock = _g.sent();\n                        transaction = __assign({}, ser.transactionHeader(refBlock, expireSeconds), transaction);\n                        _g.label = 6;\n                    case 6:\n                        if (!this.hasRequiredTaposFields(transaction)) {\n                            throw new Error('Required configuration or TAPOS fields are not present');\n                        }\n                        return [4 /*yield*/, this.getTransactionAbis(transaction)];\n                    case 7:\n                        abis = _g.sent();\n                        _e = [{}, transaction];\n                        _f = {};\n                        return [4 /*yield*/, this.serializeActions(transaction.actions)];\n                    case 8:\n                        transaction = __assign.apply(void 0, _e.concat([(_f.actions = _g.sent(), _f)]));\n                        serializedTransaction = this.serializeTransaction(transaction);\n                        pushTransactionArgs = { serializedTransaction: serializedTransaction, signatures: [] };\n                        if (!sign) return [3 /*break*/, 12];\n                        return [4 /*yield*/, this.signatureProvider.getAvailableKeys()];\n                    case 9:\n                        availableKeys = _g.sent();\n                        return [4 /*yield*/, this.authorityProvider.getRequiredKeys({ transaction: transaction, availableKeys: availableKeys })];\n                    case 10:\n                        requiredKeys = _g.sent();\n                        return [4 /*yield*/, this.signatureProvider.sign({\n                                chainId: this.chainId,\n                                requiredKeys: requiredKeys,\n                                serializedTransaction: serializedTransaction,\n                                abis: abis,\n                            })];\n                    case 11:\n                        pushTransactionArgs = _g.sent();\n                        _g.label = 12;\n                    case 12:\n                        if (broadcast) {\n                            return [2 /*return*/, this.pushSignedTransaction(pushTransactionArgs)];\n                        }\n                        return [2 /*return*/, pushTransactionArgs];\n                }\n            });\n        });\n    };\n    /** Broadcast a signed transaction */\n    Api.prototype.pushSignedTransaction = function (_a) {\n        var signatures = _a.signatures, serializedTransaction = _a.serializedTransaction;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_b) {\n                return [2 /*return*/, this.rpc.push_transaction({\n                        signatures: signatures,\n                        serializedTransaction: serializedTransaction,\n                    })];\n            });\n        });\n    };\n    // eventually break out into TransactionValidator class\n    Api.prototype.hasRequiredTaposFields = function (_a) {\n        var expiration = _a.expiration, ref_block_num = _a.ref_block_num, ref_block_prefix = _a.ref_block_prefix, transaction = __rest(_a, [\"expiration\", \"ref_block_num\", \"ref_block_prefix\"]);\n        return !!(expiration && ref_block_num && ref_block_prefix);\n    };\n    return Api;\n}()); // Api\nexports.Api = Api;\n//# sourceMappingURL=eosjs-api.js.map","\"use strict\";\n// copyright defined in eosjs/LICENSE.txt\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=eosjs-api-interfaces.js.map","\"use strict\";\n/**\n * @module RPC-Error\n */\n// copyright defined in eosjs/LICENSE.txt\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** Holds detailed error information */\nvar RpcError = /** @class */ (function (_super) {\n    __extends(RpcError, _super);\n    function RpcError(json) {\n        var _this = this;\n        if (json.error && json.error.details && json.error.details.length && json.error.details[0].message) {\n            _this = _super.call(this, json.error.details[0].message) || this;\n        }\n        else if (json.processed && json.processed.except && json.processed.except.message) {\n            _this = _super.call(this, json.processed.except.message) || this;\n        }\n        else {\n            _this = _super.call(this, json.message) || this;\n        }\n        Object.setPrototypeOf(_this, RpcError.prototype);\n        _this.json = json;\n        return _this;\n    }\n    return RpcError;\n}(Error));\nexports.RpcError = RpcError;\n//# sourceMappingURL=eosjs-rpcerror.js.map","\"use strict\";\n/**\n * @module JSON-RPC\n */\n// copyright defined in eosjs/LICENSE.txt\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar eosjs_numeric_1 = require(\"./eosjs-numeric\");\nvar eosjs_rpcerror_1 = require(\"./eosjs-rpcerror\");\nfunction arrayToHex(data) {\n    var e_1, _a;\n    var result = '';\n    try {\n        for (var data_1 = __values(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {\n            var x = data_1_1.value;\n            result += ('00' + x.toString(16)).slice(-2);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (data_1_1 && !data_1_1.done && (_a = data_1.return)) _a.call(data_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return result;\n}\n/** Make RPC calls */\nvar JsonRpc = /** @class */ (function () {\n    /**\n     * @param args\n     *    * `fetch`:\n     *    * browsers: leave `null` or `undefined`\n     *    * node: provide an implementation\n     */\n    function JsonRpc(endpoint, args) {\n        if (args === void 0) { args = {}; }\n        this.endpoint = endpoint;\n        if (args.fetch) {\n            this.fetchBuiltin = args.fetch;\n        }\n        else {\n            this.fetchBuiltin = global.fetch;\n        }\n    }\n    /** Post `body` to `endpoint + path`. Throws detailed error information in `RpcError` when available. */\n    JsonRpc.prototype.fetch = function (path, body) {\n        return __awaiter(this, void 0, void 0, function () {\n            var response, json, f, e_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 3, , 4]);\n                        f = this.fetchBuiltin;\n                        return [4 /*yield*/, f(this.endpoint + path, {\n                                body: JSON.stringify(body),\n                                method: 'POST',\n                            })];\n                    case 1:\n                        response = _a.sent();\n                        return [4 /*yield*/, response.json()];\n                    case 2:\n                        json = _a.sent();\n                        if (json.processed && json.processed.except) {\n                            throw new eosjs_rpcerror_1.RpcError(json);\n                        }\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_2 = _a.sent();\n                        e_2.isFetchError = true;\n                        throw e_2;\n                    case 4:\n                        if (!response.ok) {\n                            throw new eosjs_rpcerror_1.RpcError(json);\n                        }\n                        return [2 /*return*/, json];\n                }\n            });\n        });\n    };\n    /** Raw call to `/v1/chain/get_abi` */\n    JsonRpc.prototype.get_abi = function (accountName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.fetch('/v1/chain/get_abi', { account_name: accountName })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /** Raw call to `/v1/chain/get_account` */\n    JsonRpc.prototype.get_account = function (accountName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.fetch('/v1/chain/get_account', { account_name: accountName })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /** Raw call to `/v1/chain/get_block_header_state` */\n    JsonRpc.prototype.get_block_header_state = function (blockNumOrId) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.fetch('/v1/chain/get_block_header_state', { block_num_or_id: blockNumOrId })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /** Raw call to `/v1/chain/get_block` */\n    JsonRpc.prototype.get_block = function (blockNumOrId) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.fetch('/v1/chain/get_block', { block_num_or_id: blockNumOrId })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /** Raw call to `/v1/chain/get_code` */\n    JsonRpc.prototype.get_code = function (accountName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.fetch('/v1/chain/get_code', { account_name: accountName })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /** Raw call to `/v1/chain/get_currency_balance` */\n    JsonRpc.prototype.get_currency_balance = function (code, account, symbol) {\n        if (symbol === void 0) { symbol = null; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.fetch('/v1/chain/get_currency_balance', { code: code, account: account, symbol: symbol })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /** Raw call to `/v1/chain/get_currency_stats` */\n    JsonRpc.prototype.get_currency_stats = function (code, symbol) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.fetch('/v1/chain/get_currency_stats', { code: code, symbol: symbol })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /** Raw call to `/v1/chain/get_info` */\n    JsonRpc.prototype.get_info = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.fetch('/v1/chain/get_info', {})];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /** Raw call to `/v1/chain/get_producer_schedule` */\n    JsonRpc.prototype.get_producer_schedule = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.fetch('/v1/chain/get_producer_schedule', {})];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /** Raw call to `/v1/chain/get_producers` */\n    JsonRpc.prototype.get_producers = function (json, lowerBound, limit) {\n        if (json === void 0) { json = true; }\n        if (lowerBound === void 0) { lowerBound = ''; }\n        if (limit === void 0) { limit = 50; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.fetch('/v1/chain/get_producers', { json: json, lower_bound: lowerBound, limit: limit })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /** Raw call to `/v1/chain/get_raw_code_and_abi` */\n    JsonRpc.prototype.get_raw_code_and_abi = function (accountName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.fetch('/v1/chain/get_raw_code_and_abi', { account_name: accountName })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /** calls `/v1/chain/get_raw_code_and_abi` and pulls out unneeded raw wasm code */\n    // TODO: use `/v1/chain/get_raw_abi` directly when it becomes available\n    JsonRpc.prototype.getRawAbi = function (accountName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var rawCodeAndAbi, abi;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.get_raw_code_and_abi(accountName)];\n                    case 1:\n                        rawCodeAndAbi = _a.sent();\n                        abi = eosjs_numeric_1.base64ToBinary(rawCodeAndAbi.abi);\n                        return [2 /*return*/, { accountName: rawCodeAndAbi.account_name, abi: abi }];\n                }\n            });\n        });\n    };\n    /** Raw call to `/v1/chain/get_table_rows` */\n    JsonRpc.prototype.get_table_rows = function (_a) {\n        var _b = _a.json, json = _b === void 0 ? true : _b, code = _a.code, scope = _a.scope, table = _a.table, _c = _a.table_key, table_key = _c === void 0 ? '' : _c, _d = _a.lower_bound, lower_bound = _d === void 0 ? '' : _d, _e = _a.upper_bound, upper_bound = _e === void 0 ? '' : _e, _f = _a.index_position, index_position = _f === void 0 ? 1 : _f, _g = _a.key_type, key_type = _g === void 0 ? '' : _g, _h = _a.limit, limit = _h === void 0 ? 10 : _h, _j = _a.reverse, reverse = _j === void 0 ? false : _j, _k = _a.show_payer, show_payer = _k === void 0 ? false : _k;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_l) {\n                switch (_l.label) {\n                    case 0: return [4 /*yield*/, this.fetch('/v1/chain/get_table_rows', {\n                            json: json,\n                            code: code,\n                            scope: scope,\n                            table: table,\n                            table_key: table_key,\n                            lower_bound: lower_bound,\n                            upper_bound: upper_bound,\n                            index_position: index_position,\n                            key_type: key_type,\n                            limit: limit,\n                            reverse: reverse,\n                            show_payer: show_payer,\n                        })];\n                    case 1: return [2 /*return*/, _l.sent()];\n                }\n            });\n        });\n    };\n    /** Raw call to `/v1/chain/get_table_by_scope` */\n    JsonRpc.prototype.get_table_by_scope = function (_a) {\n        var code = _a.code, table = _a.table, _b = _a.lower_bound, lower_bound = _b === void 0 ? '' : _b, _c = _a.upper_bound, upper_bound = _c === void 0 ? '' : _c, _d = _a.limit, limit = _d === void 0 ? 10 : _d;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0: return [4 /*yield*/, this.fetch('/v1/chain/get_table_by_scope', {\n                            code: code,\n                            table: table,\n                            lower_bound: lower_bound,\n                            upper_bound: upper_bound,\n                            limit: limit,\n                        })];\n                    case 1: return [2 /*return*/, _e.sent()];\n                }\n            });\n        });\n    };\n    /** Get subset of `availableKeys` needed to meet authorities in `transaction`. Implements `AuthorityProvider` */\n    JsonRpc.prototype.getRequiredKeys = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = eosjs_numeric_1.convertLegacyPublicKeys;\n                        return [4 /*yield*/, this.fetch('/v1/chain/get_required_keys', {\n                                transaction: args.transaction,\n                                available_keys: args.availableKeys,\n                            })];\n                    case 1: return [2 /*return*/, _a.apply(void 0, [(_b.sent()).required_keys])];\n                }\n            });\n        });\n    };\n    /** Push a serialized transaction */\n    JsonRpc.prototype.push_transaction = function (_a) {\n        var signatures = _a.signatures, serializedTransaction = _a.serializedTransaction;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.fetch('/v1/chain/push_transaction', {\n                            signatures: signatures,\n                            compression: 0,\n                            packed_context_free_data: '',\n                            packed_trx: arrayToHex(serializedTransaction),\n                        })];\n                    case 1: return [2 /*return*/, _b.sent()];\n                }\n            });\n        });\n    };\n    /** Raw call to `/v1/db_size/get` */\n    JsonRpc.prototype.db_size_get = function () {\n        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, this.fetch('/v1/db_size/get', {})];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        }); });\n    };\n    /** Raw call to `/v1/history/get_actions` */\n    JsonRpc.prototype.history_get_actions = function (accountName, pos, offset) {\n        if (pos === void 0) { pos = null; }\n        if (offset === void 0) { offset = null; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.fetch('/v1/history/get_actions', { account_name: accountName, pos: pos, offset: offset })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /** Raw call to `/v1/history/get_transaction` */\n    JsonRpc.prototype.history_get_transaction = function (id, blockNumHint) {\n        if (blockNumHint === void 0) { blockNumHint = null; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.fetch('/v1/history/get_transaction', { id: id, block_num_hint: blockNumHint })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /** Raw call to `/v1/history/get_key_accounts` */\n    JsonRpc.prototype.history_get_key_accounts = function (publicKey) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.fetch('/v1/history/get_key_accounts', { public_key: publicKey })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /** Raw call to `/v1/history/get_controlled_accounts` */\n    JsonRpc.prototype.history_get_controlled_accounts = function (controllingAccount) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.fetch('/v1/history/get_controlled_accounts', { controlling_account: controllingAccount })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    return JsonRpc;\n}()); // JsonRpc\nexports.JsonRpc = JsonRpc;\n//# sourceMappingURL=eosjs-jsonrpc.js.map","\"use strict\";\n// copyright defined in eosjs/LICENSE.txt\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=eosjs-rpc-interfaces.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar eosjs_api_1 = require(\"./eosjs-api\");\nexports.Api = eosjs_api_1.Api;\nvar ApiInterfaces = require(\"./eosjs-api-interfaces\");\nexports.ApiInterfaces = ApiInterfaces;\nvar eosjs_jsonrpc_1 = require(\"./eosjs-jsonrpc\");\nexports.JsonRpc = eosjs_jsonrpc_1.JsonRpc;\nvar Numeric = require(\"./eosjs-numeric\");\nexports.Numeric = Numeric;\nvar RpcInterfaces = require(\"./eosjs-rpc-interfaces\");\nexports.RpcInterfaces = RpcInterfaces;\nvar eosjs_rpcerror_1 = require(\"./eosjs-rpcerror\");\nexports.RpcError = eosjs_rpcerror_1.RpcError;\nvar Serialize = require(\"./eosjs-serialize\");\nexports.Serialize = Serialize;\n//# sourceMappingURL=index.js.map","(function (root, factory) {\n    // Hack to make all exports of this module sha256 function object properties.\n    var exports = {};\n    factory(exports);\n    var sha256 = exports[\"default\"];\n    for (var k in exports) {\n        sha256[k] = exports[k];\n    }\n        \n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        module.exports = sha256;\n    } else if (typeof define === 'function' && define.amd) {\n        define(function() { return sha256; }); \n    } else {\n        root.sha256 = sha256;\n    }\n})(this, function(exports) {\n\"use strict\";\nexports.__esModule = true;\n// SHA-256 (+ HMAC and PBKDF2) for JavaScript.\n//\n// Written in 2014-2016 by Dmitry Chestnykh.\n// Public domain, no warranty.\n//\n// Functions (accept and return Uint8Arrays):\n//\n//   sha256(message) -> hash\n//   sha256.hmac(key, message) -> mac\n//   sha256.pbkdf2(password, salt, rounds, dkLen) -> dk\n//\n//  Classes:\n//\n//   new sha256.Hash()\n//   new sha256.HMAC(key)\n//\nexports.digestLength = 32;\nexports.blockSize = 64;\n// SHA-256 constants\nvar K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n    0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n    0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n    0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n    0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n    0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n    0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n    0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n    0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n    0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\nfunction hashBlocks(w, v, p, pos, len) {\n    var a, b, c, d, e, f, g, h, u, i, j, t1, t2;\n    while (len >= 64) {\n        a = v[0];\n        b = v[1];\n        c = v[2];\n        d = v[3];\n        e = v[4];\n        f = v[5];\n        g = v[6];\n        h = v[7];\n        for (i = 0; i < 16; i++) {\n            j = pos + i * 4;\n            w[i] = (((p[j] & 0xff) << 24) | ((p[j + 1] & 0xff) << 16) |\n                ((p[j + 2] & 0xff) << 8) | (p[j + 3] & 0xff));\n        }\n        for (i = 16; i < 64; i++) {\n            u = w[i - 2];\n            t1 = (u >>> 17 | u << (32 - 17)) ^ (u >>> 19 | u << (32 - 19)) ^ (u >>> 10);\n            u = w[i - 15];\n            t2 = (u >>> 7 | u << (32 - 7)) ^ (u >>> 18 | u << (32 - 18)) ^ (u >>> 3);\n            w[i] = (t1 + w[i - 7] | 0) + (t2 + w[i - 16] | 0);\n        }\n        for (i = 0; i < 64; i++) {\n            t1 = (((((e >>> 6 | e << (32 - 6)) ^ (e >>> 11 | e << (32 - 11)) ^\n                (e >>> 25 | e << (32 - 25))) + ((e & f) ^ (~e & g))) | 0) +\n                ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n            t2 = (((a >>> 2 | a << (32 - 2)) ^ (a >>> 13 | a << (32 - 13)) ^\n                (a >>> 22 | a << (32 - 22))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n            h = g;\n            g = f;\n            f = e;\n            e = (d + t1) | 0;\n            d = c;\n            c = b;\n            b = a;\n            a = (t1 + t2) | 0;\n        }\n        v[0] += a;\n        v[1] += b;\n        v[2] += c;\n        v[3] += d;\n        v[4] += e;\n        v[5] += f;\n        v[6] += g;\n        v[7] += h;\n        pos += 64;\n        len -= 64;\n    }\n    return pos;\n}\n// Hash implements SHA256 hash algorithm.\nvar Hash = /** @class */ (function () {\n    function Hash() {\n        this.digestLength = exports.digestLength;\n        this.blockSize = exports.blockSize;\n        // Note: Int32Array is used instead of Uint32Array for performance reasons.\n        this.state = new Int32Array(8); // hash state\n        this.temp = new Int32Array(64); // temporary state\n        this.buffer = new Uint8Array(128); // buffer for data to hash\n        this.bufferLength = 0; // number of bytes in buffer\n        this.bytesHashed = 0; // number of total bytes hashed\n        this.finished = false; // indicates whether the hash was finalized\n        this.reset();\n    }\n    // Resets hash state making it possible\n    // to re-use this instance to hash other data.\n    Hash.prototype.reset = function () {\n        this.state[0] = 0x6a09e667;\n        this.state[1] = 0xbb67ae85;\n        this.state[2] = 0x3c6ef372;\n        this.state[3] = 0xa54ff53a;\n        this.state[4] = 0x510e527f;\n        this.state[5] = 0x9b05688c;\n        this.state[6] = 0x1f83d9ab;\n        this.state[7] = 0x5be0cd19;\n        this.bufferLength = 0;\n        this.bytesHashed = 0;\n        this.finished = false;\n        return this;\n    };\n    // Cleans internal buffers and re-initializes hash state.\n    Hash.prototype.clean = function () {\n        for (var i = 0; i < this.buffer.length; i++) {\n            this.buffer[i] = 0;\n        }\n        for (var i = 0; i < this.temp.length; i++) {\n            this.temp[i] = 0;\n        }\n        this.reset();\n    };\n    // Updates hash state with the given data.\n    //\n    // Optionally, length of the data can be specified to hash\n    // fewer bytes than data.length.\n    //\n    // Throws error when trying to update already finalized hash:\n    // instance must be reset to use it again.\n    Hash.prototype.update = function (data, dataLength) {\n        if (dataLength === void 0) { dataLength = data.length; }\n        if (this.finished) {\n            throw new Error(\"SHA256: can't update because hash was finished.\");\n        }\n        var dataPos = 0;\n        this.bytesHashed += dataLength;\n        if (this.bufferLength > 0) {\n            while (this.bufferLength < 64 && dataLength > 0) {\n                this.buffer[this.bufferLength++] = data[dataPos++];\n                dataLength--;\n            }\n            if (this.bufferLength === 64) {\n                hashBlocks(this.temp, this.state, this.buffer, 0, 64);\n                this.bufferLength = 0;\n            }\n        }\n        if (dataLength >= 64) {\n            dataPos = hashBlocks(this.temp, this.state, data, dataPos, dataLength);\n            dataLength %= 64;\n        }\n        while (dataLength > 0) {\n            this.buffer[this.bufferLength++] = data[dataPos++];\n            dataLength--;\n        }\n        return this;\n    };\n    // Finalizes hash state and puts hash into out.\n    //\n    // If hash was already finalized, puts the same value.\n    Hash.prototype.finish = function (out) {\n        if (!this.finished) {\n            var bytesHashed = this.bytesHashed;\n            var left = this.bufferLength;\n            var bitLenHi = (bytesHashed / 0x20000000) | 0;\n            var bitLenLo = bytesHashed << 3;\n            var padLength = (bytesHashed % 64 < 56) ? 64 : 128;\n            this.buffer[left] = 0x80;\n            for (var i = left + 1; i < padLength - 8; i++) {\n                this.buffer[i] = 0;\n            }\n            this.buffer[padLength - 8] = (bitLenHi >>> 24) & 0xff;\n            this.buffer[padLength - 7] = (bitLenHi >>> 16) & 0xff;\n            this.buffer[padLength - 6] = (bitLenHi >>> 8) & 0xff;\n            this.buffer[padLength - 5] = (bitLenHi >>> 0) & 0xff;\n            this.buffer[padLength - 4] = (bitLenLo >>> 24) & 0xff;\n            this.buffer[padLength - 3] = (bitLenLo >>> 16) & 0xff;\n            this.buffer[padLength - 2] = (bitLenLo >>> 8) & 0xff;\n            this.buffer[padLength - 1] = (bitLenLo >>> 0) & 0xff;\n            hashBlocks(this.temp, this.state, this.buffer, 0, padLength);\n            this.finished = true;\n        }\n        for (var i = 0; i < 8; i++) {\n            out[i * 4 + 0] = (this.state[i] >>> 24) & 0xff;\n            out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n            out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n            out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n        }\n        return this;\n    };\n    // Returns the final hash digest.\n    Hash.prototype.digest = function () {\n        var out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    };\n    // Internal function for use in HMAC for optimization.\n    Hash.prototype._saveState = function (out) {\n        for (var i = 0; i < this.state.length; i++) {\n            out[i] = this.state[i];\n        }\n    };\n    // Internal function for use in HMAC for optimization.\n    Hash.prototype._restoreState = function (from, bytesHashed) {\n        for (var i = 0; i < this.state.length; i++) {\n            this.state[i] = from[i];\n        }\n        this.bytesHashed = bytesHashed;\n        this.finished = false;\n        this.bufferLength = 0;\n    };\n    return Hash;\n}());\nexports.Hash = Hash;\n// HMAC implements HMAC-SHA256 message authentication algorithm.\nvar HMAC = /** @class */ (function () {\n    function HMAC(key) {\n        this.inner = new Hash();\n        this.outer = new Hash();\n        this.blockSize = this.inner.blockSize;\n        this.digestLength = this.inner.digestLength;\n        var pad = new Uint8Array(this.blockSize);\n        if (key.length > this.blockSize) {\n            (new Hash()).update(key).finish(pad).clean();\n        }\n        else {\n            for (var i = 0; i < key.length; i++) {\n                pad[i] = key[i];\n            }\n        }\n        for (var i = 0; i < pad.length; i++) {\n            pad[i] ^= 0x36;\n        }\n        this.inner.update(pad);\n        for (var i = 0; i < pad.length; i++) {\n            pad[i] ^= 0x36 ^ 0x5c;\n        }\n        this.outer.update(pad);\n        this.istate = new Uint32Array(8);\n        this.ostate = new Uint32Array(8);\n        this.inner._saveState(this.istate);\n        this.outer._saveState(this.ostate);\n        for (var i = 0; i < pad.length; i++) {\n            pad[i] = 0;\n        }\n    }\n    // Returns HMAC state to the state initialized with key\n    // to make it possible to run HMAC over the other data with the same\n    // key without creating a new instance.\n    HMAC.prototype.reset = function () {\n        this.inner._restoreState(this.istate, this.inner.blockSize);\n        this.outer._restoreState(this.ostate, this.outer.blockSize);\n        return this;\n    };\n    // Cleans HMAC state.\n    HMAC.prototype.clean = function () {\n        for (var i = 0; i < this.istate.length; i++) {\n            this.ostate[i] = this.istate[i] = 0;\n        }\n        this.inner.clean();\n        this.outer.clean();\n    };\n    // Updates state with provided data.\n    HMAC.prototype.update = function (data) {\n        this.inner.update(data);\n        return this;\n    };\n    // Finalizes HMAC and puts the result in out.\n    HMAC.prototype.finish = function (out) {\n        if (this.outer.finished) {\n            this.outer.finish(out);\n        }\n        else {\n            this.inner.finish(out);\n            this.outer.update(out, this.digestLength).finish(out);\n        }\n        return this;\n    };\n    // Returns message authentication code.\n    HMAC.prototype.digest = function () {\n        var out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    };\n    return HMAC;\n}());\nexports.HMAC = HMAC;\n// Returns SHA256 hash of data.\nfunction hash(data) {\n    var h = (new Hash()).update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n}\nexports.hash = hash;\n// Function hash is both available as module.hash and as default export.\nexports[\"default\"] = hash;\n// Returns HMAC-SHA256 of data under the key.\nfunction hmac(key, data) {\n    var h = (new HMAC(key)).update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n}\nexports.hmac = hmac;\n// Fills hkdf buffer like this:\n// T(1) = HMAC-Hash(PRK, T(0) | info | 0x01)\nfunction fillBuffer(buffer, hmac, info, counter) {\n    // Counter is a byte value: check if it overflowed.\n    var num = counter[0];\n    if (num === 0) {\n        throw new Error(\"hkdf: cannot expand more\");\n    }\n    // Prepare HMAC instance for new data with old key.\n    hmac.reset();\n    // Hash in previous output if it was generated\n    // (i.e. counter is greater than 1).\n    if (num > 1) {\n        hmac.update(buffer);\n    }\n    // Hash in info if it exists.\n    if (info) {\n        hmac.update(info);\n    }\n    // Hash in the counter.\n    hmac.update(counter);\n    // Output result to buffer and clean HMAC instance.\n    hmac.finish(buffer);\n    // Increment counter inside typed array, this works properly.\n    counter[0]++;\n}\nvar hkdfSalt = new Uint8Array(exports.digestLength); // Filled with zeroes.\nfunction hkdf(key, salt, info, length) {\n    if (salt === void 0) { salt = hkdfSalt; }\n    if (length === void 0) { length = 32; }\n    var counter = new Uint8Array([1]);\n    // HKDF-Extract uses salt as HMAC key, and key as data.\n    var okm = hmac(salt, key);\n    // Initialize HMAC for expanding with extracted key.\n    // Ensure no collisions with `hmac` function.\n    var hmac_ = new HMAC(okm);\n    // Allocate buffer.\n    var buffer = new Uint8Array(hmac_.digestLength);\n    var bufpos = buffer.length;\n    var out = new Uint8Array(length);\n    for (var i = 0; i < length; i++) {\n        if (bufpos === buffer.length) {\n            fillBuffer(buffer, hmac_, info, counter);\n            bufpos = 0;\n        }\n        out[i] = buffer[bufpos++];\n    }\n    hmac_.clean();\n    buffer.fill(0);\n    counter.fill(0);\n    return out;\n}\nexports.hkdf = hkdf;\n// Derives a key from password and salt using PBKDF2-HMAC-SHA256\n// with the given number of iterations.\n//\n// The number of bytes returned is equal to dkLen.\n//\n// (For better security, avoid dkLen greater than hash length - 32 bytes).\nfunction pbkdf2(password, salt, iterations, dkLen) {\n    var prf = new HMAC(password);\n    var len = prf.digestLength;\n    var ctr = new Uint8Array(4);\n    var t = new Uint8Array(len);\n    var u = new Uint8Array(len);\n    var dk = new Uint8Array(dkLen);\n    for (var i = 0; i * len < dkLen; i++) {\n        var c = i + 1;\n        ctr[0] = (c >>> 24) & 0xff;\n        ctr[1] = (c >>> 16) & 0xff;\n        ctr[2] = (c >>> 8) & 0xff;\n        ctr[3] = (c >>> 0) & 0xff;\n        prf.reset();\n        prf.update(salt);\n        prf.update(ctr);\n        prf.finish(u);\n        for (var j = 0; j < len; j++) {\n            t[j] = u[j];\n        }\n        for (var j = 2; j <= iterations; j++) {\n            prf.reset();\n            prf.update(u).finish(u);\n            for (var k = 0; k < len; k++) {\n                t[k] ^= u[k];\n            }\n        }\n        for (var j = 0; j < len && i * len + j < dkLen; j++) {\n            dk[i * len + j] = t[j];\n        }\n    }\n    for (var i = 0; i < len; i++) {\n        t[i] = u[i] = 0;\n    }\n    for (var i = 0; i < 4; i++) {\n        ctr[i] = 0;\n    }\n    prf.clean();\n    return dk;\n}\nexports.pbkdf2 = pbkdf2;\n});\n","/** SigningRequest ABI and typedefs. */\nexport const RequestFlagsNone = 0;\nexport const RequestFlagsBroadcast = 1 << 0;\nexport const RequestFlagsBackground = 1 << 1;\nexport const data = {\n    version: 'eosio::abi/1.1',\n    types: [\n        {\n            new_type_name: 'account_name',\n            type: 'name',\n        },\n        {\n            new_type_name: 'action_name',\n            type: 'name',\n        },\n        {\n            new_type_name: 'permission_name',\n            type: 'name',\n        },\n        {\n            new_type_name: 'chain_alias',\n            type: 'uint8',\n        },\n        {\n            new_type_name: 'chain_id',\n            type: 'checksum256',\n        },\n        {\n            new_type_name: 'request_flags',\n            type: 'uint8',\n        },\n    ],\n    structs: [\n        {\n            name: 'permission_level',\n            fields: [\n                {\n                    name: 'actor',\n                    type: 'account_name',\n                },\n                {\n                    name: 'permission',\n                    type: 'permission_name',\n                },\n            ],\n        },\n        {\n            name: 'action',\n            fields: [\n                {\n                    name: 'account',\n                    type: 'account_name',\n                },\n                {\n                    name: 'name',\n                    type: 'action_name',\n                },\n                {\n                    name: 'authorization',\n                    type: 'permission_level[]',\n                },\n                {\n                    name: 'data',\n                    type: 'bytes',\n                },\n            ],\n        },\n        {\n            name: 'extension',\n            fields: [\n                {\n                    name: 'type',\n                    type: 'uint16',\n                },\n                {\n                    name: 'data',\n                    type: 'bytes',\n                },\n            ],\n        },\n        {\n            name: 'transaction_header',\n            fields: [\n                {\n                    name: 'expiration',\n                    type: 'time_point_sec',\n                },\n                {\n                    name: 'ref_block_num',\n                    type: 'uint16',\n                },\n                {\n                    name: 'ref_block_prefix',\n                    type: 'uint32',\n                },\n                {\n                    name: 'max_net_usage_words',\n                    type: 'varuint32',\n                },\n                {\n                    name: 'max_cpu_usage_ms',\n                    type: 'uint8',\n                },\n                {\n                    name: 'delay_sec',\n                    type: 'varuint32',\n                },\n            ],\n        },\n        {\n            name: 'transaction',\n            base: 'transaction_header',\n            fields: [\n                {\n                    name: 'context_free_actions',\n                    type: 'action[]',\n                },\n                {\n                    name: 'actions',\n                    type: 'action[]',\n                },\n                {\n                    name: 'transaction_extensions',\n                    type: 'extension[]',\n                },\n            ],\n        },\n        {\n            name: 'info_pair',\n            fields: [\n                {\n                    name: 'key',\n                    type: 'string',\n                },\n                {\n                    name: 'value',\n                    type: 'bytes',\n                },\n            ],\n        },\n        {\n            name: 'signing_request',\n            fields: [\n                {\n                    name: 'chain_id',\n                    type: 'variant_id',\n                },\n                {\n                    name: 'req',\n                    type: 'variant_req',\n                },\n                {\n                    name: 'flags',\n                    type: 'request_flags',\n                },\n                {\n                    name: 'callback',\n                    type: 'string',\n                },\n                {\n                    name: 'info',\n                    type: 'info_pair[]',\n                },\n            ],\n        },\n        {\n            name: 'identity',\n            fields: [\n                {\n                    name: 'permission',\n                    type: 'permission_level?',\n                },\n            ],\n        },\n        {\n            name: 'request_signature',\n            fields: [\n                {\n                    name: 'signer',\n                    type: 'name',\n                },\n                {\n                    name: 'signature',\n                    type: 'signature',\n                },\n            ],\n        },\n    ],\n    variants: [\n        {\n            name: 'variant_id',\n            types: ['chain_alias', 'chain_id'],\n        },\n        {\n            name: 'variant_req',\n            types: ['action', 'action[]', 'transaction', 'identity'],\n        },\n    ],\n    actions: [\n        {\n            name: 'identity',\n            type: 'identity',\n        },\n    ],\n};\n","/**\n * Base64u - URL-Safe Base64 variant no padding.\n * Based on https://gist.github.com/jonleighton/958841\n */\nconst charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_';\nconst lookup = new Uint8Array(256);\nfor (let i = 0; i < 64; i++) {\n    lookup[charset.charCodeAt(i)] = i;\n}\nexport function encode(data) {\n    const byteLength = data.byteLength;\n    const byteRemainder = byteLength % 3;\n    const mainLength = byteLength - byteRemainder;\n    const parts = [];\n    let a;\n    let b;\n    let c;\n    let d;\n    let chunk;\n    // Main loop deals with bytes in chunks of 3\n    for (let i = 0; i < mainLength; i += 3) {\n        // Combine the three bytes into a single integer\n        chunk = (data[i] << 16) | (data[i + 1] << 8) | data[i + 2];\n        // Use bitmasks to extract 6-bit segments from the triplet\n        a = (chunk & 16515072) >> 18; // 16515072 = (2^6 - 1) << 18\n        b = (chunk & 258048) >> 12; // 258048   = (2^6 - 1) << 12\n        c = (chunk & 4032) >> 6; // 4032     = (2^6 - 1) << 6\n        d = chunk & 63; // 63       =  2^6 - 1\n        // Convert the raw binary segments to the appropriate ASCII encoding\n        parts.push(charset[a] + charset[b] + charset[c] + charset[d]);\n    }\n    // Deal with the remaining bytes\n    if (byteRemainder === 1) {\n        chunk = data[mainLength];\n        a = (chunk & 252) >> 2; // 252 = (2^6 - 1) << 2\n        // Set the 4 least significant bits to zero\n        b = (chunk & 3) << 4; // 3   = 2^2 - 1\n        parts.push(charset[a] + charset[b]);\n    }\n    else if (byteRemainder === 2) {\n        chunk = (data[mainLength] << 8) | data[mainLength + 1];\n        a = (chunk & 64512) >> 10; // 64512 = (2^6 - 1) << 10\n        b = (chunk & 1008) >> 4; // 1008  = (2^6 - 1) << 4\n        // Set the 2 least significant bits to zero\n        c = (chunk & 15) << 2; // 15    = 2^4 - 1\n        parts.push(charset[a] + charset[b] + charset[c]);\n    }\n    return parts.join('');\n}\nexport function decode(input) {\n    const byteLength = input.length * 0.75;\n    const data = new Uint8Array(byteLength);\n    let a;\n    let b;\n    let c;\n    let d;\n    let p = 0;\n    for (let i = 0; i < input.length; i += 4) {\n        a = lookup[input.charCodeAt(i)];\n        b = lookup[input.charCodeAt(i + 1)];\n        c = lookup[input.charCodeAt(i + 2)];\n        d = lookup[input.charCodeAt(i + 3)];\n        data[p++] = (a << 2) | (b >> 4);\n        data[p++] = ((b & 15) << 4) | (c >> 2);\n        data[p++] = ((c & 3) << 6) | (d & 63);\n    }\n    return data;\n}\n","/**\n * EOSIO Signing Request (ESR).\n */\nimport { Serialize } from 'eosjs';\nimport sha256 from 'fast-sha256';\nimport * as abi from './abi';\nimport * as base64u from './base64u';\nconst ProtocolVersion = 2;\nconst AbiTypes = Serialize.getTypesFromAbi(Serialize.createInitialTypes(), abi.data);\n/** Chain ID aliases. */\nexport var ChainName;\n(function (ChainName) {\n    ChainName[ChainName[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    ChainName[ChainName[\"EOS\"] = 1] = \"EOS\";\n    ChainName[ChainName[\"TELOS\"] = 2] = \"TELOS\";\n    ChainName[ChainName[\"JUNGLE\"] = 3] = \"JUNGLE\";\n    ChainName[ChainName[\"KYLIN\"] = 4] = \"KYLIN\";\n    ChainName[ChainName[\"WORBLI\"] = 5] = \"WORBLI\";\n    ChainName[ChainName[\"BOS\"] = 6] = \"BOS\";\n    ChainName[ChainName[\"MEETONE\"] = 7] = \"MEETONE\";\n    ChainName[ChainName[\"INSIGHTS\"] = 8] = \"INSIGHTS\";\n    ChainName[ChainName[\"BEOS\"] = 9] = \"BEOS\";\n    ChainName[ChainName[\"WAX\"] = 10] = \"WAX\";\n    ChainName[ChainName[\"PROTON\"] = 11] = \"PROTON\";\n    ChainName[ChainName[\"FIO\"] = 12] = \"FIO\";\n})(ChainName || (ChainName = {}));\nconst ChainIdLookup = new Map([\n    [ChainName.EOS, 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906'],\n    [ChainName.TELOS, '4667b205c6838ef70ff7988f6e8257e8be0e1284a2f59699054a018f743b1d11'],\n    [ChainName.JUNGLE, 'e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473'],\n    [ChainName.KYLIN, '5fff1dae8dc8e2fc4d5b23b2c7665c97f9e9d8edf2b6485a86ba311c25639191'],\n    [ChainName.WORBLI, '73647cde120091e0a4b85bced2f3cfdb3041e266cbbe95cee59b73235a1b3b6f'],\n    [ChainName.BOS, 'd5a3d18fbb3c084e3b1f3fa98c21014b5f3db536cc15d08f9f6479517c6a3d86'],\n    [ChainName.MEETONE, 'cfe6486a83bad4962f232d48003b1824ab5665c36778141034d75e57b956e422'],\n    [ChainName.INSIGHTS, 'b042025541e25a472bffde2d62edd457b7e70cee943412b1ea0f044f88591664'],\n    [ChainName.BEOS, 'b912d19a6abd2b1b05611ae5be473355d64d95aeff0c09bedc8c166cd6468fe4'],\n    [ChainName.WAX, '1064487b3cd1a897ce03ae5b6a865651747e2e152090f99c1d19d44e01aea5a4'],\n    [ChainName.PROTON, '384da888112027f0321850a169f737c33e53b388aad48b5adace4bab97f437e0'],\n    [ChainName.FIO, '21dcae42c0182200e93f954a074011f9048a7624c6fe81d3c9541a614a88bd1c'],\n]);\n/**\n * The placeholder name: `............1` aka `uint64(1)`.\n * If used in action data will be resolved to current signer.\n * If used in as an authorization permission will be resolved to\n * the signers permission level.\n *\n * Example action:\n * ```\n * { account: \"eosio.token\",\n *   name: \"transfer\",\n *   authorization: [{actor: \"............1\", permission: \"............1\"}],\n *   data: {\n *     from: \"............1\",\n *     to: \"bar\",\n *     quantity: \"42.0000 EOS\",\n *     memo: \"Don't panic\" }}\n * ```\n * When signed by `foo@active` would resolve to:\n * ```\n * { account: \"eosio.token\",\n *   name: \"transfer\",\n *   authorization: [{actor: \"foo\", permission: \"active\"}],\n *   data: {\n *     from: \"foo\",\n *     to: \"bar\",\n *     quantity: \"42.0000 EOS\",\n *     memo: \"Don't panic\" }}\n * ```\n */\nexport const PlaceholderName = '............1'; // aka uint64(1)\n/** Placeholder that will resolve to signer permission name. */\nexport const PlaceholderPermission = '............2'; // aka uint64(2)\nexport const PlaceholderAuth = {\n    actor: PlaceholderName,\n    permission: PlaceholderPermission,\n};\nlet SigningRequest = /** @class */ (() => {\n    class SigningRequest {\n        /**\n         * Create a new signing request.\n         * Normally not used directly, see the `create` and `from` class methods.\n         */\n        constructor(version, data, textEncoder, textDecoder, zlib, abiProvider, signature) {\n            if ((data.flags & abi.RequestFlagsBroadcast) !== 0 && data.req[0] === 'identity') {\n                throw new Error('Invalid request (identity request cannot be broadcast)');\n            }\n            if ((data.flags & abi.RequestFlagsBroadcast) === 0 && data.callback.length === 0) {\n                throw new Error('Invalid request (nothing to do, no broadcast or callback set)');\n            }\n            this.version = version;\n            this.data = data;\n            this.textEncoder = textEncoder;\n            this.textDecoder = textDecoder;\n            this.zlib = zlib;\n            this.abiProvider = abiProvider;\n            this.signature = signature;\n        }\n        /** Create a new signing request. */\n        static async create(args, options = {}) {\n            const textEncoder = options.textEncoder || new TextEncoder();\n            const textDecoder = options.textDecoder || new TextDecoder();\n            const data = {};\n            const serialize = (action) => {\n                return serializeAction(action, textEncoder, textDecoder, options.abiProvider);\n            };\n            // set the request data\n            if (args.identity !== undefined) {\n                data.req = ['identity', args.identity];\n            }\n            else if (args.action && !args.actions && !args.transaction) {\n                data.req = ['action', await serialize(args.action)];\n            }\n            else if (args.actions && !args.action && !args.transaction) {\n                if (args.actions.length === 1) {\n                    data.req = ['action', await serialize(args.actions[0])];\n                }\n                else {\n                    data.req = ['action[]', await Promise.all(args.actions.map(serialize))];\n                }\n            }\n            else if (args.transaction && !args.action && !args.actions) {\n                const tx = args.transaction;\n                // set default values if missing\n                if (tx.expiration === undefined) {\n                    tx.expiration = '1970-01-01T00:00:00.000';\n                }\n                if (tx.ref_block_num === undefined) {\n                    tx.ref_block_num = 0;\n                }\n                if (tx.ref_block_prefix === undefined) {\n                    tx.ref_block_prefix = 0;\n                }\n                if (tx.context_free_actions === undefined) {\n                    tx.context_free_actions = [];\n                }\n                if (tx.transaction_extensions === undefined) {\n                    tx.transaction_extensions = [];\n                }\n                if (tx.delay_sec === undefined) {\n                    tx.delay_sec = 0;\n                }\n                if (tx.max_cpu_usage_ms === undefined) {\n                    tx.max_cpu_usage_ms = 0;\n                }\n                if (tx.max_net_usage_words === undefined) {\n                    tx.max_net_usage_words = 0;\n                }\n                // encode actions if needed\n                tx.actions = await Promise.all(tx.actions.map(serialize));\n                data.req = ['transaction', tx];\n            }\n            else {\n                throw new TypeError('Invalid arguments: Must have exactly one of action, actions or transaction');\n            }\n            // set the chain id\n            data.chain_id = variantId(args.chainId);\n            data.flags = abi.RequestFlagsNone;\n            const broadcast = args.broadcast !== undefined ? args.broadcast : true;\n            if (broadcast) {\n                data.flags |= abi.RequestFlagsBroadcast;\n            }\n            if (typeof args.callback === 'string') {\n                data.callback = args.callback;\n            }\n            else if (typeof args.callback === 'object') {\n                data.callback = args.callback.url;\n                if (args.callback.background) {\n                    data.flags |= abi.RequestFlagsBackground;\n                }\n            }\n            else {\n                data.callback = '';\n            }\n            data.info = [];\n            if (typeof args.info === 'object') {\n                for (const key in args.info) {\n                    if (args.info.hasOwnProperty(key)) {\n                        let value = args.info[key];\n                        if (typeof key !== 'string') {\n                            throw new Error('Invalid info dict, keys must be strings');\n                        }\n                        if (typeof value === 'string') {\n                            value = textEncoder.encode(value);\n                        }\n                        data.info.push({ key, value });\n                    }\n                }\n            }\n            const req = new SigningRequest(ProtocolVersion, data, textEncoder, textDecoder, options.zlib, options.abiProvider);\n            // sign the request if given a signature provider\n            if (options.signatureProvider) {\n                req.sign(options.signatureProvider);\n            }\n            return req;\n        }\n        /** Creates an identity request. */\n        static identity(args, options = {}) {\n            let permission = {\n                actor: args.account || PlaceholderName,\n                permission: args.permission || PlaceholderPermission,\n            };\n            if (permission.actor === PlaceholderName &&\n                permission.permission === PlaceholderPermission) {\n                permission = null;\n            }\n            return this.create({\n                identity: {\n                    permission,\n                },\n                broadcast: false,\n                callback: args.callback,\n                info: args.info,\n            }, options);\n        }\n        /**\n         * Create a request from a chain id and serialized transaction.\n         * @param chainId The chain id where the transaction is valid.\n         * @param serializedTransaction The serialized transaction.\n         * @param options Creation options.\n         */\n        static fromTransaction(chainId, serializedTransaction, options = {}) {\n            if (typeof chainId !== 'string') {\n                chainId = Serialize.arrayToHex(chainId);\n            }\n            if (typeof serializedTransaction === 'string') {\n                serializedTransaction = Serialize.hexToUint8Array(serializedTransaction);\n            }\n            let buf = new Serialize.SerialBuffer({\n                textDecoder: options.textDecoder,\n                textEncoder: options.textEncoder,\n            });\n            buf.push(2); // header\n            const id = variantId(chainId);\n            if (id[0] === 'chain_alias') {\n                buf.push(0);\n                buf.push(id[1]);\n            }\n            else {\n                buf.push(1);\n                buf.pushArray(Serialize.hexToUint8Array(id[1]));\n            }\n            buf.push(2); // transaction variant\n            buf.pushArray(serializedTransaction);\n            buf.push(abi.RequestFlagsBroadcast); // flags\n            buf.push(0); // callback\n            buf.push(0); // info\n            return SigningRequest.fromData(buf.asUint8Array(), options);\n        }\n        /** Creates a signing request from encoded `esr:` uri string. */\n        static from(uri, options = {}) {\n            if (typeof uri !== 'string') {\n                throw new Error('Invalid request uri');\n            }\n            const [scheme, path] = uri.split(':');\n            if (scheme !== 'esr' && scheme !== 'web+esr') {\n                throw new Error('Invalid scheme');\n            }\n            const data = base64u.decode(path.startsWith('//') ? path.slice(2) : path);\n            return SigningRequest.fromData(data, options);\n        }\n        static fromData(data, options = {}) {\n            const header = data[0];\n            const version = header & ~(1 << 7);\n            if (version !== ProtocolVersion) {\n                throw new Error('Unsupported protocol version');\n            }\n            let array = data.slice(1);\n            if ((header & (1 << 7)) !== 0) {\n                if (!options.zlib) {\n                    throw new Error('Compressed URI needs zlib');\n                }\n                array = options.zlib.inflateRaw(array);\n            }\n            const textEncoder = options.textEncoder || new TextEncoder();\n            const textDecoder = options.textDecoder || new TextDecoder();\n            const buffer = new Serialize.SerialBuffer({\n                textEncoder,\n                textDecoder,\n                array,\n            });\n            const req = SigningRequest.type.deserialize(buffer);\n            let signature;\n            if (buffer.haveReadData()) {\n                const type = AbiTypes.get('request_signature');\n                signature = type.deserialize(buffer);\n            }\n            return new SigningRequest(version, req, textEncoder, textDecoder, options.zlib, options.abiProvider, signature);\n        }\n        /**\n         * Sign the request, mutating.\n         * @param signatureProvider The signature provider that provides a signature for the signer.\n         */\n        sign(signatureProvider) {\n            const message = this.getSignatureDigest();\n            this.signature = signatureProvider.sign(Serialize.arrayToHex(message));\n        }\n        /**\n         * Get the signature digest for this request.\n         */\n        getSignatureDigest() {\n            const buffer = new Serialize.SerialBuffer({\n                textEncoder: this.textEncoder,\n                textDecoder: this.textDecoder,\n            });\n            // protocol version + utf8 \"request\"\n            buffer.pushArray([this.version, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74]);\n            buffer.pushArray(this.getData());\n            return sha256(buffer.asUint8Array());\n        }\n        /**\n         * Set the signature data for this request, mutating.\n         * @param signer Account name of signer.\n         * @param signature The signature string.\n         */\n        setSignature(signer, signature) {\n            this.signature = { signer, signature };\n        }\n        /**\n         * Set the request callback, mutating.\n         * @param url Where the callback should be sent.\n         * @param background Whether the callback should be sent in the background.\n         */\n        setCallback(url, background) {\n            this.data.callback = url;\n            if (background) {\n                this.data.flags |= abi.RequestFlagsBackground;\n            }\n            else {\n                this.data.flags &= ~abi.RequestFlagsBackground;\n            }\n        }\n        /**\n         * Set broadcast flag.\n         * @param broadcast Whether the transaction should be broadcast by receiver.\n         */\n        setBroadcast(broadcast) {\n            if (broadcast) {\n                this.data.flags |= abi.RequestFlagsBroadcast;\n            }\n            else {\n                this.data.flags &= ~abi.RequestFlagsBroadcast;\n            }\n        }\n        /**\n         * Encode this request into an `esr:` uri.\n         * @argument compress Whether to compress the request data using zlib,\n         *                    defaults to true if omitted and zlib is present;\n         *                    otherwise false.\n         * @argument slashes Whether add slashes after the protocol scheme, i.e. `esr://`.\n         *                   Defaults to true.\n         * @returns An esr uri string.\n         */\n        encode(compress, slashes) {\n            const shouldCompress = compress !== undefined ? compress : this.zlib !== undefined;\n            if (shouldCompress && this.zlib === undefined) {\n                throw new Error('Need zlib to compress');\n            }\n            let header = this.version;\n            const data = this.getData();\n            const sigData = this.getSignatureData();\n            let array = new Uint8Array(data.byteLength + sigData.byteLength);\n            array.set(data, 0);\n            array.set(sigData, data.byteLength);\n            if (shouldCompress) {\n                const deflated = this.zlib.deflateRaw(array);\n                if (array.byteLength > deflated.byteLength) {\n                    header |= 1 << 7;\n                    array = deflated;\n                }\n            }\n            const out = new Uint8Array(1 + array.byteLength);\n            out[0] = header;\n            out.set(array, 1);\n            let scheme = 'esr:';\n            if (slashes !== false) {\n                scheme += '//';\n            }\n            return scheme + base64u.encode(out);\n        }\n        /** Get the request data without header or signature. */\n        getData() {\n            const buffer = new Serialize.SerialBuffer({\n                textEncoder: this.textEncoder,\n                textDecoder: this.textDecoder,\n            });\n            SigningRequest.type.serialize(buffer, this.data);\n            return buffer.asUint8Array();\n        }\n        /** Get signature data, returns an empty array if request is not signed. */\n        getSignatureData() {\n            if (!this.signature) {\n                return new Uint8Array(0);\n            }\n            const buffer = new Serialize.SerialBuffer({\n                textEncoder: this.textEncoder,\n                textDecoder: this.textDecoder,\n            });\n            const type = AbiTypes.get('request_signature');\n            type.serialize(buffer, this.signature);\n            return buffer.asUint8Array();\n        }\n        /** ABI definitions required to resolve request. */\n        getRequiredAbis() {\n            return this.getRawActions()\n                .filter((action) => !isIdentity(action))\n                .map((action) => action.account)\n                .filter((value, index, self) => self.indexOf(value) === index);\n        }\n        /** Whether TaPoS values are required to resolve request. */\n        requiresTapos() {\n            let tx = this.getRawTransaction();\n            return !this.isIdentity() && !hasTapos(tx);\n        }\n        /** Resolve required ABI definitions. */\n        async fetchAbis(abiProvider) {\n            const provider = abiProvider || this.abiProvider;\n            if (!provider) {\n                throw new Error('Missing ABI provider');\n            }\n            const abis = new Map();\n            await Promise.all(this.getRequiredAbis().map(async (account) => {\n                abis.set(account, await provider.getAbi(account));\n            }));\n            return abis;\n        }\n        /**\n         * Decode raw actions actions to object representations.\n         * @param abis ABI defenitions required to decode all actions.\n         * @param signer Placeholders in actions will be resolved to signer if set.\n         */\n        resolveActions(abis, signer) {\n            return this.getRawActions().map((rawAction) => {\n                let contractAbi;\n                if (isIdentity(rawAction)) {\n                    contractAbi = abi.data;\n                }\n                else {\n                    contractAbi = abis.get(rawAction.account);\n                }\n                if (!contractAbi) {\n                    throw new Error(`Missing ABI definition for ${rawAction.account}`);\n                }\n                const contract = getContract(contractAbi);\n                if (signer) {\n                    // hook into eosjs name decoder and return the signing account if we encounter the placeholder\n                    // this is fine because getContract re-creates the initial types each time\n                    contract.types.get('name').deserialize = (buffer) => {\n                        const name = buffer.getName();\n                        if (name === PlaceholderName) {\n                            return signer.actor;\n                        }\n                        else if (name === PlaceholderPermission) {\n                            return signer.permission;\n                        }\n                        else {\n                            return name;\n                        }\n                    };\n                }\n                const action = Serialize.deserializeAction(contract, rawAction.account, rawAction.name, rawAction.authorization, rawAction.data, this.textEncoder, this.textDecoder);\n                if (signer) {\n                    action.authorization = action.authorization.map((auth) => {\n                        let { actor, permission } = auth;\n                        if (actor === PlaceholderName) {\n                            actor = signer.actor;\n                        }\n                        if (permission === PlaceholderPermission) {\n                            permission = signer.permission;\n                        }\n                        // backwards compatibility, actor placeholder will also resolve to permission when used in auth\n                        if (permission === PlaceholderName) {\n                            permission = signer.permission;\n                        }\n                        return { actor, permission };\n                    });\n                }\n                return action;\n            });\n        }\n        resolveTransaction(abis, signer, ctx = {}) {\n            let tx = this.getRawTransaction();\n            if (!this.isIdentity() && !hasTapos(tx)) {\n                if (ctx.expiration !== undefined &&\n                    ctx.ref_block_num !== undefined &&\n                    ctx.ref_block_prefix !== undefined) {\n                    tx.expiration = ctx.expiration;\n                    tx.ref_block_num = ctx.ref_block_num;\n                    tx.ref_block_prefix = ctx.ref_block_prefix;\n                }\n                else if (ctx.block_num !== undefined &&\n                    ctx.ref_block_prefix !== undefined &&\n                    ctx.timestamp !== undefined) {\n                    const header = Serialize.transactionHeader(ctx, ctx.expire_seconds !== undefined ? ctx.expire_seconds : 60);\n                    tx.expiration = header.expiration;\n                    tx.ref_block_num = header.ref_block_num;\n                    tx.ref_block_prefix = header.ref_block_prefix;\n                }\n                else {\n                    throw new Error('Invalid transaction context, need either a reference block or explicit TAPoS values');\n                }\n            }\n            const actions = this.resolveActions(abis, signer);\n            return { ...tx, actions };\n        }\n        resolve(abis, signer, ctx = {}) {\n            const transaction = this.resolveTransaction(abis, signer, ctx);\n            const buf = new Serialize.SerialBuffer({\n                textDecoder: this.textDecoder,\n                textEncoder: this.textEncoder,\n            });\n            const actions = transaction.actions.map((action) => {\n                let contractAbi;\n                if (isIdentity(action)) {\n                    contractAbi = abi.data;\n                }\n                else {\n                    contractAbi = abis.get(action.account);\n                }\n                if (!contractAbi) {\n                    throw new Error(`Missing ABI definition for ${action.account}`);\n                }\n                const contract = getContract(contractAbi);\n                const { textDecoder, textEncoder } = this;\n                return Serialize.serializeAction(contract, action.account, action.name, action.authorization, action.data, textEncoder, textDecoder);\n            });\n            SigningRequest.transactionType.serialize(buf, {\n                ...transaction,\n                actions,\n            });\n            const serializedTransaction = buf.asUint8Array();\n            return new ResolvedSigningRequest(this, signer, transaction, serializedTransaction);\n        }\n        /**\n         * Get the id of the chain where this request is valid.\n         * @returns The 32-byte chain id as hex encoded string.\n         */\n        getChainId() {\n            const id = this.data.chain_id;\n            switch (id[0]) {\n                case 'chain_id':\n                    return id[1];\n                case 'chain_alias':\n                    if (ChainIdLookup.has(id[1])) {\n                        return ChainIdLookup.get(id[1]);\n                    }\n                    else {\n                        throw new Error('Unknown chain id alias');\n                    }\n                default:\n                    throw new Error('Invalid signing request data');\n            }\n        }\n        /** Return the actions in this request with action data encoded. */\n        getRawActions() {\n            const req = this.data.req;\n            switch (req[0]) {\n                case 'action':\n                    return [req[1]];\n                case 'action[]':\n                    return req[1];\n                case 'identity':\n                    let data = '0101000000000000000200000000000000'; // placeholder permission\n                    let authorization = [PlaceholderAuth];\n                    if (req[1].permission) {\n                        let buf = new Serialize.SerialBuffer({\n                            textDecoder: this.textDecoder,\n                            textEncoder: this.textEncoder,\n                        });\n                        SigningRequest.idType.serialize(buf, req[1]);\n                        data = Serialize.arrayToHex(buf.asUint8Array());\n                        authorization = [req[1].permission];\n                    }\n                    return [\n                        {\n                            account: '',\n                            name: 'identity',\n                            authorization,\n                            data,\n                        },\n                    ];\n                case 'transaction':\n                    return req[1].actions;\n                default:\n                    throw new Error('Invalid signing request data');\n            }\n        }\n        /** Unresolved transaction. */\n        getRawTransaction() {\n            const req = this.data.req;\n            switch (req[0]) {\n                case 'transaction':\n                    return req[1];\n                case 'action':\n                case 'action[]':\n                case 'identity':\n                    return {\n                        actions: this.getRawActions(),\n                        context_free_actions: [],\n                        transaction_extensions: [],\n                        expiration: '1970-01-01T00:00:00.000',\n                        ref_block_num: 0,\n                        ref_block_prefix: 0,\n                        max_cpu_usage_ms: 0,\n                        max_net_usage_words: 0,\n                        delay_sec: 0,\n                    };\n                default:\n                    throw new Error('Invalid signing request data');\n            }\n        }\n        /** Whether the request is an identity request. */\n        isIdentity() {\n            return this.data.req[0] === 'identity';\n        }\n        /** Whether the request should be broadcast by signer. */\n        shouldBroadcast() {\n            if (this.isIdentity()) {\n                return false;\n            }\n            return (this.data.flags & abi.RequestFlagsBroadcast) !== 0;\n        }\n        /**\n         * Present if the request is an identity request and requests a specific account.\n         * @note This returns `nil` unless a specific identity has been requested,\n         *       use `isIdentity` to check id requests.\n         */\n        getIdentity() {\n            if (this.data.req[0] === 'identity' && this.data.req[1].permission) {\n                const { actor } = this.data.req[1].permission;\n                return actor === PlaceholderName ? null : actor;\n            }\n            return null;\n        }\n        /**\n         * Present if the request is an identity request and requests a specific permission.\n         * @note This returns `nil` unless a specific permission has been requested,\n         *       use `isIdentity` to check id requests.\n         */\n        getIdentityPermission() {\n            if (this.data.req[0] === 'identity' && this.data.req[1].permission) {\n                const { permission } = this.data.req[1].permission;\n                return permission === PlaceholderName ? null : permission;\n            }\n            return null;\n        }\n        /** Get raw info dict */\n        getRawInfo() {\n            let rv = {};\n            for (const { key, value } of this.data.info) {\n                rv[key] = typeof value === 'string' ? Serialize.hexToUint8Array(value) : value;\n            }\n            return rv;\n        }\n        /** Get metadata values as strings. */\n        getInfo() {\n            let rv = {};\n            let raw = this.getRawInfo();\n            for (const key of Object.keys(raw)) {\n                rv[key] = this.textDecoder.decode(raw[key]);\n            }\n            return rv;\n        }\n        /** Set a metadata key. */\n        setInfoKey(key, value) {\n            let pair = this.data.info.find((pair) => {\n                return pair.key === key;\n            });\n            let encodedValue;\n            switch (typeof value) {\n                case 'string':\n                    encodedValue = this.textEncoder.encode(value);\n                    break;\n                case 'boolean':\n                    encodedValue = new Uint8Array([value ? 1 : 0]);\n                    break;\n                default:\n                    throw new TypeError('Invalid value type, expected string or boolean.');\n            }\n            if (!pair) {\n                pair = { key, value: encodedValue };\n                this.data.info.push(pair);\n            }\n            else {\n                pair.value = encodedValue;\n            }\n        }\n        /** Return a deep copy of this request. */\n        clone() {\n            let signature;\n            if (this.signature) {\n                signature = JSON.parse(JSON.stringify(this.signature));\n            }\n            const data = JSON.stringify(this.data, (key, value) => {\n                if (value instanceof Uint8Array) {\n                    return Array.from(value);\n                }\n                return value;\n            });\n            return new SigningRequest(this.version, JSON.parse(data), this.textEncoder, this.textDecoder, this.zlib, this.abiProvider, signature);\n        }\n        // Convenience methods.\n        toString() {\n            return this.encode();\n        }\n        toJSON() {\n            return this.encode();\n        }\n    }\n    SigningRequest.type = AbiTypes.get('signing_request');\n    SigningRequest.idType = AbiTypes.get('identity');\n    SigningRequest.transactionType = AbiTypes.get('transaction');\n    return SigningRequest;\n})();\nexport { SigningRequest };\nexport class ResolvedSigningRequest {\n    constructor(request, signer, transaction, serializedTransaction) {\n        this.request = request;\n        this.signer = signer;\n        this.transaction = transaction;\n        this.serializedTransaction = serializedTransaction;\n    }\n    /** Recreate a resolved request from a callback payload. */\n    static async fromPayload(payload, options = {}) {\n        const request = SigningRequest.from(payload.req, options);\n        const abis = await request.fetchAbis();\n        return request.resolve(abis, { actor: payload.sa, permission: payload.sp }, {\n            ref_block_num: Number(payload.rbn),\n            ref_block_prefix: Number(payload.rid),\n            expiration: payload.ex,\n        });\n    }\n    getTransactionId() {\n        return Serialize.arrayToHex(sha256(this.serializedTransaction));\n    }\n    getCallback(signatures, blockNum) {\n        const { callback, flags } = this.request.data;\n        if (!callback || callback.length === 0) {\n            return null;\n        }\n        if (!signatures || signatures.length === 0) {\n            throw new Error('Must have at least one signature to resolve callback');\n        }\n        const payload = {\n            sig: signatures[0],\n            tx: this.getTransactionId(),\n            rbn: String(this.transaction.ref_block_num),\n            rid: String(this.transaction.ref_block_prefix),\n            ex: this.transaction.expiration,\n            req: this.request.encode(),\n            sa: this.signer.actor,\n            sp: this.signer.permission,\n        };\n        for (const [n, sig] of signatures.slice(1).entries()) {\n            payload[`sig${n}`] = sig;\n        }\n        if (blockNum) {\n            payload.bn = String(blockNum);\n        }\n        const url = callback.replace(/({{([a-z0-9]+)}})/g, (_1, _2, m) => {\n            return payload[m] || '';\n        });\n        return {\n            background: (flags & abi.RequestFlagsBackground) !== 0,\n            payload,\n            url,\n        };\n    }\n}\n/** Internal helper that creates a contract representation from an abi for the eosjs serializer. */\nfunction getContract(contractAbi) {\n    const types = Serialize.getTypesFromAbi(Serialize.createInitialTypes(), contractAbi);\n    const actions = new Map();\n    for (const { name, type } of contractAbi.actions) {\n        actions.set(name, Serialize.getType(types, type));\n    }\n    return { types, actions };\n}\nasync function serializeAction(action, textEncoder, textDecoder, abiProvider) {\n    if (typeof action.data === 'string') {\n        return action;\n    }\n    let contractAbi;\n    if (isIdentity(action)) {\n        contractAbi = abi.data;\n    }\n    else if (abiProvider) {\n        contractAbi = await abiProvider.getAbi(action.account);\n    }\n    else {\n        throw new Error('Missing abi provider');\n    }\n    const contract = getContract(contractAbi);\n    return Serialize.serializeAction(contract, action.account, action.name, action.authorization, action.data, textEncoder, textDecoder);\n}\nfunction variantId(chainId) {\n    if (!chainId) {\n        chainId = ChainName.EOS;\n    }\n    if (typeof chainId === 'number') {\n        return ['chain_alias', chainId];\n    }\n    else {\n        // resolve known chain id's to their aliases\n        const name = idToName(chainId);\n        if (name !== ChainName.UNKNOWN) {\n            return ['chain_alias', name];\n        }\n        return ['chain_id', chainId];\n    }\n}\nfunction isIdentity(action) {\n    return action.account === '' && action.name === 'identity';\n}\nfunction hasTapos(tx) {\n    return !(tx.expiration === '1970-01-01T00:00:00.000' &&\n        tx.ref_block_num === 0 &&\n        tx.ref_block_prefix === 0);\n}\n/** Resolve a chain id to a chain name alias, returns UNKNOWN (0x00) if the chain id has no alias. */\nexport function idToName(chainId) {\n    chainId = chainId.toLowerCase();\n    for (const [n, id] of ChainIdLookup) {\n        if (id === chainId) {\n            n;\n        }\n    }\n    return ChainName.UNKNOWN;\n}\n/** Resolve a chain name alias to a chain id. */\nexport function nameToId(chainName) {\n    return (ChainIdLookup.get(chainName) ||\n        '0000000000000000000000000000000000000000000000000000000000000000');\n}\n","// shim for using process in browser\n// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\nvar cachedSetTimeout = defaultSetTimout;\nvar cachedClearTimeout = defaultClearTimeout;\nif (typeof global.setTimeout === 'function') {\n    cachedSetTimeout = setTimeout;\n}\nif (typeof global.clearTimeout === 'function') {\n    cachedClearTimeout = clearTimeout;\n}\n\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\nfunction nextTick(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n}\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nvar title = 'browser';\nvar platform = 'browser';\nvar browser = true;\nvar env = {};\nvar argv = [];\nvar version = ''; // empty string to avoid regexp issues\nvar versions = {};\nvar release = {};\nvar config = {};\n\nfunction noop() {}\n\nvar on = noop;\nvar addListener = noop;\nvar once = noop;\nvar off = noop;\nvar removeListener = noop;\nvar removeAllListeners = noop;\nvar emit = noop;\n\nfunction binding(name) {\n    throw new Error('process.binding is not supported');\n}\n\nfunction cwd () { return '/' }\nfunction chdir (dir) {\n    throw new Error('process.chdir is not supported');\n}function umask() { return 0; }\n\n// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\nvar performance = global.performance || {};\nvar performanceNow =\n  performance.now        ||\n  performance.mozNow     ||\n  performance.msNow      ||\n  performance.oNow       ||\n  performance.webkitNow  ||\n  function(){ return (new Date()).getTime() };\n\n// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nfunction hrtime(previousTimestamp){\n  var clocktime = performanceNow.call(performance)*1e-3;\n  var seconds = Math.floor(clocktime);\n  var nanoseconds = Math.floor((clocktime%1)*1e9);\n  if (previousTimestamp) {\n    seconds = seconds - previousTimestamp[0];\n    nanoseconds = nanoseconds - previousTimestamp[1];\n    if (nanoseconds<0) {\n      seconds--;\n      nanoseconds += 1e9;\n    }\n  }\n  return [seconds,nanoseconds]\n}\n\nvar startTime = new Date();\nfunction uptime() {\n  var currentTime = new Date();\n  var dif = currentTime - startTime;\n  return dif / 1000;\n}\n\nvar browser$1 = {\n  nextTick: nextTick,\n  title: title,\n  browser: browser,\n  env: env,\n  argv: argv,\n  version: version,\n  versions: versions,\n  on: on,\n  addListener: addListener,\n  once: once,\n  off: off,\n  removeListener: removeListener,\n  removeAllListeners: removeAllListeners,\n  emit: emit,\n  binding: binding,\n  cwd: cwd,\n  chdir: chdir,\n  umask: umask,\n  hrtime: hrtime,\n  platform: platform,\n  release: release,\n  config: config,\n  uptime: uptime\n};\n\nexport default browser$1;\nexport { addListener, argv, binding, browser, chdir, config, cwd, emit, env, hrtime, nextTick, off, on, once, platform, release, removeAllListeners, removeListener, title, umask, uptime, version, versions };\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n\nfunction oldBrowser () {\n  throw new Error('secure random number generation not supported by this browser\\nuse chrome, FireFox or Internet Explorer 11')\n}\n\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > 65536) throw new Error('requested too many random bytes')\n  // in case browserify  isn't using the Uint8Array version\n  var rawBytes = new global.Uint8Array(size)\n\n  // This will not work in older browsers.\n  // See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    crypto.getRandomValues(rawBytes)\n  }\n\n  // XXX: phantomjs doesn't like a buffer being passed here\n  var bytes = Buffer.from(rawBytes.buffer)\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n","/*\r\n Copyright 2013 Daniel Wirtz <dcode@dcode.io>\r\n Copyright 2009 The Closure Library Authors. All Rights Reserved.\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\n/**\r\n * @license long.js (c) 2013 Daniel Wirtz <dcode@dcode.io>\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/long.js for details\r\n */\r\n(function(global, factory) {\r\n\r\n    /* AMD */ if (typeof define === 'function' && define[\"amd\"])\r\n        define([], factory);\r\n    /* CommonJS */ else if (typeof require === 'function' && typeof module === \"object\" && module && module[\"exports\"])\r\n        module[\"exports\"] = factory();\r\n    /* Global */ else\r\n        (global[\"dcodeIO\"] = global[\"dcodeIO\"] || {})[\"Long\"] = factory();\r\n\r\n})(this, function() {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n     *  See the from* functions below for more convenient ways of constructing Longs.\r\n     * @exports Long\r\n     * @class A Long class for representing a 64 bit two's-complement integer value.\r\n     * @param {number} low The low (signed) 32 bits of the long\r\n     * @param {number} high The high (signed) 32 bits of the long\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @constructor\r\n     */\r\n    function Long(low, high, unsigned) {\r\n\r\n        /**\r\n         * The low 32 bits as a signed value.\r\n         * @type {number}\r\n         */\r\n        this.low = low | 0;\r\n\r\n        /**\r\n         * The high 32 bits as a signed value.\r\n         * @type {number}\r\n         */\r\n        this.high = high | 0;\r\n\r\n        /**\r\n         * Whether unsigned or not.\r\n         * @type {boolean}\r\n         */\r\n        this.unsigned = !!unsigned;\r\n    }\r\n\r\n    // The internal representation of a long is the two given signed, 32-bit values.\r\n    // We use 32-bit pieces because these are the size of integers on which\r\n    // Javascript performs bit-operations.  For operations like addition and\r\n    // multiplication, we split each number into 16 bit pieces, which can easily be\r\n    // multiplied within Javascript's floating-point representation without overflow\r\n    // or change in sign.\r\n    //\r\n    // In the algorithms below, we frequently reduce the negative case to the\r\n    // positive case by negating the input(s) and then post-processing the result.\r\n    // Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n    // (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n    // a positive number, it overflows back into a negative).  Not handling this\r\n    // case would often result in infinite recursion.\r\n    //\r\n    // Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n    // methods on which they depend.\r\n\r\n    /**\r\n     * An indicator used to reliably determine if an object is a Long or not.\r\n     * @type {boolean}\r\n     * @const\r\n     * @private\r\n     */\r\n    Long.prototype.__isLong__;\r\n\r\n    Object.defineProperty(Long.prototype, \"__isLong__\", {\r\n        value: true,\r\n        enumerable: false,\r\n        configurable: false\r\n    });\r\n\r\n    /**\r\n     * @function\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     * @inner\r\n     */\r\n    function isLong(obj) {\r\n        return (obj && obj[\"__isLong__\"]) === true;\r\n    }\r\n\r\n    /**\r\n     * Tests if the specified object is a Long.\r\n     * @function\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     */\r\n    Long.isLong = isLong;\r\n\r\n    /**\r\n     * A cache of the Long representations of small integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\r\n    var INT_CACHE = {};\r\n\r\n    /**\r\n     * A cache of the Long representations of small unsigned integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\r\n    var UINT_CACHE = {};\r\n\r\n    /**\r\n     * @param {number} value\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromInt(value, unsigned) {\r\n        var obj, cachedObj, cache;\r\n        if (unsigned) {\r\n            value >>>= 0;\r\n            if (cache = (0 <= value && value < 256)) {\r\n                cachedObj = UINT_CACHE[value];\r\n                if (cachedObj)\r\n                    return cachedObj;\r\n            }\r\n            obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n            if (cache)\r\n                UINT_CACHE[value] = obj;\r\n            return obj;\r\n        } else {\r\n            value |= 0;\r\n            if (cache = (-128 <= value && value < 128)) {\r\n                cachedObj = INT_CACHE[value];\r\n                if (cachedObj)\r\n                    return cachedObj;\r\n            }\r\n            obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n            if (cache)\r\n                INT_CACHE[value] = obj;\r\n            return obj;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the given 32 bit integer value.\r\n     * @function\r\n     * @param {number} value The 32 bit integer in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromInt = fromInt;\r\n\r\n    /**\r\n     * @param {number} value\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromNumber(value, unsigned) {\r\n        if (isNaN(value) || !isFinite(value))\r\n            return unsigned ? UZERO : ZERO;\r\n        if (unsigned) {\r\n            if (value < 0)\r\n                return UZERO;\r\n            if (value >= TWO_PWR_64_DBL)\r\n                return MAX_UNSIGNED_VALUE;\r\n        } else {\r\n            if (value <= -TWO_PWR_63_DBL)\r\n                return MIN_VALUE;\r\n            if (value + 1 >= TWO_PWR_63_DBL)\r\n                return MAX_VALUE;\r\n        }\r\n        if (value < 0)\r\n            return fromNumber(-value, unsigned).neg();\r\n        return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n     * @function\r\n     * @param {number} value The number in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromNumber = fromNumber;\r\n\r\n    /**\r\n     * @param {number} lowBits\r\n     * @param {number} highBits\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromBits(lowBits, highBits, unsigned) {\r\n        return new Long(lowBits, highBits, unsigned);\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n     *  assumed to use 32 bits.\r\n     * @function\r\n     * @param {number} lowBits The low 32 bits\r\n     * @param {number} highBits The high 32 bits\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromBits = fromBits;\r\n\r\n    /**\r\n     * @function\r\n     * @param {number} base\r\n     * @param {number} exponent\r\n     * @returns {number}\r\n     * @inner\r\n     */\r\n    var pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n    /**\r\n     * @param {string} str\r\n     * @param {(boolean|number)=} unsigned\r\n     * @param {number=} radix\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromString(str, unsigned, radix) {\r\n        if (str.length === 0)\r\n            throw Error('empty string');\r\n        if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n            return ZERO;\r\n        if (typeof unsigned === 'number') {\r\n            // For goog.math.long compatibility\r\n            radix = unsigned,\r\n            unsigned = false;\r\n        } else {\r\n            unsigned = !! unsigned;\r\n        }\r\n        radix = radix || 10;\r\n        if (radix < 2 || 36 < radix)\r\n            throw RangeError('radix');\r\n\r\n        var p;\r\n        if ((p = str.indexOf('-')) > 0)\r\n            throw Error('interior hyphen');\r\n        else if (p === 0) {\r\n            return fromString(str.substring(1), unsigned, radix).neg();\r\n        }\r\n\r\n        // Do several (8) digits each time through the loop, so as to\r\n        // minimize the calls to the very expensive emulated div.\r\n        var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n        var result = ZERO;\r\n        for (var i = 0; i < str.length; i += 8) {\r\n            var size = Math.min(8, str.length - i),\r\n                value = parseInt(str.substring(i, i + size), radix);\r\n            if (size < 8) {\r\n                var power = fromNumber(pow_dbl(radix, size));\r\n                result = result.mul(power).add(fromNumber(value));\r\n            } else {\r\n                result = result.mul(radixToPower);\r\n                result = result.add(fromNumber(value));\r\n            }\r\n        }\r\n        result.unsigned = unsigned;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representation of the given string, written using the specified radix.\r\n     * @function\r\n     * @param {string} str The textual representation of the Long\r\n     * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromString = fromString;\r\n\r\n    /**\r\n     * @function\r\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromValue(val) {\r\n        if (val /* is compatible */ instanceof Long)\r\n            return val;\r\n        if (typeof val === 'number')\r\n            return fromNumber(val);\r\n        if (typeof val === 'string')\r\n            return fromString(val);\r\n        // Throws for non-objects, converts non-instanceof Long:\r\n        return fromBits(val.low, val.high, val.unsigned);\r\n    }\r\n\r\n    /**\r\n     * Converts the specified value to a Long.\r\n     * @function\r\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n     * @returns {!Long}\r\n     */\r\n    Long.fromValue = fromValue;\r\n\r\n    // NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n    // no runtime penalty for these.\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_16_DBL = 1 << 16;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_24_DBL = 1 << 24;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var ZERO = fromInt(0);\r\n\r\n    /**\r\n     * Signed zero.\r\n     * @type {!Long}\r\n     */\r\n    Long.ZERO = ZERO;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var UZERO = fromInt(0, true);\r\n\r\n    /**\r\n     * Unsigned zero.\r\n     * @type {!Long}\r\n     */\r\n    Long.UZERO = UZERO;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var ONE = fromInt(1);\r\n\r\n    /**\r\n     * Signed one.\r\n     * @type {!Long}\r\n     */\r\n    Long.ONE = ONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var UONE = fromInt(1, true);\r\n\r\n    /**\r\n     * Unsigned one.\r\n     * @type {!Long}\r\n     */\r\n    Long.UONE = UONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var NEG_ONE = fromInt(-1);\r\n\r\n    /**\r\n     * Signed negative one.\r\n     * @type {!Long}\r\n     */\r\n    Long.NEG_ONE = NEG_ONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n    /**\r\n     * Maximum signed value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MAX_VALUE = MAX_VALUE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n    /**\r\n     * Maximum unsigned value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n    /**\r\n     * Minimum signed value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MIN_VALUE = MIN_VALUE;\r\n\r\n    /**\r\n     * @alias Long.prototype\r\n     * @inner\r\n     */\r\n    var LongPrototype = Long.prototype;\r\n\r\n    /**\r\n     * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.toInt = function toInt() {\r\n        return this.unsigned ? this.low >>> 0 : this.low;\r\n    };\r\n\r\n    /**\r\n     * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.toNumber = function toNumber() {\r\n        if (this.unsigned)\r\n            return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n        return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n    };\r\n\r\n    /**\r\n     * Converts the Long to a string written in the specified radix.\r\n     * @param {number=} radix Radix (2-36), defaults to 10\r\n     * @returns {string}\r\n     * @override\r\n     * @throws {RangeError} If `radix` is out of range\r\n     */\r\n    LongPrototype.toString = function toString(radix) {\r\n        radix = radix || 10;\r\n        if (radix < 2 || 36 < radix)\r\n            throw RangeError('radix');\r\n        if (this.isZero())\r\n            return '0';\r\n        if (this.isNegative()) { // Unsigned Longs are never negative\r\n            if (this.eq(MIN_VALUE)) {\r\n                // We need to change the Long value before it can be negated, so we remove\r\n                // the bottom-most digit in this base and then recurse to do the rest.\r\n                var radixLong = fromNumber(radix),\r\n                    div = this.div(radixLong),\r\n                    rem1 = div.mul(radixLong).sub(this);\r\n                return div.toString(radix) + rem1.toInt().toString(radix);\r\n            } else\r\n                return '-' + this.neg().toString(radix);\r\n        }\r\n\r\n        // Do several (6) digits each time through the loop, so as to\r\n        // minimize the calls to the very expensive emulated div.\r\n        var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n            rem = this;\r\n        var result = '';\r\n        while (true) {\r\n            var remDiv = rem.div(radixToPower),\r\n                intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n                digits = intval.toString(radix);\r\n            rem = remDiv;\r\n            if (rem.isZero())\r\n                return digits + result;\r\n            else {\r\n                while (digits.length < 6)\r\n                    digits = '0' + digits;\r\n                result = '' + digits + result;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Gets the high 32 bits as a signed integer.\r\n     * @returns {number} Signed high bits\r\n     */\r\n    LongPrototype.getHighBits = function getHighBits() {\r\n        return this.high;\r\n    };\r\n\r\n    /**\r\n     * Gets the high 32 bits as an unsigned integer.\r\n     * @returns {number} Unsigned high bits\r\n     */\r\n    LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n        return this.high >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Gets the low 32 bits as a signed integer.\r\n     * @returns {number} Signed low bits\r\n     */\r\n    LongPrototype.getLowBits = function getLowBits() {\r\n        return this.low;\r\n    };\r\n\r\n    /**\r\n     * Gets the low 32 bits as an unsigned integer.\r\n     * @returns {number} Unsigned low bits\r\n     */\r\n    LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n        return this.low >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Gets the number of bits needed to represent the absolute value of this Long.\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n        if (this.isNegative()) // Unsigned Longs are never negative\r\n            return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n        var val = this.high != 0 ? this.high : this.low;\r\n        for (var bit = 31; bit > 0; bit--)\r\n            if ((val & (1 << bit)) != 0)\r\n                break;\r\n        return this.high != 0 ? bit + 33 : bit + 1;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals zero.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isZero = function isZero() {\r\n        return this.high === 0 && this.low === 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is negative.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isNegative = function isNegative() {\r\n        return !this.unsigned && this.high < 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is positive.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isPositive = function isPositive() {\r\n        return this.unsigned || this.high >= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is odd.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isOdd = function isOdd() {\r\n        return (this.low & 1) === 1;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is even.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isEven = function isEven() {\r\n        return (this.low & 1) === 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.equals = function equals(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n            return false;\r\n        return this.high === other.high && this.low === other.low;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.eq = LongPrototype.equals;\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.notEquals = function notEquals(other) {\r\n        return !this.eq(/* validates */ other);\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.neq = LongPrototype.notEquals;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lessThan = function lessThan(other) {\r\n        return this.comp(/* validates */ other) < 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lt = LongPrototype.lessThan;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n        return this.comp(/* validates */ other) <= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.greaterThan = function greaterThan(other) {\r\n        return this.comp(/* validates */ other) > 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n        return this.comp(/* validates */ other) >= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n    /**\r\n     * Compares this Long's value with the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     */\r\n    LongPrototype.compare = function compare(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        if (this.eq(other))\r\n            return 0;\r\n        var thisNeg = this.isNegative(),\r\n            otherNeg = other.isNegative();\r\n        if (thisNeg && !otherNeg)\r\n            return -1;\r\n        if (!thisNeg && otherNeg)\r\n            return 1;\r\n        // At this point the sign bits are the same\r\n        if (!this.unsigned)\r\n            return this.sub(other).isNegative() ? -1 : 1;\r\n        // Both are positive if at least one is unsigned\r\n        return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n    };\r\n\r\n    /**\r\n     * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     */\r\n    LongPrototype.comp = LongPrototype.compare;\r\n\r\n    /**\r\n     * Negates this Long's value.\r\n     * @returns {!Long} Negated Long\r\n     */\r\n    LongPrototype.negate = function negate() {\r\n        if (!this.unsigned && this.eq(MIN_VALUE))\r\n            return MIN_VALUE;\r\n        return this.not().add(ONE);\r\n    };\r\n\r\n    /**\r\n     * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n     * @function\r\n     * @returns {!Long} Negated Long\r\n     */\r\n    LongPrototype.neg = LongPrototype.negate;\r\n\r\n    /**\r\n     * Returns the sum of this and the specified Long.\r\n     * @param {!Long|number|string} addend Addend\r\n     * @returns {!Long} Sum\r\n     */\r\n    LongPrototype.add = function add(addend) {\r\n        if (!isLong(addend))\r\n            addend = fromValue(addend);\r\n\r\n        // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n\r\n        var b48 = addend.high >>> 16;\r\n        var b32 = addend.high & 0xFFFF;\r\n        var b16 = addend.low >>> 16;\r\n        var b00 = addend.low & 0xFFFF;\r\n\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 + b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 + b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 + b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 + b48;\r\n        c48 &= 0xFFFF;\r\n        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the difference of this and the specified Long.\r\n     * @param {!Long|number|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     */\r\n    LongPrototype.subtract = function subtract(subtrahend) {\r\n        if (!isLong(subtrahend))\r\n            subtrahend = fromValue(subtrahend);\r\n        return this.add(subtrahend.neg());\r\n    };\r\n\r\n    /**\r\n     * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n     * @function\r\n     * @param {!Long|number|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     */\r\n    LongPrototype.sub = LongPrototype.subtract;\r\n\r\n    /**\r\n     * Returns the product of this and the specified Long.\r\n     * @param {!Long|number|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     */\r\n    LongPrototype.multiply = function multiply(multiplier) {\r\n        if (this.isZero())\r\n            return ZERO;\r\n        if (!isLong(multiplier))\r\n            multiplier = fromValue(multiplier);\r\n        if (multiplier.isZero())\r\n            return ZERO;\r\n        if (this.eq(MIN_VALUE))\r\n            return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n        if (multiplier.eq(MIN_VALUE))\r\n            return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n        if (this.isNegative()) {\r\n            if (multiplier.isNegative())\r\n                return this.neg().mul(multiplier.neg());\r\n            else\r\n                return this.neg().mul(multiplier).neg();\r\n        } else if (multiplier.isNegative())\r\n            return this.mul(multiplier.neg()).neg();\r\n\r\n        // If both longs are small, use float multiplication\r\n        if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n            return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n        // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n        // We can skip products that would overflow.\r\n\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n\r\n        var b48 = multiplier.high >>> 16;\r\n        var b32 = multiplier.high & 0xFFFF;\r\n        var b16 = multiplier.low >>> 16;\r\n        var b00 = multiplier.low & 0xFFFF;\r\n\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 * b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 * b00;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c16 += a00 * b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 * b00;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a16 * b16;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a00 * b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n        c48 &= 0xFFFF;\r\n        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n     * @function\r\n     * @param {!Long|number|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     */\r\n    LongPrototype.mul = LongPrototype.multiply;\r\n\r\n    /**\r\n     * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n     *  unsigned if this Long is unsigned.\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     */\r\n    LongPrototype.divide = function divide(divisor) {\r\n        if (!isLong(divisor))\r\n            divisor = fromValue(divisor);\r\n        if (divisor.isZero())\r\n            throw Error('division by zero');\r\n        if (this.isZero())\r\n            return this.unsigned ? UZERO : ZERO;\r\n        var approx, rem, res;\r\n        if (!this.unsigned) {\r\n            // This section is only relevant for signed longs and is derived from the\r\n            // closure library as a whole.\r\n            if (this.eq(MIN_VALUE)) {\r\n                if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                    return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n                else if (divisor.eq(MIN_VALUE))\r\n                    return ONE;\r\n                else {\r\n                    // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                    var halfThis = this.shr(1);\r\n                    approx = halfThis.div(divisor).shl(1);\r\n                    if (approx.eq(ZERO)) {\r\n                        return divisor.isNegative() ? ONE : NEG_ONE;\r\n                    } else {\r\n                        rem = this.sub(divisor.mul(approx));\r\n                        res = approx.add(rem.div(divisor));\r\n                        return res;\r\n                    }\r\n                }\r\n            } else if (divisor.eq(MIN_VALUE))\r\n                return this.unsigned ? UZERO : ZERO;\r\n            if (this.isNegative()) {\r\n                if (divisor.isNegative())\r\n                    return this.neg().div(divisor.neg());\r\n                return this.neg().div(divisor).neg();\r\n            } else if (divisor.isNegative())\r\n                return this.div(divisor.neg()).neg();\r\n            res = ZERO;\r\n        } else {\r\n            // The algorithm below has not been made for unsigned longs. It's therefore\r\n            // required to take special care of the MSB prior to running it.\r\n            if (!divisor.unsigned)\r\n                divisor = divisor.toUnsigned();\r\n            if (divisor.gt(this))\r\n                return UZERO;\r\n            if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n                return UONE;\r\n            res = UZERO;\r\n        }\r\n\r\n        // Repeat the following until the remainder is less than other:  find a\r\n        // floating-point that approximates remainder / other *from below*, add this\r\n        // into the result, and subtract it from the remainder.  It is critical that\r\n        // the approximate value is less than or equal to the real value so that the\r\n        // remainder never becomes negative.\r\n        rem = this;\r\n        while (rem.gte(divisor)) {\r\n            // Approximate the result of division. This may be a little greater or\r\n            // smaller than the actual value.\r\n            approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n            // We will tweak the approximate result by changing it in the 48-th digit or\r\n            // the smallest non-fractional digit, whichever is larger.\r\n            var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n                delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n            // Decrease the approximation until it is smaller than the remainder.  Note\r\n            // that if it is too large, the product overflows and is negative.\r\n                approxRes = fromNumber(approx),\r\n                approxRem = approxRes.mul(divisor);\r\n            while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n                approx -= delta;\r\n                approxRes = fromNumber(approx, this.unsigned);\r\n                approxRem = approxRes.mul(divisor);\r\n            }\r\n\r\n            // We know the answer can't be zero... and actually, zero would cause\r\n            // infinite recursion since we would make no progress.\r\n            if (approxRes.isZero())\r\n                approxRes = ONE;\r\n\r\n            res = res.add(approxRes);\r\n            rem = rem.sub(approxRem);\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n     * @function\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     */\r\n    LongPrototype.div = LongPrototype.divide;\r\n\r\n    /**\r\n     * Returns this Long modulo the specified.\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     */\r\n    LongPrototype.modulo = function modulo(divisor) {\r\n        if (!isLong(divisor))\r\n            divisor = fromValue(divisor);\r\n        return this.sub(this.div(divisor).mul(divisor));\r\n    };\r\n\r\n    /**\r\n     * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n     * @function\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     */\r\n    LongPrototype.mod = LongPrototype.modulo;\r\n\r\n    /**\r\n     * Returns the bitwise NOT of this Long.\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.not = function not() {\r\n        return fromBits(~this.low, ~this.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise AND of this Long and the specified.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.and = function and(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise OR of this Long and the specified.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.or = function or(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise XOR of this Long and the given one.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.xor = function xor(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        if ((numBits &= 63) === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n        else\r\n            return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftRight = function shiftRight(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        if ((numBits &= 63) === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n        else\r\n            return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        numBits &= 63;\r\n        if (numBits === 0)\r\n            return this;\r\n        else {\r\n            var high = this.high;\r\n            if (numBits < 32) {\r\n                var low = this.low;\r\n                return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n            } else if (numBits === 32)\r\n                return fromBits(high, 0, this.unsigned);\r\n            else\r\n                return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n    /**\r\n     * Converts this Long to signed.\r\n     * @returns {!Long} Signed long\r\n     */\r\n    LongPrototype.toSigned = function toSigned() {\r\n        if (!this.unsigned)\r\n            return this;\r\n        return fromBits(this.low, this.high, false);\r\n    };\r\n\r\n    /**\r\n     * Converts this Long to unsigned.\r\n     * @returns {!Long} Unsigned long\r\n     */\r\n    LongPrototype.toUnsigned = function toUnsigned() {\r\n        if (this.unsigned)\r\n            return this;\r\n        return fromBits(this.low, this.high, true);\r\n    };\r\n\r\n    /**\r\n     * Converts this Long to its byte representation.\r\n     * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n     * @returns {!Array.<number>} Byte representation\r\n     */\r\n    LongPrototype.toBytes = function(le) {\r\n        return le ? this.toBytesLE() : this.toBytesBE();\r\n    }\r\n\r\n    /**\r\n     * Converts this Long to its little endian byte representation.\r\n     * @returns {!Array.<number>} Little endian byte representation\r\n     */\r\n    LongPrototype.toBytesLE = function() {\r\n        var hi = this.high,\r\n            lo = this.low;\r\n        return [\r\n             lo         & 0xff,\r\n            (lo >>>  8) & 0xff,\r\n            (lo >>> 16) & 0xff,\r\n            (lo >>> 24) & 0xff,\r\n             hi         & 0xff,\r\n            (hi >>>  8) & 0xff,\r\n            (hi >>> 16) & 0xff,\r\n            (hi >>> 24) & 0xff\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Converts this Long to its big endian byte representation.\r\n     * @returns {!Array.<number>} Big endian byte representation\r\n     */\r\n    LongPrototype.toBytesBE = function() {\r\n        var hi = this.high,\r\n            lo = this.low;\r\n        return [\r\n            (hi >>> 24) & 0xff,\r\n            (hi >>> 16) & 0xff,\r\n            (hi >>>  8) & 0xff,\r\n             hi         & 0xff,\r\n            (lo >>> 24) & 0xff,\r\n            (lo >>> 16) & 0xff,\r\n            (lo >>>  8) & 0xff,\r\n             lo         & 0xff\r\n        ];\r\n    }\r\n\r\n    return Long;\r\n});\r\n","/*\r\n Copyright 2013-2014 Daniel Wirtz <dcode@dcode.io>\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\n/**\r\n * @license bytebuffer.js (c) 2015 Daniel Wirtz <dcode@dcode.io>\r\n * Backing buffer: ArrayBuffer, Accessor: Uint8Array\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/bytebuffer.js for details\r\n */\r\n(function(global, factory) {\r\n\r\n    /* AMD */ if (typeof define === 'function' && define[\"amd\"])\r\n        define([\"long\"], factory);\r\n    /* CommonJS */ else if (typeof require === 'function' && typeof module === \"object\" && module && module[\"exports\"])\r\n        module['exports'] = (function() {\r\n            var Long; try { Long = require(\"long\"); } catch (e) {}\r\n            return factory(Long);\r\n        })();\r\n    /* Global */ else\r\n        (global[\"dcodeIO\"] = global[\"dcodeIO\"] || {})[\"ByteBuffer\"] = factory(global[\"dcodeIO\"][\"Long\"]);\r\n\r\n})(this, function(Long) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Constructs a new ByteBuffer.\r\n     * @class The swiss army knife for binary data in JavaScript.\r\n     * @exports ByteBuffer\r\n     * @constructor\r\n     * @param {number=} capacity Initial capacity. Defaults to {@link ByteBuffer.DEFAULT_CAPACITY}.\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @expose\r\n     */\r\n    var ByteBuffer = function(capacity, littleEndian, noAssert) {\r\n        if (typeof capacity === 'undefined')\r\n            capacity = ByteBuffer.DEFAULT_CAPACITY;\r\n        if (typeof littleEndian === 'undefined')\r\n            littleEndian = ByteBuffer.DEFAULT_ENDIAN;\r\n        if (typeof noAssert === 'undefined')\r\n            noAssert = ByteBuffer.DEFAULT_NOASSERT;\r\n        if (!noAssert) {\r\n            capacity = capacity | 0;\r\n            if (capacity < 0)\r\n                throw RangeError(\"Illegal capacity\");\r\n            littleEndian = !!littleEndian;\r\n            noAssert = !!noAssert;\r\n        }\r\n\r\n        /**\r\n         * Backing ArrayBuffer.\r\n         * @type {!ArrayBuffer}\r\n         * @expose\r\n         */\r\n        this.buffer = capacity === 0 ? EMPTY_BUFFER : new ArrayBuffer(capacity);\r\n\r\n        /**\r\n         * Uint8Array utilized to manipulate the backing buffer. Becomes `null` if the backing buffer has a capacity of `0`.\r\n         * @type {?Uint8Array}\r\n         * @expose\r\n         */\r\n        this.view = capacity === 0 ? null : new Uint8Array(this.buffer);\r\n\r\n        /**\r\n         * Absolute read/write offset.\r\n         * @type {number}\r\n         * @expose\r\n         * @see ByteBuffer#flip\r\n         * @see ByteBuffer#clear\r\n         */\r\n        this.offset = 0;\r\n\r\n        /**\r\n         * Marked offset.\r\n         * @type {number}\r\n         * @expose\r\n         * @see ByteBuffer#mark\r\n         * @see ByteBuffer#reset\r\n         */\r\n        this.markedOffset = -1;\r\n\r\n        /**\r\n         * Absolute limit of the contained data. Set to the backing buffer's capacity upon allocation.\r\n         * @type {number}\r\n         * @expose\r\n         * @see ByteBuffer#flip\r\n         * @see ByteBuffer#clear\r\n         */\r\n        this.limit = capacity;\r\n\r\n        /**\r\n         * Whether to use little endian byte order, defaults to `false` for big endian.\r\n         * @type {boolean}\r\n         * @expose\r\n         */\r\n        this.littleEndian = littleEndian;\r\n\r\n        /**\r\n         * Whether to skip assertions of offsets and values, defaults to `false`.\r\n         * @type {boolean}\r\n         * @expose\r\n         */\r\n        this.noAssert = noAssert;\r\n    };\r\n\r\n    /**\r\n     * ByteBuffer version.\r\n     * @type {string}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.VERSION = \"5.0.1\";\r\n\r\n    /**\r\n     * Little endian constant that can be used instead of its boolean value. Evaluates to `true`.\r\n     * @type {boolean}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.LITTLE_ENDIAN = true;\r\n\r\n    /**\r\n     * Big endian constant that can be used instead of its boolean value. Evaluates to `false`.\r\n     * @type {boolean}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.BIG_ENDIAN = false;\r\n\r\n    /**\r\n     * Default initial capacity of `16`.\r\n     * @type {number}\r\n     * @expose\r\n     */\r\n    ByteBuffer.DEFAULT_CAPACITY = 16;\r\n\r\n    /**\r\n     * Default endianess of `false` for big endian.\r\n     * @type {boolean}\r\n     * @expose\r\n     */\r\n    ByteBuffer.DEFAULT_ENDIAN = ByteBuffer.BIG_ENDIAN;\r\n\r\n    /**\r\n     * Default no assertions flag of `false`.\r\n     * @type {boolean}\r\n     * @expose\r\n     */\r\n    ByteBuffer.DEFAULT_NOASSERT = false;\r\n\r\n    /**\r\n     * A `Long` class for representing a 64-bit two's-complement integer value. May be `null` if Long.js has not been loaded\r\n     *  and int64 support is not available.\r\n     * @type {?Long}\r\n     * @const\r\n     * @see https://github.com/dcodeIO/long.js\r\n     * @expose\r\n     */\r\n    ByteBuffer.Long = Long || null;\r\n\r\n    /**\r\n     * @alias ByteBuffer.prototype\r\n     * @inner\r\n     */\r\n    var ByteBufferPrototype = ByteBuffer.prototype;\r\n\r\n    /**\r\n     * An indicator used to reliably determine if an object is a ByteBuffer or not.\r\n     * @type {boolean}\r\n     * @const\r\n     * @expose\r\n     * @private\r\n     */\r\n    ByteBufferPrototype.__isByteBuffer__;\r\n\r\n    Object.defineProperty(ByteBufferPrototype, \"__isByteBuffer__\", {\r\n        value: true,\r\n        enumerable: false,\r\n        configurable: false\r\n    });\r\n\r\n    // helpers\r\n\r\n    /**\r\n     * @type {!ArrayBuffer}\r\n     * @inner\r\n     */\r\n    var EMPTY_BUFFER = new ArrayBuffer(0);\r\n\r\n    /**\r\n     * String.fromCharCode reference for compile-time renaming.\r\n     * @type {function(...number):string}\r\n     * @inner\r\n     */\r\n    var stringFromCharCode = String.fromCharCode;\r\n\r\n    /**\r\n     * Creates a source function for a string.\r\n     * @param {string} s String to read from\r\n     * @returns {function():number|null} Source function returning the next char code respectively `null` if there are\r\n     *  no more characters left.\r\n     * @throws {TypeError} If the argument is invalid\r\n     * @inner\r\n     */\r\n    function stringSource(s) {\r\n        var i=0; return function() {\r\n            return i < s.length ? s.charCodeAt(i++) : null;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Creates a destination function for a string.\r\n     * @returns {function(number=):undefined|string} Destination function successively called with the next char code.\r\n     *  Returns the final string when called without arguments.\r\n     * @inner\r\n     */\r\n    function stringDestination() {\r\n        var cs = [], ps = []; return function() {\r\n            if (arguments.length === 0)\r\n                return ps.join('')+stringFromCharCode.apply(String, cs);\r\n            if (cs.length + arguments.length > 1024)\r\n                ps.push(stringFromCharCode.apply(String, cs)),\r\n                    cs.length = 0;\r\n            Array.prototype.push.apply(cs, arguments);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Gets the accessor type.\r\n     * @returns {Function} `Buffer` under node.js, `Uint8Array` respectively `DataView` in the browser (classes)\r\n     * @expose\r\n     */\r\n    ByteBuffer.accessor = function() {\r\n        return Uint8Array;\r\n    };\r\n    /**\r\n     * Allocates a new ByteBuffer backed by a buffer of the specified capacity.\r\n     * @param {number=} capacity Initial capacity. Defaults to {@link ByteBuffer.DEFAULT_CAPACITY}.\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer}\r\n     * @expose\r\n     */\r\n    ByteBuffer.allocate = function(capacity, littleEndian, noAssert) {\r\n        return new ByteBuffer(capacity, littleEndian, noAssert);\r\n    };\r\n\r\n    /**\r\n     * Concatenates multiple ByteBuffers into one.\r\n     * @param {!Array.<!ByteBuffer|!ArrayBuffer|!Uint8Array|string>} buffers Buffers to concatenate\r\n     * @param {(string|boolean)=} encoding String encoding if `buffers` contains a string (\"base64\", \"hex\", \"binary\",\r\n     *  defaults to \"utf8\")\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order for the resulting ByteBuffer. Defaults\r\n     *  to {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values for the resulting ByteBuffer. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} Concatenated ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.concat = function(buffers, encoding, littleEndian, noAssert) {\r\n        if (typeof encoding === 'boolean' || typeof encoding !== 'string') {\r\n            noAssert = littleEndian;\r\n            littleEndian = encoding;\r\n            encoding = undefined;\r\n        }\r\n        var capacity = 0;\r\n        for (var i=0, k=buffers.length, length; i<k; ++i) {\r\n            if (!ByteBuffer.isByteBuffer(buffers[i]))\r\n                buffers[i] = ByteBuffer.wrap(buffers[i], encoding);\r\n            length = buffers[i].limit - buffers[i].offset;\r\n            if (length > 0) capacity += length;\r\n        }\r\n        if (capacity === 0)\r\n            return new ByteBuffer(0, littleEndian, noAssert);\r\n        var bb = new ByteBuffer(capacity, littleEndian, noAssert),\r\n            bi;\r\n        i=0; while (i<k) {\r\n            bi = buffers[i++];\r\n            length = bi.limit - bi.offset;\r\n            if (length <= 0) continue;\r\n            bb.view.set(bi.view.subarray(bi.offset, bi.limit), bb.offset);\r\n            bb.offset += length;\r\n        }\r\n        bb.limit = bb.offset;\r\n        bb.offset = 0;\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Tests if the specified type is a ByteBuffer.\r\n     * @param {*} bb ByteBuffer to test\r\n     * @returns {boolean} `true` if it is a ByteBuffer, otherwise `false`\r\n     * @expose\r\n     */\r\n    ByteBuffer.isByteBuffer = function(bb) {\r\n        return (bb && bb[\"__isByteBuffer__\"]) === true;\r\n    };\r\n    /**\r\n     * Gets the backing buffer type.\r\n     * @returns {Function} `Buffer` under node.js, `ArrayBuffer` in the browser (classes)\r\n     * @expose\r\n     */\r\n    ByteBuffer.type = function() {\r\n        return ArrayBuffer;\r\n    };\r\n    /**\r\n     * Wraps a buffer or a string. Sets the allocated ByteBuffer's {@link ByteBuffer#offset} to `0` and its\r\n     *  {@link ByteBuffer#limit} to the length of the wrapped data.\r\n     * @param {!ByteBuffer|!ArrayBuffer|!Uint8Array|string|!Array.<number>} buffer Anything that can be wrapped\r\n     * @param {(string|boolean)=} encoding String encoding if `buffer` is a string (\"base64\", \"hex\", \"binary\", defaults to\r\n     *  \"utf8\")\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} A ByteBuffer wrapping `buffer`\r\n     * @expose\r\n     */\r\n    ByteBuffer.wrap = function(buffer, encoding, littleEndian, noAssert) {\r\n        if (typeof encoding !== 'string') {\r\n            noAssert = littleEndian;\r\n            littleEndian = encoding;\r\n            encoding = undefined;\r\n        }\r\n        if (typeof buffer === 'string') {\r\n            if (typeof encoding === 'undefined')\r\n                encoding = \"utf8\";\r\n            switch (encoding) {\r\n                case \"base64\":\r\n                    return ByteBuffer.fromBase64(buffer, littleEndian);\r\n                case \"hex\":\r\n                    return ByteBuffer.fromHex(buffer, littleEndian);\r\n                case \"binary\":\r\n                    return ByteBuffer.fromBinary(buffer, littleEndian);\r\n                case \"utf8\":\r\n                    return ByteBuffer.fromUTF8(buffer, littleEndian);\r\n                case \"debug\":\r\n                    return ByteBuffer.fromDebug(buffer, littleEndian);\r\n                default:\r\n                    throw Error(\"Unsupported encoding: \"+encoding);\r\n            }\r\n        }\r\n        if (buffer === null || typeof buffer !== 'object')\r\n            throw TypeError(\"Illegal buffer\");\r\n        var bb;\r\n        if (ByteBuffer.isByteBuffer(buffer)) {\r\n            bb = ByteBufferPrototype.clone.call(buffer);\r\n            bb.markedOffset = -1;\r\n            return bb;\r\n        }\r\n        if (buffer instanceof Uint8Array) { // Extract ArrayBuffer from Uint8Array\r\n            bb = new ByteBuffer(0, littleEndian, noAssert);\r\n            if (buffer.length > 0) { // Avoid references to more than one EMPTY_BUFFER\r\n                bb.buffer = buffer.buffer;\r\n                bb.offset = buffer.byteOffset;\r\n                bb.limit = buffer.byteOffset + buffer.byteLength;\r\n                bb.view = new Uint8Array(buffer.buffer);\r\n            }\r\n        } else if (buffer instanceof ArrayBuffer) { // Reuse ArrayBuffer\r\n            bb = new ByteBuffer(0, littleEndian, noAssert);\r\n            if (buffer.byteLength > 0) {\r\n                bb.buffer = buffer;\r\n                bb.offset = 0;\r\n                bb.limit = buffer.byteLength;\r\n                bb.view = buffer.byteLength > 0 ? new Uint8Array(buffer) : null;\r\n            }\r\n        } else if (Object.prototype.toString.call(buffer) === \"[object Array]\") { // Create from octets\r\n            bb = new ByteBuffer(buffer.length, littleEndian, noAssert);\r\n            bb.limit = buffer.length;\r\n            for (var i=0; i<buffer.length; ++i)\r\n                bb.view[i] = buffer[i];\r\n        } else\r\n            throw TypeError(\"Illegal buffer\"); // Otherwise fail\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Writes the array as a bitset.\r\n     * @param {Array<boolean>} value Array of booleans to write\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.\r\n     * @returns {!ByteBuffer}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeBitSet = function(value, offset) {\r\n      var relative = typeof offset === 'undefined';\n      if (relative) offset = this.offset;\n      if (!this.noAssert) {\r\n        if (!(value instanceof Array))\r\n          throw TypeError(\"Illegal BitSet: Not an array\");\r\n        if (typeof offset !== 'number' || offset % 1 !== 0)\n            throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n        offset >>>= 0;\n        if (offset < 0 || offset + 0 > this.buffer.byteLength)\n            throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n      }\r\n\r\n      var start = offset,\r\n          bits = value.length,\r\n          bytes = (bits >> 3),\r\n          bit = 0,\r\n          k;\r\n\r\n      offset += this.writeVarint32(bits,offset);\r\n\r\n      while(bytes--) {\r\n        k = (!!value[bit++] & 1) |\r\n            ((!!value[bit++] & 1) << 1) |\r\n            ((!!value[bit++] & 1) << 2) |\r\n            ((!!value[bit++] & 1) << 3) |\r\n            ((!!value[bit++] & 1) << 4) |\r\n            ((!!value[bit++] & 1) << 5) |\r\n            ((!!value[bit++] & 1) << 6) |\r\n            ((!!value[bit++] & 1) << 7);\r\n        this.writeByte(k,offset++);\r\n      }\r\n\r\n      if(bit < bits) {\r\n        var m = 0; k = 0;\r\n        while(bit < bits) k = k | ((!!value[bit++] & 1) << (m++));\r\n        this.writeByte(k,offset++);\r\n      }\r\n\r\n      if (relative) {\r\n        this.offset = offset;\r\n        return this;\r\n      }\r\n      return offset - start;\r\n    }\r\n\r\n    /**\r\n     * Reads a BitSet as an array of booleans.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.\r\n     * @returns {Array<boolean>\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readBitSet = function(offset) {\r\n      var relative = typeof offset === 'undefined';\n      if (relative) offset = this.offset;\n\r\n      var ret = this.readVarint32(offset),\r\n          bits = ret.value,\r\n          bytes = (bits >> 3),\r\n          bit = 0,\r\n          value = [],\r\n          k;\r\n\r\n      offset += ret.length;\r\n\r\n      while(bytes--) {\r\n        k = this.readByte(offset++);\r\n        value[bit++] = !!(k & 0x01);\r\n        value[bit++] = !!(k & 0x02);\r\n        value[bit++] = !!(k & 0x04);\r\n        value[bit++] = !!(k & 0x08);\r\n        value[bit++] = !!(k & 0x10);\r\n        value[bit++] = !!(k & 0x20);\r\n        value[bit++] = !!(k & 0x40);\r\n        value[bit++] = !!(k & 0x80);\r\n      }\r\n\r\n      if(bit < bits) {\r\n        var m = 0;\r\n        k = this.readByte(offset++);\r\n        while(bit < bits) value[bit++] = !!((k >> (m++)) & 1);\r\n      }\r\n\r\n      if (relative) {\r\n        this.offset = offset;\r\n      }\r\n      return value;\r\n    }\r\n    /**\r\n     * Reads the specified number of bytes.\r\n     * @param {number} length Number of bytes to read\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.\r\n     * @returns {!ByteBuffer}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readBytes = function(length, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + length > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+length+\") <= \"+this.buffer.byteLength);\n        }\r\n        var slice = this.slice(offset, offset + length);\r\n        if (relative) this.offset += length;\n        return slice;\r\n    };\r\n\r\n    /**\r\n     * Writes a payload of bytes. This is an alias of {@link ByteBuffer#append}.\r\n     * @function\r\n     * @param {!ByteBuffer|!ArrayBuffer|!Uint8Array|string} source Data to write. If `source` is a ByteBuffer, its offsets\r\n     *  will be modified according to the performed read operation.\r\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeBytes = ByteBufferPrototype.append;\r\n\r\n    // types/ints/int8\r\n\r\n    /**\r\n     * Writes an 8bit signed integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeInt8 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 1;\n        var capacity0 = this.buffer.byteLength;\n        if (offset > capacity0)\n            this.resize((capacity0 *= 2) > offset ? capacity0 : offset);\n        offset -= 1;\n        this.view[offset] = value;\r\n        if (relative) this.offset += 1;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes an 8bit signed integer. This is an alias of {@link ByteBuffer#writeInt8}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeByte = ByteBufferPrototype.writeInt8;\r\n\r\n    /**\r\n     * Reads an 8bit signed integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readInt8 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = this.view[offset];\r\n        if ((value & 0x80) === 0x80) value = -(0xFF - value + 1); // Cast to signed\r\n        if (relative) this.offset += 1;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads an 8bit signed integer. This is an alias of {@link ByteBuffer#readInt8}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readByte = ByteBufferPrototype.readInt8;\r\n\r\n    /**\r\n     * Writes an 8bit unsigned integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUint8 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value >>>= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 1;\n        var capacity1 = this.buffer.byteLength;\n        if (offset > capacity1)\n            this.resize((capacity1 *= 2) > offset ? capacity1 : offset);\n        offset -= 1;\n        this.view[offset] = value;\r\n        if (relative) this.offset += 1;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes an 8bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint8}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUInt8 = ByteBufferPrototype.writeUint8;\r\n\r\n    /**\r\n     * Reads an 8bit unsigned integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUint8 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = this.view[offset];\r\n        if (relative) this.offset += 1;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads an 8bit unsigned integer. This is an alias of {@link ByteBuffer#readUint8}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUInt8 = ByteBufferPrototype.readUint8;\r\n\r\n    // types/ints/int16\r\n\r\n    /**\r\n     * Writes a 16bit signed integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeInt16 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 2;\n        var capacity2 = this.buffer.byteLength;\n        if (offset > capacity2)\n            this.resize((capacity2 *= 2) > offset ? capacity2 : offset);\n        offset -= 2;\n        if (this.littleEndian) {\r\n            this.view[offset+1] = (value & 0xFF00) >>> 8;\r\n            this.view[offset  ] =  value & 0x00FF;\r\n        } else {\r\n            this.view[offset]   = (value & 0xFF00) >>> 8;\r\n            this.view[offset+1] =  value & 0x00FF;\r\n        }\r\n        if (relative) this.offset += 2;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 16bit signed integer. This is an alias of {@link ByteBuffer#writeInt16}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeShort = ByteBufferPrototype.writeInt16;\r\n\r\n    /**\r\n     * Reads a 16bit signed integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readInt16 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 2 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+2+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = 0;\r\n        if (this.littleEndian) {\r\n            value  = this.view[offset  ];\r\n            value |= this.view[offset+1] << 8;\r\n        } else {\r\n            value  = this.view[offset  ] << 8;\r\n            value |= this.view[offset+1];\r\n        }\r\n        if ((value & 0x8000) === 0x8000) value = -(0xFFFF - value + 1); // Cast to signed\r\n        if (relative) this.offset += 2;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 16bit signed integer. This is an alias of {@link ByteBuffer#readInt16}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readShort = ByteBufferPrototype.readInt16;\r\n\r\n    /**\r\n     * Writes a 16bit unsigned integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUint16 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value >>>= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 2;\n        var capacity3 = this.buffer.byteLength;\n        if (offset > capacity3)\n            this.resize((capacity3 *= 2) > offset ? capacity3 : offset);\n        offset -= 2;\n        if (this.littleEndian) {\r\n            this.view[offset+1] = (value & 0xFF00) >>> 8;\r\n            this.view[offset  ] =  value & 0x00FF;\r\n        } else {\r\n            this.view[offset]   = (value & 0xFF00) >>> 8;\r\n            this.view[offset+1] =  value & 0x00FF;\r\n        }\r\n        if (relative) this.offset += 2;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 16bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint16}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUInt16 = ByteBufferPrototype.writeUint16;\r\n\r\n    /**\r\n     * Reads a 16bit unsigned integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUint16 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 2 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+2+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = 0;\r\n        if (this.littleEndian) {\r\n            value  = this.view[offset  ];\r\n            value |= this.view[offset+1] << 8;\r\n        } else {\r\n            value  = this.view[offset  ] << 8;\r\n            value |= this.view[offset+1];\r\n        }\r\n        if (relative) this.offset += 2;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 16bit unsigned integer. This is an alias of {@link ByteBuffer#readUint16}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUInt16 = ByteBufferPrototype.readUint16;\r\n\r\n    // types/ints/int32\r\n\r\n    /**\r\n     * Writes a 32bit signed integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeInt32 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 4;\n        var capacity4 = this.buffer.byteLength;\n        if (offset > capacity4)\n            this.resize((capacity4 *= 2) > offset ? capacity4 : offset);\n        offset -= 4;\n        if (this.littleEndian) {\n            this.view[offset+3] = (value >>> 24) & 0xFF;\n            this.view[offset+2] = (value >>> 16) & 0xFF;\n            this.view[offset+1] = (value >>>  8) & 0xFF;\n            this.view[offset  ] =  value         & 0xFF;\n        } else {\n            this.view[offset  ] = (value >>> 24) & 0xFF;\n            this.view[offset+1] = (value >>> 16) & 0xFF;\n            this.view[offset+2] = (value >>>  8) & 0xFF;\n            this.view[offset+3] =  value         & 0xFF;\n        }\n        if (relative) this.offset += 4;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 32bit signed integer. This is an alias of {@link ByteBuffer#writeInt32}.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeInt = ByteBufferPrototype.writeInt32;\r\n\r\n    /**\r\n     * Reads a 32bit signed integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readInt32 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = 0;\r\n        if (this.littleEndian) {\n            value  = this.view[offset+2] << 16;\n            value |= this.view[offset+1] <<  8;\n            value |= this.view[offset  ];\n            value += this.view[offset+3] << 24 >>> 0;\n        } else {\n            value  = this.view[offset+1] << 16;\n            value |= this.view[offset+2] <<  8;\n            value |= this.view[offset+3];\n            value += this.view[offset  ] << 24 >>> 0;\n        }\n        value |= 0; // Cast to signed\r\n        if (relative) this.offset += 4;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 32bit signed integer. This is an alias of {@link ByteBuffer#readInt32}.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readInt = ByteBufferPrototype.readInt32;\r\n\r\n    /**\r\n     * Writes a 32bit unsigned integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUint32 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value >>>= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 4;\n        var capacity5 = this.buffer.byteLength;\n        if (offset > capacity5)\n            this.resize((capacity5 *= 2) > offset ? capacity5 : offset);\n        offset -= 4;\n        if (this.littleEndian) {\n            this.view[offset+3] = (value >>> 24) & 0xFF;\n            this.view[offset+2] = (value >>> 16) & 0xFF;\n            this.view[offset+1] = (value >>>  8) & 0xFF;\n            this.view[offset  ] =  value         & 0xFF;\n        } else {\n            this.view[offset  ] = (value >>> 24) & 0xFF;\n            this.view[offset+1] = (value >>> 16) & 0xFF;\n            this.view[offset+2] = (value >>>  8) & 0xFF;\n            this.view[offset+3] =  value         & 0xFF;\n        }\n        if (relative) this.offset += 4;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 32bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint32}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUInt32 = ByteBufferPrototype.writeUint32;\r\n\r\n    /**\r\n     * Reads a 32bit unsigned integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUint32 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = 0;\r\n        if (this.littleEndian) {\n            value  = this.view[offset+2] << 16;\n            value |= this.view[offset+1] <<  8;\n            value |= this.view[offset  ];\n            value += this.view[offset+3] << 24 >>> 0;\n        } else {\n            value  = this.view[offset+1] << 16;\n            value |= this.view[offset+2] <<  8;\n            value |= this.view[offset+3];\n            value += this.view[offset  ] << 24 >>> 0;\n        }\n        if (relative) this.offset += 4;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 32bit unsigned integer. This is an alias of {@link ByteBuffer#readUint32}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUInt32 = ByteBufferPrototype.readUint32;\r\n\r\n    // types/ints/int64\r\n\r\n    if (Long) {\r\n\r\n        /**\r\n         * Writes a 64bit signed integer.\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeInt64 = function(value, offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof value === 'number')\n                    value = Long.fromNumber(value);\n                else if (typeof value === 'string')\n                    value = Long.fromString(value);\n                else if (!(value && value instanceof Long))\n                    throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n            }\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value);\n            else if (typeof value === 'string')\n                value = Long.fromString(value);\n            offset += 8;\n            var capacity6 = this.buffer.byteLength;\n            if (offset > capacity6)\n                this.resize((capacity6 *= 2) > offset ? capacity6 : offset);\n            offset -= 8;\n            var lo = value.low,\r\n                hi = value.high;\r\n            if (this.littleEndian) {\r\n                this.view[offset+3] = (lo >>> 24) & 0xFF;\n                this.view[offset+2] = (lo >>> 16) & 0xFF;\n                this.view[offset+1] = (lo >>>  8) & 0xFF;\n                this.view[offset  ] =  lo         & 0xFF;\n                offset += 4;\r\n                this.view[offset+3] = (hi >>> 24) & 0xFF;\n                this.view[offset+2] = (hi >>> 16) & 0xFF;\n                this.view[offset+1] = (hi >>>  8) & 0xFF;\n                this.view[offset  ] =  hi         & 0xFF;\n            } else {\r\n                this.view[offset  ] = (hi >>> 24) & 0xFF;\n                this.view[offset+1] = (hi >>> 16) & 0xFF;\n                this.view[offset+2] = (hi >>>  8) & 0xFF;\n                this.view[offset+3] =  hi         & 0xFF;\n                offset += 4;\r\n                this.view[offset  ] = (lo >>> 24) & 0xFF;\n                this.view[offset+1] = (lo >>> 16) & 0xFF;\n                this.view[offset+2] = (lo >>>  8) & 0xFF;\n                this.view[offset+3] =  lo         & 0xFF;\n            }\r\n            if (relative) this.offset += 8;\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Writes a 64bit signed integer. This is an alias of {@link ByteBuffer#writeInt64}.\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeLong = ByteBufferPrototype.writeInt64;\r\n\r\n        /**\r\n         * Reads a 64bit signed integer.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readInt64 = function(offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 8 > this.buffer.byteLength)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.byteLength);\n            }\r\n            var lo = 0,\r\n                hi = 0;\r\n            if (this.littleEndian) {\r\n                lo  = this.view[offset+2] << 16;\n                lo |= this.view[offset+1] <<  8;\n                lo |= this.view[offset  ];\n                lo += this.view[offset+3] << 24 >>> 0;\n                offset += 4;\r\n                hi  = this.view[offset+2] << 16;\n                hi |= this.view[offset+1] <<  8;\n                hi |= this.view[offset  ];\n                hi += this.view[offset+3] << 24 >>> 0;\n            } else {\r\n                hi  = this.view[offset+1] << 16;\n                hi |= this.view[offset+2] <<  8;\n                hi |= this.view[offset+3];\n                hi += this.view[offset  ] << 24 >>> 0;\n                offset += 4;\r\n                lo  = this.view[offset+1] << 16;\n                lo |= this.view[offset+2] <<  8;\n                lo |= this.view[offset+3];\n                lo += this.view[offset  ] << 24 >>> 0;\n            }\r\n            var value = new Long(lo, hi, false);\r\n            if (relative) this.offset += 8;\n            return value;\r\n        };\r\n\r\n        /**\r\n         * Reads a 64bit signed integer. This is an alias of {@link ByteBuffer#readInt64}.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readLong = ByteBufferPrototype.readInt64;\r\n\r\n        /**\r\n         * Writes a 64bit unsigned integer.\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeUint64 = function(value, offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof value === 'number')\n                    value = Long.fromNumber(value);\n                else if (typeof value === 'string')\n                    value = Long.fromString(value);\n                else if (!(value && value instanceof Long))\n                    throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n            }\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value);\n            else if (typeof value === 'string')\n                value = Long.fromString(value);\n            offset += 8;\n            var capacity7 = this.buffer.byteLength;\n            if (offset > capacity7)\n                this.resize((capacity7 *= 2) > offset ? capacity7 : offset);\n            offset -= 8;\n            var lo = value.low,\r\n                hi = value.high;\r\n            if (this.littleEndian) {\r\n                this.view[offset+3] = (lo >>> 24) & 0xFF;\n                this.view[offset+2] = (lo >>> 16) & 0xFF;\n                this.view[offset+1] = (lo >>>  8) & 0xFF;\n                this.view[offset  ] =  lo         & 0xFF;\n                offset += 4;\r\n                this.view[offset+3] = (hi >>> 24) & 0xFF;\n                this.view[offset+2] = (hi >>> 16) & 0xFF;\n                this.view[offset+1] = (hi >>>  8) & 0xFF;\n                this.view[offset  ] =  hi         & 0xFF;\n            } else {\r\n                this.view[offset  ] = (hi >>> 24) & 0xFF;\n                this.view[offset+1] = (hi >>> 16) & 0xFF;\n                this.view[offset+2] = (hi >>>  8) & 0xFF;\n                this.view[offset+3] =  hi         & 0xFF;\n                offset += 4;\r\n                this.view[offset  ] = (lo >>> 24) & 0xFF;\n                this.view[offset+1] = (lo >>> 16) & 0xFF;\n                this.view[offset+2] = (lo >>>  8) & 0xFF;\n                this.view[offset+3] =  lo         & 0xFF;\n            }\r\n            if (relative) this.offset += 8;\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Writes a 64bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint64}.\r\n         * @function\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeUInt64 = ByteBufferPrototype.writeUint64;\r\n\r\n        /**\r\n         * Reads a 64bit unsigned integer.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readUint64 = function(offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 8 > this.buffer.byteLength)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.byteLength);\n            }\r\n            var lo = 0,\r\n                hi = 0;\r\n            if (this.littleEndian) {\r\n                lo  = this.view[offset+2] << 16;\n                lo |= this.view[offset+1] <<  8;\n                lo |= this.view[offset  ];\n                lo += this.view[offset+3] << 24 >>> 0;\n                offset += 4;\r\n                hi  = this.view[offset+2] << 16;\n                hi |= this.view[offset+1] <<  8;\n                hi |= this.view[offset  ];\n                hi += this.view[offset+3] << 24 >>> 0;\n            } else {\r\n                hi  = this.view[offset+1] << 16;\n                hi |= this.view[offset+2] <<  8;\n                hi |= this.view[offset+3];\n                hi += this.view[offset  ] << 24 >>> 0;\n                offset += 4;\r\n                lo  = this.view[offset+1] << 16;\n                lo |= this.view[offset+2] <<  8;\n                lo |= this.view[offset+3];\n                lo += this.view[offset  ] << 24 >>> 0;\n            }\r\n            var value = new Long(lo, hi, true);\r\n            if (relative) this.offset += 8;\n            return value;\r\n        };\r\n\r\n        /**\r\n         * Reads a 64bit unsigned integer. This is an alias of {@link ByteBuffer#readUint64}.\r\n         * @function\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readUInt64 = ByteBufferPrototype.readUint64;\r\n\r\n    } // Long\r\n\r\n\r\n    // types/floats/float32\r\n\r\n    /*\r\n     ieee754 - https://github.com/feross/ieee754\r\n\r\n     The MIT License (MIT)\r\n\r\n     Copyright (c) Feross Aboukhadijeh\r\n\r\n     Permission is hereby granted, free of charge, to any person obtaining a copy\r\n     of this software and associated documentation files (the \"Software\"), to deal\r\n     in the Software without restriction, including without limitation the rights\r\n     to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n     copies of the Software, and to permit persons to whom the Software is\r\n     furnished to do so, subject to the following conditions:\r\n\r\n     The above copyright notice and this permission notice shall be included in\r\n     all copies or substantial portions of the Software.\r\n\r\n     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n     THE SOFTWARE.\r\n    */\r\n\r\n    /**\r\n     * Reads an IEEE754 float from a byte array.\r\n     * @param {!Array} buffer\r\n     * @param {number} offset\r\n     * @param {boolean} isLE\r\n     * @param {number} mLen\r\n     * @param {number} nBytes\r\n     * @returns {number}\r\n     * @inner\r\n     */\r\n    function ieee754_read(buffer, offset, isLE, mLen, nBytes) {\r\n        var e, m,\r\n            eLen = nBytes * 8 - mLen - 1,\r\n            eMax = (1 << eLen) - 1,\r\n            eBias = eMax >> 1,\r\n            nBits = -7,\r\n            i = isLE ? (nBytes - 1) : 0,\r\n            d = isLE ? -1 : 1,\r\n            s = buffer[offset + i];\r\n\r\n        i += d;\r\n\r\n        e = s & ((1 << (-nBits)) - 1);\r\n        s >>= (-nBits);\r\n        nBits += eLen;\r\n        for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n        m = e & ((1 << (-nBits)) - 1);\r\n        e >>= (-nBits);\r\n        nBits += mLen;\r\n        for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n        if (e === 0) {\r\n            e = 1 - eBias;\r\n        } else if (e === eMax) {\r\n            return m ? NaN : ((s ? -1 : 1) * Infinity);\r\n        } else {\r\n            m = m + Math.pow(2, mLen);\r\n            e = e - eBias;\r\n        }\r\n        return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\r\n    }\r\n\r\n    /**\r\n     * Writes an IEEE754 float to a byte array.\r\n     * @param {!Array} buffer\r\n     * @param {number} value\r\n     * @param {number} offset\r\n     * @param {boolean} isLE\r\n     * @param {number} mLen\r\n     * @param {number} nBytes\r\n     * @inner\r\n     */\r\n    function ieee754_write(buffer, value, offset, isLE, mLen, nBytes) {\r\n        var e, m, c,\r\n            eLen = nBytes * 8 - mLen - 1,\r\n            eMax = (1 << eLen) - 1,\r\n            eBias = eMax >> 1,\r\n            rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),\r\n            i = isLE ? 0 : (nBytes - 1),\r\n            d = isLE ? 1 : -1,\r\n            s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\r\n\r\n        value = Math.abs(value);\r\n\r\n        if (isNaN(value) || value === Infinity) {\r\n            m = isNaN(value) ? 1 : 0;\r\n            e = eMax;\r\n        } else {\r\n            e = Math.floor(Math.log(value) / Math.LN2);\r\n            if (value * (c = Math.pow(2, -e)) < 1) {\r\n                e--;\r\n                c *= 2;\r\n            }\r\n            if (e + eBias >= 1) {\r\n                value += rt / c;\r\n            } else {\r\n                value += rt * Math.pow(2, 1 - eBias);\r\n            }\r\n            if (value * c >= 2) {\r\n                e++;\r\n                c /= 2;\r\n            }\r\n\r\n            if (e + eBias >= eMax) {\r\n                m = 0;\r\n                e = eMax;\r\n            } else if (e + eBias >= 1) {\r\n                m = (value * c - 1) * Math.pow(2, mLen);\r\n                e = e + eBias;\r\n            } else {\r\n                m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\r\n                e = 0;\r\n            }\r\n        }\r\n\r\n        for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\r\n\r\n        e = (e << mLen) | m;\r\n        eLen += mLen;\r\n        for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\r\n\r\n        buffer[offset + i - d] |= s * 128;\r\n    }\r\n\r\n    /**\r\n     * Writes a 32bit float.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeFloat32 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number')\r\n                throw TypeError(\"Illegal value: \"+value+\" (not a number)\");\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 4;\n        var capacity8 = this.buffer.byteLength;\n        if (offset > capacity8)\n            this.resize((capacity8 *= 2) > offset ? capacity8 : offset);\n        offset -= 4;\n        ieee754_write(this.view, value, offset, this.littleEndian, 23, 4);\r\n        if (relative) this.offset += 4;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 32bit float. This is an alias of {@link ByteBuffer#writeFloat32}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeFloat = ByteBufferPrototype.writeFloat32;\r\n\r\n    /**\r\n     * Reads a 32bit float.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readFloat32 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = ieee754_read(this.view, offset, this.littleEndian, 23, 4);\r\n        if (relative) this.offset += 4;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 32bit float. This is an alias of {@link ByteBuffer#readFloat32}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readFloat = ByteBufferPrototype.readFloat32;\r\n\r\n    // types/floats/float64\r\n\r\n    /**\r\n     * Writes a 64bit float.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeFloat64 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number')\r\n                throw TypeError(\"Illegal value: \"+value+\" (not a number)\");\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 8;\n        var capacity9 = this.buffer.byteLength;\n        if (offset > capacity9)\n            this.resize((capacity9 *= 2) > offset ? capacity9 : offset);\n        offset -= 8;\n        ieee754_write(this.view, value, offset, this.littleEndian, 52, 8);\r\n        if (relative) this.offset += 8;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 64bit float. This is an alias of {@link ByteBuffer#writeFloat64}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeDouble = ByteBufferPrototype.writeFloat64;\r\n\r\n    /**\r\n     * Reads a 64bit float.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readFloat64 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 8 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = ieee754_read(this.view, offset, this.littleEndian, 52, 8);\r\n        if (relative) this.offset += 8;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 64bit float. This is an alias of {@link ByteBuffer#readFloat64}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readDouble = ByteBufferPrototype.readFloat64;\r\n\r\n\r\n    // types/varints/varint32\r\n\r\n    /**\r\n     * Maximum number of bytes required to store a 32bit base 128 variable-length integer.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.MAX_VARINT32_BYTES = 5;\r\n\r\n    /**\r\n     * Calculates the actual number of bytes required to store a 32bit base 128 variable-length integer.\r\n     * @param {number} value Value to encode\r\n     * @returns {number} Number of bytes required. Capped to {@link ByteBuffer.MAX_VARINT32_BYTES}\r\n     * @expose\r\n     */\r\n    ByteBuffer.calculateVarint32 = function(value) {\r\n        // ref: src/google/protobuf/io/coded_stream.cc\r\n        value = value >>> 0;\r\n             if (value < 1 << 7 ) return 1;\r\n        else if (value < 1 << 14) return 2;\r\n        else if (value < 1 << 21) return 3;\r\n        else if (value < 1 << 28) return 4;\r\n        else                      return 5;\r\n    };\r\n\r\n    /**\r\n     * Zigzag encodes a signed 32bit integer so that it can be effectively used with varint encoding.\r\n     * @param {number} n Signed 32bit integer\r\n     * @returns {number} Unsigned zigzag encoded 32bit integer\r\n     * @expose\r\n     */\r\n    ByteBuffer.zigZagEncode32 = function(n) {\r\n        return (((n |= 0) << 1) ^ (n >> 31)) >>> 0; // ref: src/google/protobuf/wire_format_lite.h\r\n    };\r\n\r\n    /**\r\n     * Decodes a zigzag encoded signed 32bit integer.\r\n     * @param {number} n Unsigned zigzag encoded 32bit integer\r\n     * @returns {number} Signed 32bit integer\r\n     * @expose\r\n     */\r\n    ByteBuffer.zigZagDecode32 = function(n) {\r\n        return ((n >>> 1) ^ -(n & 1)) | 0; // // ref: src/google/protobuf/wire_format_lite.h\r\n    };\r\n\r\n    /**\r\n     * Writes a 32bit base 128 variable-length integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} this if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeVarint32 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        var size = ByteBuffer.calculateVarint32(value),\r\n            b;\r\n        offset += size;\n        var capacity10 = this.buffer.byteLength;\n        if (offset > capacity10)\n            this.resize((capacity10 *= 2) > offset ? capacity10 : offset);\n        offset -= size;\n        value >>>= 0;\r\n        while (value >= 0x80) {\r\n            b = (value & 0x7f) | 0x80;\r\n            this.view[offset++] = b;\r\n            value >>>= 7;\r\n        }\r\n        this.view[offset++] = value;\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return size;\r\n    };\r\n\r\n    /**\r\n     * Writes a zig-zag encoded (signed) 32bit base 128 variable-length integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} this if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeVarint32ZigZag = function(value, offset) {\r\n        return this.writeVarint32(ByteBuffer.zigZagEncode32(value), offset);\r\n    };\r\n\r\n    /**\r\n     * Reads a 32bit base 128 variable-length integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {number|!{value: number, length: number}} The value read if offset is omitted, else the value read\r\n     *  and the actual number of bytes read.\r\n     * @throws {Error} If it's not a valid varint. Has a property `truncated = true` if there is not enough data available\r\n     *  to fully decode the varint.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readVarint32 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);\n        }\r\n        var c = 0,\r\n            value = 0 >>> 0,\r\n            b;\r\n        do {\r\n            if (!this.noAssert && offset > this.limit) {\r\n                var err = Error(\"Truncated\");\r\n                err['truncated'] = true;\r\n                throw err;\r\n            }\r\n            b = this.view[offset++];\r\n            if (c < 5)\r\n                value |= (b & 0x7f) << (7*c);\r\n            ++c;\r\n        } while ((b & 0x80) !== 0);\r\n        value |= 0;\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return value;\r\n        }\r\n        return {\r\n            \"value\": value,\r\n            \"length\": c\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Reads a zig-zag encoded (signed) 32bit base 128 variable-length integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {number|!{value: number, length: number}} The value read if offset is omitted, else the value read\r\n     *  and the actual number of bytes read.\r\n     * @throws {Error} If it's not a valid varint\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readVarint32ZigZag = function(offset) {\r\n        var val = this.readVarint32(offset);\r\n        if (typeof val === 'object')\r\n            val[\"value\"] = ByteBuffer.zigZagDecode32(val[\"value\"]);\r\n        else\r\n            val = ByteBuffer.zigZagDecode32(val);\r\n        return val;\r\n    };\r\n\r\n    // types/varints/varint64\r\n\r\n    if (Long) {\r\n\r\n        /**\r\n         * Maximum number of bytes required to store a 64bit base 128 variable-length integer.\r\n         * @type {number}\r\n         * @const\r\n         * @expose\r\n         */\r\n        ByteBuffer.MAX_VARINT64_BYTES = 10;\r\n\r\n        /**\r\n         * Calculates the actual number of bytes required to store a 64bit base 128 variable-length integer.\r\n         * @param {number|!Long} value Value to encode\r\n         * @returns {number} Number of bytes required. Capped to {@link ByteBuffer.MAX_VARINT64_BYTES}\r\n         * @expose\r\n         */\r\n        ByteBuffer.calculateVarint64 = function(value) {\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value);\n            else if (typeof value === 'string')\n                value = Long.fromString(value);\n            // ref: src/google/protobuf/io/coded_stream.cc\r\n            var part0 = value.toInt() >>> 0,\r\n                part1 = value.shiftRightUnsigned(28).toInt() >>> 0,\r\n                part2 = value.shiftRightUnsigned(56).toInt() >>> 0;\r\n            if (part2 == 0) {\r\n                if (part1 == 0) {\r\n                    if (part0 < 1 << 14)\r\n                        return part0 < 1 << 7 ? 1 : 2;\r\n                    else\r\n                        return part0 < 1 << 21 ? 3 : 4;\r\n                } else {\r\n                    if (part1 < 1 << 14)\r\n                        return part1 < 1 << 7 ? 5 : 6;\r\n                    else\r\n                        return part1 < 1 << 21 ? 7 : 8;\r\n                }\r\n            } else\r\n                return part2 < 1 << 7 ? 9 : 10;\r\n        };\r\n\r\n        /**\r\n         * Zigzag encodes a signed 64bit integer so that it can be effectively used with varint encoding.\r\n         * @param {number|!Long} value Signed long\r\n         * @returns {!Long} Unsigned zigzag encoded long\r\n         * @expose\r\n         */\r\n        ByteBuffer.zigZagEncode64 = function(value) {\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value, false);\n            else if (typeof value === 'string')\n                value = Long.fromString(value, false);\n            else if (value.unsigned !== false) value = value.toSigned();\n            // ref: src/google/protobuf/wire_format_lite.h\r\n            return value.shiftLeft(1).xor(value.shiftRight(63)).toUnsigned();\r\n        };\r\n\r\n        /**\r\n         * Decodes a zigzag encoded signed 64bit integer.\r\n         * @param {!Long|number} value Unsigned zigzag encoded long or JavaScript number\r\n         * @returns {!Long} Signed long\r\n         * @expose\r\n         */\r\n        ByteBuffer.zigZagDecode64 = function(value) {\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value, false);\n            else if (typeof value === 'string')\n                value = Long.fromString(value, false);\n            else if (value.unsigned !== false) value = value.toSigned();\n            // ref: src/google/protobuf/wire_format_lite.h\r\n            return value.shiftRightUnsigned(1).xor(value.and(Long.ONE).toSigned().negate()).toSigned();\r\n        };\r\n\r\n        /**\r\n         * Writes a 64bit base 128 variable-length integer.\r\n         * @param {number|Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  written if omitted.\r\n         * @returns {!ByteBuffer|number} `this` if offset is omitted, else the actual number of bytes written.\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeVarint64 = function(value, offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof value === 'number')\n                    value = Long.fromNumber(value);\n                else if (typeof value === 'string')\n                    value = Long.fromString(value);\n                else if (!(value && value instanceof Long))\n                    throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n            }\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value, false);\n            else if (typeof value === 'string')\n                value = Long.fromString(value, false);\n            else if (value.unsigned !== false) value = value.toSigned();\n            var size = ByteBuffer.calculateVarint64(value),\r\n                part0 = value.toInt() >>> 0,\r\n                part1 = value.shiftRightUnsigned(28).toInt() >>> 0,\r\n                part2 = value.shiftRightUnsigned(56).toInt() >>> 0;\r\n            offset += size;\n            var capacity11 = this.buffer.byteLength;\n            if (offset > capacity11)\n                this.resize((capacity11 *= 2) > offset ? capacity11 : offset);\n            offset -= size;\n            switch (size) {\r\n                case 10: this.view[offset+9] = (part2 >>>  7) & 0x01;\r\n                case 9 : this.view[offset+8] = size !== 9 ? (part2       ) | 0x80 : (part2       ) & 0x7F;\r\n                case 8 : this.view[offset+7] = size !== 8 ? (part1 >>> 21) | 0x80 : (part1 >>> 21) & 0x7F;\r\n                case 7 : this.view[offset+6] = size !== 7 ? (part1 >>> 14) | 0x80 : (part1 >>> 14) & 0x7F;\r\n                case 6 : this.view[offset+5] = size !== 6 ? (part1 >>>  7) | 0x80 : (part1 >>>  7) & 0x7F;\r\n                case 5 : this.view[offset+4] = size !== 5 ? (part1       ) | 0x80 : (part1       ) & 0x7F;\r\n                case 4 : this.view[offset+3] = size !== 4 ? (part0 >>> 21) | 0x80 : (part0 >>> 21) & 0x7F;\r\n                case 3 : this.view[offset+2] = size !== 3 ? (part0 >>> 14) | 0x80 : (part0 >>> 14) & 0x7F;\r\n                case 2 : this.view[offset+1] = size !== 2 ? (part0 >>>  7) | 0x80 : (part0 >>>  7) & 0x7F;\r\n                case 1 : this.view[offset  ] = size !== 1 ? (part0       ) | 0x80 : (part0       ) & 0x7F;\r\n            }\r\n            if (relative) {\r\n                this.offset += size;\r\n                return this;\r\n            } else {\r\n                return size;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Writes a zig-zag encoded 64bit base 128 variable-length integer.\r\n         * @param {number|Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  written if omitted.\r\n         * @returns {!ByteBuffer|number} `this` if offset is omitted, else the actual number of bytes written.\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeVarint64ZigZag = function(value, offset) {\r\n            return this.writeVarint64(ByteBuffer.zigZagEncode64(value), offset);\r\n        };\r\n\r\n        /**\r\n         * Reads a 64bit base 128 variable-length integer. Requires Long.js.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  read if omitted.\r\n         * @returns {!Long|!{value: Long, length: number}} The value read if offset is omitted, else the value read and\r\n         *  the actual number of bytes read.\r\n         * @throws {Error} If it's not a valid varint\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readVarint64 = function(offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 1 > this.buffer.byteLength)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);\n            }\r\n            // ref: src/google/protobuf/io/coded_stream.cc\r\n            var start = offset,\r\n                part0 = 0,\r\n                part1 = 0,\r\n                part2 = 0,\r\n                b  = 0;\r\n            b = this.view[offset++]; part0  = (b & 0x7F)      ; if ( b & 0x80                                                   ) {\r\n            b = this.view[offset++]; part0 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part0 |= (b & 0x7F) << 14; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part0 |= (b & 0x7F) << 21; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part1  = (b & 0x7F)      ; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part1 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part1 |= (b & 0x7F) << 14; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part1 |= (b & 0x7F) << 21; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part2  = (b & 0x7F)      ; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part2 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            throw Error(\"Buffer overrun\"); }}}}}}}}}}\r\n            var value = Long.fromBits(part0 | (part1 << 28), (part1 >>> 4) | (part2) << 24, false);\r\n            if (relative) {\r\n                this.offset = offset;\r\n                return value;\r\n            } else {\r\n                return {\r\n                    'value': value,\r\n                    'length': offset-start\r\n                };\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Reads a zig-zag encoded 64bit base 128 variable-length integer. Requires Long.js.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  read if omitted.\r\n         * @returns {!Long|!{value: Long, length: number}} The value read if offset is omitted, else the value read and\r\n         *  the actual number of bytes read.\r\n         * @throws {Error} If it's not a valid varint\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readVarint64ZigZag = function(offset) {\r\n            var val = this.readVarint64(offset);\r\n            if (val && val['value'] instanceof Long)\r\n                val[\"value\"] = ByteBuffer.zigZagDecode64(val[\"value\"]);\r\n            else\r\n                val = ByteBuffer.zigZagDecode64(val);\r\n            return val;\r\n        };\r\n\r\n    } // Long\r\n\r\n\r\n    // types/strings/cstring\r\n\r\n    /**\r\n     * Writes a NULL-terminated UTF8 encoded string. For this to work the specified string must not contain any NULL\r\n     *  characters itself.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  contained in `str` + 1 if omitted.\r\n     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeCString = function(str, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        var i,\r\n            k = str.length;\r\n        if (!this.noAssert) {\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n            for (i=0; i<k; ++i) {\r\n                if (str.charCodeAt(i) === 0)\r\n                    throw RangeError(\"Illegal str: Contains NULL-characters\");\r\n            }\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        // UTF8 strings do not contain zero bytes in between except for the zero character, so:\r\n        k = utfx.calculateUTF16asUTF8(stringSource(str))[1];\r\n        offset += k+1;\n        var capacity12 = this.buffer.byteLength;\n        if (offset > capacity12)\n            this.resize((capacity12 *= 2) > offset ? capacity12 : offset);\n        offset -= k+1;\n        utfx.encodeUTF16toUTF8(stringSource(str), function(b) {\r\n            this.view[offset++] = b;\r\n        }.bind(this));\r\n        this.view[offset++] = 0;\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return k;\r\n    };\r\n\r\n    /**\r\n     * Reads a NULL-terminated UTF8 encoded string. For this to work the string read must not contain any NULL characters\r\n     *  itself.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readCString = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);\n        }\r\n        var start = offset,\r\n            temp;\r\n        // UTF8 strings do not contain zero bytes in between except for the zero character itself, so:\r\n        var sd, b = -1;\r\n        utfx.decodeUTF8toUTF16(function() {\r\n            if (b === 0) return null;\r\n            if (offset >= this.limit)\r\n                throw RangeError(\"Illegal range: Truncated data, \"+offset+\" < \"+this.limit);\r\n            b = this.view[offset++];\r\n            return b === 0 ? null : b;\r\n        }.bind(this), sd = stringDestination(), true);\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return sd();\r\n        } else {\r\n            return {\r\n                \"string\": sd(),\r\n                \"length\": offset - start\r\n            };\r\n        }\r\n    };\r\n\r\n    // types/strings/istring\r\n\r\n    /**\r\n     * Writes a length as uint32 prefixed UTF8 encoded string.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} `this` if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     * @see ByteBuffer#writeVarint32\r\n     */\r\n    ByteBufferPrototype.writeIString = function(str, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        var start = offset,\r\n            k;\r\n        k = utfx.calculateUTF16asUTF8(stringSource(str), this.noAssert)[1];\r\n        offset += 4+k;\n        var capacity13 = this.buffer.byteLength;\n        if (offset > capacity13)\n            this.resize((capacity13 *= 2) > offset ? capacity13 : offset);\n        offset -= 4+k;\n        if (this.littleEndian) {\n            this.view[offset+3] = (k >>> 24) & 0xFF;\n            this.view[offset+2] = (k >>> 16) & 0xFF;\n            this.view[offset+1] = (k >>>  8) & 0xFF;\n            this.view[offset  ] =  k         & 0xFF;\n        } else {\n            this.view[offset  ] = (k >>> 24) & 0xFF;\n            this.view[offset+1] = (k >>> 16) & 0xFF;\n            this.view[offset+2] = (k >>>  8) & 0xFF;\n            this.view[offset+3] =  k         & 0xFF;\n        }\n        offset += 4;\r\n        utfx.encodeUTF16toUTF8(stringSource(str), function(b) {\r\n            this.view[offset++] = b;\r\n        }.bind(this));\r\n        if (offset !== start + 4 + k)\r\n            throw RangeError(\"Illegal range: Truncated data, \"+offset+\" == \"+(offset+4+k));\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return offset - start;\r\n    };\r\n\r\n    /**\r\n     * Reads a length as uint32 prefixed UTF8 encoded string.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     * @see ByteBuffer#readVarint32\r\n     */\r\n    ByteBufferPrototype.readIString = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.byteLength);\n        }\r\n        var start = offset;\r\n        var len = this.readUint32(offset);\r\n        var str = this.readUTF8String(len, ByteBuffer.METRICS_BYTES, offset += 4);\r\n        offset += str['length'];\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return str['string'];\r\n        } else {\r\n            return {\r\n                'string': str['string'],\r\n                'length': offset - start\r\n            };\r\n        }\r\n    };\r\n\r\n    // types/strings/utf8string\r\n\r\n    /**\r\n     * Metrics representing number of UTF8 characters. Evaluates to `c`.\r\n     * @type {string}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.METRICS_CHARS = 'c';\r\n\r\n    /**\r\n     * Metrics representing number of bytes. Evaluates to `b`.\r\n     * @type {string}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.METRICS_BYTES = 'b';\r\n\r\n    /**\r\n     * Writes an UTF8 encoded string.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} if omitted.\r\n     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUTF8String = function(str, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        var k;\r\n        var start = offset;\r\n        k = utfx.calculateUTF16asUTF8(stringSource(str))[1];\r\n        offset += k;\n        var capacity14 = this.buffer.byteLength;\n        if (offset > capacity14)\n            this.resize((capacity14 *= 2) > offset ? capacity14 : offset);\n        offset -= k;\n        utfx.encodeUTF16toUTF8(stringSource(str), function(b) {\r\n            this.view[offset++] = b;\r\n        }.bind(this));\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return offset - start;\r\n    };\r\n\r\n    /**\r\n     * Writes an UTF8 encoded string. This is an alias of {@link ByteBuffer#writeUTF8String}.\r\n     * @function\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} if omitted.\r\n     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeString = ByteBufferPrototype.writeUTF8String;\r\n\r\n    /**\r\n     * Calculates the number of UTF8 characters of a string. JavaScript itself uses UTF-16, so that a string's\r\n     *  `length` property does not reflect its actual UTF8 size if it contains code points larger than 0xFFFF.\r\n     * @param {string} str String to calculate\r\n     * @returns {number} Number of UTF8 characters\r\n     * @expose\r\n     */\r\n    ByteBuffer.calculateUTF8Chars = function(str) {\r\n        return utfx.calculateUTF16asUTF8(stringSource(str))[0];\r\n    };\r\n\r\n    /**\r\n     * Calculates the number of UTF8 bytes of a string.\r\n     * @param {string} str String to calculate\r\n     * @returns {number} Number of UTF8 bytes\r\n     * @expose\r\n     */\r\n    ByteBuffer.calculateUTF8Bytes = function(str) {\r\n        return utfx.calculateUTF16asUTF8(stringSource(str))[1];\r\n    };\r\n\r\n    /**\r\n     * Calculates the number of UTF8 bytes of a string. This is an alias of {@link ByteBuffer.calculateUTF8Bytes}.\r\n     * @function\r\n     * @param {string} str String to calculate\r\n     * @returns {number} Number of UTF8 bytes\r\n     * @expose\r\n     */\r\n    ByteBuffer.calculateString = ByteBuffer.calculateUTF8Bytes;\r\n\r\n    /**\r\n     * Reads an UTF8 encoded string.\r\n     * @param {number} length Number of characters or bytes to read.\r\n     * @param {string=} metrics Metrics specifying what `length` is meant to count. Defaults to\r\n     *  {@link ByteBuffer.METRICS_CHARS}.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUTF8String = function(length, metrics, offset) {\r\n        if (typeof metrics === 'number') {\r\n            offset = metrics;\r\n            metrics = undefined;\r\n        }\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (typeof metrics === 'undefined') metrics = ByteBuffer.METRICS_CHARS;\r\n        if (!this.noAssert) {\r\n            if (typeof length !== 'number' || length % 1 !== 0)\n                throw TypeError(\"Illegal length: \"+length+\" (not an integer)\");\n            length |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        var i = 0,\r\n            start = offset,\r\n            sd;\r\n        if (metrics === ByteBuffer.METRICS_CHARS) { // The same for node and the browser\r\n            sd = stringDestination();\r\n            utfx.decodeUTF8(function() {\r\n                return i < length && offset < this.limit ? this.view[offset++] : null;\r\n            }.bind(this), function(cp) {\r\n                ++i; utfx.UTF8toUTF16(cp, sd);\r\n            });\r\n            if (i !== length)\r\n                throw RangeError(\"Illegal range: Truncated data, \"+i+\" == \"+length);\r\n            if (relative) {\r\n                this.offset = offset;\r\n                return sd();\r\n            } else {\r\n                return {\r\n                    \"string\": sd(),\r\n                    \"length\": offset - start\r\n                };\r\n            }\r\n        } else if (metrics === ByteBuffer.METRICS_BYTES) {\r\n            if (!this.noAssert) {\r\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + length > this.buffer.byteLength)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+length+\") <= \"+this.buffer.byteLength);\n            }\r\n            var k = offset + length;\r\n            utfx.decodeUTF8toUTF16(function() {\r\n                return offset < k ? this.view[offset++] : null;\r\n            }.bind(this), sd = stringDestination(), this.noAssert);\r\n            if (offset !== k)\r\n                throw RangeError(\"Illegal range: Truncated data, \"+offset+\" == \"+k);\r\n            if (relative) {\r\n                this.offset = offset;\r\n                return sd();\r\n            } else {\r\n                return {\r\n                    'string': sd(),\r\n                    'length': offset - start\r\n                };\r\n            }\r\n        } else\r\n            throw TypeError(\"Unsupported metrics: \"+metrics);\r\n    };\r\n\r\n    /**\r\n     * Reads an UTF8 encoded string. This is an alias of {@link ByteBuffer#readUTF8String}.\r\n     * @function\r\n     * @param {number} length Number of characters or bytes to read\r\n     * @param {number=} metrics Metrics specifying what `n` is meant to count. Defaults to\r\n     *  {@link ByteBuffer.METRICS_CHARS}.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readString = ByteBufferPrototype.readUTF8String;\r\n\r\n    // types/strings/vstring\r\n\r\n    /**\r\n     * Writes a length as varint32 prefixed UTF8 encoded string.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} `this` if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     * @see ByteBuffer#writeVarint32\r\n     */\r\n    ByteBufferPrototype.writeVString = function(str, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        var start = offset,\r\n            k, l;\r\n        k = utfx.calculateUTF16asUTF8(stringSource(str), this.noAssert)[1];\r\n        l = ByteBuffer.calculateVarint32(k);\r\n        offset += l+k;\n        var capacity15 = this.buffer.byteLength;\n        if (offset > capacity15)\n            this.resize((capacity15 *= 2) > offset ? capacity15 : offset);\n        offset -= l+k;\n        offset += this.writeVarint32(k, offset);\r\n        utfx.encodeUTF16toUTF8(stringSource(str), function(b) {\r\n            this.view[offset++] = b;\r\n        }.bind(this));\r\n        if (offset !== start+k+l)\r\n            throw RangeError(\"Illegal range: Truncated data, \"+offset+\" == \"+(offset+k+l));\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return offset - start;\r\n    };\r\n\r\n    /**\r\n     * Reads a length as varint32 prefixed UTF8 encoded string.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     * @see ByteBuffer#readVarint32\r\n     */\r\n    ByteBufferPrototype.readVString = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);\n        }\r\n        var start = offset;\r\n        var len = this.readVarint32(offset);\r\n        var str = this.readUTF8String(len['value'], ByteBuffer.METRICS_BYTES, offset += len['length']);\r\n        offset += str['length'];\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return str['string'];\r\n        } else {\r\n            return {\r\n                'string': str['string'],\r\n                'length': offset - start\r\n            };\r\n        }\r\n    };\r\n\r\n\r\n    /**\r\n     * Appends some data to this ByteBuffer. This will overwrite any contents behind the specified offset up to the appended\r\n     *  data's length.\r\n     * @param {!ByteBuffer|!ArrayBuffer|!Uint8Array|string} source Data to append. If `source` is a ByteBuffer, its offsets\r\n     *  will be modified according to the performed read operation.\r\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\r\n     * @param {number=} offset Offset to append at. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @example A relative `<01 02>03.append(<04 05>)` will result in `<01 02 04 05>, 04 05|`\r\n     * @example An absolute `<01 02>03.append(04 05>, 1)` will result in `<01 04>05, 04 05|`\r\n     */\r\n    ByteBufferPrototype.append = function(source, encoding, offset) {\r\n        if (typeof encoding === 'number' || typeof encoding !== 'string') {\r\n            offset = encoding;\r\n            encoding = undefined;\r\n        }\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        if (!(source instanceof ByteBuffer))\r\n            source = ByteBuffer.wrap(source, encoding);\r\n        var length = source.limit - source.offset;\r\n        if (length <= 0) return this; // Nothing to append\r\n        offset += length;\n        var capacity16 = this.buffer.byteLength;\n        if (offset > capacity16)\n            this.resize((capacity16 *= 2) > offset ? capacity16 : offset);\n        offset -= length;\n        this.view.set(source.view.subarray(source.offset, source.limit), offset);\r\n        source.offset += length;\r\n        if (relative) this.offset += length;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Appends this ByteBuffer's contents to another ByteBuffer. This will overwrite any contents at and after the\r\n        specified offset up to the length of this ByteBuffer's data.\r\n     * @param {!ByteBuffer} target Target ByteBuffer\r\n     * @param {number=} offset Offset to append to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @see ByteBuffer#append\r\n     */\r\n    ByteBufferPrototype.appendTo = function(target, offset) {\r\n        target.append(this, offset);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Enables or disables assertions of argument types and offsets. Assertions are enabled by default but you can opt to\r\n     *  disable them if your code already makes sure that everything is valid.\r\n     * @param {boolean} assert `true` to enable assertions, otherwise `false`\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.assert = function(assert) {\r\n        this.noAssert = !assert;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Gets the capacity of this ByteBuffer's backing buffer.\r\n     * @returns {number} Capacity of the backing buffer\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.capacity = function() {\r\n        return this.buffer.byteLength;\r\n    };\r\n    /**\r\n     * Clears this ByteBuffer's offsets by setting {@link ByteBuffer#offset} to `0` and {@link ByteBuffer#limit} to the\r\n     *  backing buffer's capacity. Discards {@link ByteBuffer#markedOffset}.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.clear = function() {\r\n        this.offset = 0;\r\n        this.limit = this.buffer.byteLength;\r\n        this.markedOffset = -1;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Creates a cloned instance of this ByteBuffer, preset with this ByteBuffer's values for {@link ByteBuffer#offset},\r\n     *  {@link ByteBuffer#markedOffset} and {@link ByteBuffer#limit}.\r\n     * @param {boolean=} copy Whether to copy the backing buffer or to return another view on the same, defaults to `false`\r\n     * @returns {!ByteBuffer} Cloned instance\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.clone = function(copy) {\r\n        var bb = new ByteBuffer(0, this.littleEndian, this.noAssert);\r\n        if (copy) {\r\n            bb.buffer = new ArrayBuffer(this.buffer.byteLength);\r\n            bb.view = new Uint8Array(bb.buffer);\r\n        } else {\r\n            bb.buffer = this.buffer;\r\n            bb.view = this.view;\r\n        }\r\n        bb.offset = this.offset;\r\n        bb.markedOffset = this.markedOffset;\r\n        bb.limit = this.limit;\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Compacts this ByteBuffer to be backed by a {@link ByteBuffer#buffer} of its contents' length. Contents are the bytes\r\n     *  between {@link ByteBuffer#offset} and {@link ByteBuffer#limit}. Will set `offset = 0` and `limit = capacity` and\r\n     *  adapt {@link ByteBuffer#markedOffset} to the same relative position if set.\r\n     * @param {number=} begin Offset to start at, defaults to {@link ByteBuffer#offset}\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.compact = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);\n        }\r\n        if (begin === 0 && end === this.buffer.byteLength)\r\n            return this; // Already compacted\r\n        var len = end - begin;\r\n        if (len === 0) {\r\n            this.buffer = EMPTY_BUFFER;\r\n            this.view = null;\r\n            if (this.markedOffset >= 0) this.markedOffset -= begin;\r\n            this.offset = 0;\r\n            this.limit = 0;\r\n            return this;\r\n        }\r\n        var buffer = new ArrayBuffer(len);\r\n        var view = new Uint8Array(buffer);\r\n        view.set(this.view.subarray(begin, end));\r\n        this.buffer = buffer;\r\n        this.view = view;\r\n        if (this.markedOffset >= 0) this.markedOffset -= begin;\r\n        this.offset = 0;\r\n        this.limit = len;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Creates a copy of this ByteBuffer's contents. Contents are the bytes between {@link ByteBuffer#offset} and\r\n     *  {@link ByteBuffer#limit}.\r\n     * @param {number=} begin Begin offset, defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {!ByteBuffer} Copy\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.copy = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);\n        }\r\n        if (begin === end)\r\n            return new ByteBuffer(0, this.littleEndian, this.noAssert);\r\n        var capacity = end - begin,\r\n            bb = new ByteBuffer(capacity, this.littleEndian, this.noAssert);\r\n        bb.offset = 0;\r\n        bb.limit = capacity;\r\n        if (bb.markedOffset >= 0) bb.markedOffset -= begin;\r\n        this.copyTo(bb, 0, begin, end);\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Copies this ByteBuffer's contents to another ByteBuffer. Contents are the bytes between {@link ByteBuffer#offset} and\r\n     *  {@link ByteBuffer#limit}.\r\n     * @param {!ByteBuffer} target Target ByteBuffer\r\n     * @param {number=} targetOffset Offset to copy to. Will use and increase the target's {@link ByteBuffer#offset}\r\n     *  by the number of bytes copied if omitted.\r\n     * @param {number=} sourceOffset Offset to start copying from. Will use and increase {@link ByteBuffer#offset} by the\r\n     *  number of bytes copied if omitted.\r\n     * @param {number=} sourceLimit Offset to end copying from, defaults to {@link ByteBuffer#limit}\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.copyTo = function(target, targetOffset, sourceOffset, sourceLimit) {\r\n        var relative,\r\n            targetRelative;\r\n        if (!this.noAssert) {\r\n            if (!ByteBuffer.isByteBuffer(target))\r\n                throw TypeError(\"Illegal target: Not a ByteBuffer\");\r\n        }\r\n        targetOffset = (targetRelative = typeof targetOffset === 'undefined') ? target.offset : targetOffset | 0;\r\n        sourceOffset = (relative = typeof sourceOffset === 'undefined') ? this.offset : sourceOffset | 0;\r\n        sourceLimit = typeof sourceLimit === 'undefined' ? this.limit : sourceLimit | 0;\r\n\r\n        if (targetOffset < 0 || targetOffset > target.buffer.byteLength)\r\n            throw RangeError(\"Illegal target range: 0 <= \"+targetOffset+\" <= \"+target.buffer.byteLength);\r\n        if (sourceOffset < 0 || sourceLimit > this.buffer.byteLength)\r\n            throw RangeError(\"Illegal source range: 0 <= \"+sourceOffset+\" <= \"+this.buffer.byteLength);\r\n\r\n        var len = sourceLimit - sourceOffset;\r\n        if (len === 0)\r\n            return target; // Nothing to copy\r\n\r\n        target.ensureCapacity(targetOffset + len);\r\n\r\n        target.view.set(this.view.subarray(sourceOffset, sourceLimit), targetOffset);\r\n\r\n        if (relative) this.offset += len;\r\n        if (targetRelative) target.offset += len;\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Makes sure that this ByteBuffer is backed by a {@link ByteBuffer#buffer} of at least the specified capacity. If the\r\n     *  current capacity is exceeded, it will be doubled. If double the current capacity is less than the required capacity,\r\n     *  the required capacity will be used instead.\r\n     * @param {number} capacity Required capacity\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.ensureCapacity = function(capacity) {\r\n        var current = this.buffer.byteLength;\r\n        if (current < capacity)\r\n            return this.resize((current *= 2) > capacity ? current : capacity);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Overwrites this ByteBuffer's contents with the specified value. Contents are the bytes between\r\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.\r\n     * @param {number|string} value Byte value to fill with. If given as a string, the first character is used.\r\n     * @param {number=} begin Begin offset. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted. defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @example `someByteBuffer.clear().fill(0)` fills the entire backing buffer with zeroes\r\n     */\r\n    ByteBufferPrototype.fill = function(value, begin, end) {\r\n        var relative = typeof begin === 'undefined';\n        if (relative) begin = this.offset;\n        if (typeof value === 'string' && value.length > 0)\r\n            value = value.charCodeAt(0);\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);\n        }\r\n        if (begin >= end)\r\n            return this; // Nothing to fill\r\n        while (begin < end) this.view[begin++] = value;\r\n        if (relative) this.offset = begin;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Makes this ByteBuffer ready for a new sequence of write or relative read operations. Sets `limit = offset` and\r\n     *  `offset = 0`. Make sure always to flip a ByteBuffer when all relative read or write operations are complete.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.flip = function() {\r\n        this.limit = this.offset;\r\n        this.offset = 0;\r\n        return this;\r\n    };\r\n    /**\r\n     * Marks an offset on this ByteBuffer to be used later.\r\n     * @param {number=} offset Offset to mark. Defaults to {@link ByteBuffer#offset}.\r\n     * @returns {!ByteBuffer} this\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @see ByteBuffer#reset\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.mark = function(offset) {\r\n        offset = typeof offset === 'undefined' ? this.offset : offset;\r\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        this.markedOffset = offset;\r\n        return this;\r\n    };\r\n    /**\r\n     * Sets the byte order.\r\n     * @param {boolean} littleEndian `true` for little endian byte order, `false` for big endian\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.order = function(littleEndian) {\r\n        if (!this.noAssert) {\r\n            if (typeof littleEndian !== 'boolean')\r\n                throw TypeError(\"Illegal littleEndian: Not a boolean\");\r\n        }\r\n        this.littleEndian = !!littleEndian;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Switches (to) little endian byte order.\r\n     * @param {boolean=} littleEndian Defaults to `true`, otherwise uses big endian\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.LE = function(littleEndian) {\r\n        this.littleEndian = typeof littleEndian !== 'undefined' ? !!littleEndian : true;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Switches (to) big endian byte order.\r\n     * @param {boolean=} bigEndian Defaults to `true`, otherwise uses little endian\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.BE = function(bigEndian) {\r\n        this.littleEndian = typeof bigEndian !== 'undefined' ? !bigEndian : false;\r\n        return this;\r\n    };\r\n    /**\r\n     * Prepends some data to this ByteBuffer. This will overwrite any contents before the specified offset up to the\r\n     *  prepended data's length. If there is not enough space available before the specified `offset`, the backing buffer\r\n     *  will be resized and its contents moved accordingly.\r\n     * @param {!ByteBuffer|string|!ArrayBuffer} source Data to prepend. If `source` is a ByteBuffer, its offset will be\r\n     *  modified according to the performed read operation.\r\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\r\n     * @param {number=} offset Offset to prepend at. Will use and decrease {@link ByteBuffer#offset} by the number of bytes\r\n     *  prepended if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @example A relative `00<01 02 03>.prepend(<04 05>)` results in `<04 05 01 02 03>, 04 05|`\r\n     * @example An absolute `00<01 02 03>.prepend(<04 05>, 2)` results in `04<05 02 03>, 04 05|`\r\n     */\r\n    ByteBufferPrototype.prepend = function(source, encoding, offset) {\r\n        if (typeof encoding === 'number' || typeof encoding !== 'string') {\r\n            offset = encoding;\r\n            encoding = undefined;\r\n        }\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        if (!(source instanceof ByteBuffer))\r\n            source = ByteBuffer.wrap(source, encoding);\r\n        var len = source.limit - source.offset;\r\n        if (len <= 0) return this; // Nothing to prepend\r\n        var diff = len - offset;\r\n        if (diff > 0) { // Not enough space before offset, so resize + move\r\n            var buffer = new ArrayBuffer(this.buffer.byteLength + diff);\r\n            var view = new Uint8Array(buffer);\r\n            view.set(this.view.subarray(offset, this.buffer.byteLength), len);\r\n            this.buffer = buffer;\r\n            this.view = view;\r\n            this.offset += diff;\r\n            if (this.markedOffset >= 0) this.markedOffset += diff;\r\n            this.limit += diff;\r\n            offset += diff;\r\n        } else {\r\n            var arrayView = new Uint8Array(this.buffer);\r\n        }\r\n        this.view.set(source.view.subarray(source.offset, source.limit), offset - len);\r\n\r\n        source.offset = source.limit;\r\n        if (relative)\r\n            this.offset -= len;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Prepends this ByteBuffer to another ByteBuffer. This will overwrite any contents before the specified offset up to the\r\n     *  prepended data's length. If there is not enough space available before the specified `offset`, the backing buffer\r\n     *  will be resized and its contents moved accordingly.\r\n     * @param {!ByteBuffer} target Target ByteBuffer\r\n     * @param {number=} offset Offset to prepend at. Will use and decrease {@link ByteBuffer#offset} by the number of bytes\r\n     *  prepended if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @see ByteBuffer#prepend\r\n     */\r\n    ByteBufferPrototype.prependTo = function(target, offset) {\r\n        target.prepend(this, offset);\r\n        return this;\r\n    };\r\n    /**\r\n     * Prints debug information about this ByteBuffer's contents.\r\n     * @param {function(string)=} out Output function to call, defaults to console.log\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.printDebug = function(out) {\r\n        if (typeof out !== 'function') out = console.log.bind(console);\r\n        out(\r\n            this.toString()+\"\\n\"+\r\n            \"-------------------------------------------------------------------\\n\"+\r\n            this.toDebug(/* columns */ true)\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Gets the number of remaining readable bytes. Contents are the bytes between {@link ByteBuffer#offset} and\r\n     *  {@link ByteBuffer#limit}, so this returns `limit - offset`.\r\n     * @returns {number} Remaining readable bytes. May be negative if `offset > limit`.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.remaining = function() {\r\n        return this.limit - this.offset;\r\n    };\r\n    /**\r\n     * Resets this ByteBuffer's {@link ByteBuffer#offset}. If an offset has been marked through {@link ByteBuffer#mark}\r\n     *  before, `offset` will be set to {@link ByteBuffer#markedOffset}, which will then be discarded. If no offset has been\r\n     *  marked, sets `offset = 0`.\r\n     * @returns {!ByteBuffer} this\r\n     * @see ByteBuffer#mark\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.reset = function() {\r\n        if (this.markedOffset >= 0) {\r\n            this.offset = this.markedOffset;\r\n            this.markedOffset = -1;\r\n        } else {\r\n            this.offset = 0;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Resizes this ByteBuffer to be backed by a buffer of at least the given capacity. Will do nothing if already that\r\n     *  large or larger.\r\n     * @param {number} capacity Capacity required\r\n     * @returns {!ByteBuffer} this\r\n     * @throws {TypeError} If `capacity` is not a number\r\n     * @throws {RangeError} If `capacity < 0`\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.resize = function(capacity) {\r\n        if (!this.noAssert) {\r\n            if (typeof capacity !== 'number' || capacity % 1 !== 0)\n                throw TypeError(\"Illegal capacity: \"+capacity+\" (not an integer)\");\n            capacity |= 0;\n            if (capacity < 0)\r\n                throw RangeError(\"Illegal capacity: 0 <= \"+capacity);\r\n        }\r\n        if (this.buffer.byteLength < capacity) {\r\n            var buffer = new ArrayBuffer(capacity);\r\n            var view = new Uint8Array(buffer);\r\n            view.set(this.view);\r\n            this.buffer = buffer;\r\n            this.view = view;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Reverses this ByteBuffer's contents.\r\n     * @param {number=} begin Offset to start at, defaults to {@link ByteBuffer#offset}\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.reverse = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);\n        }\r\n        if (begin === end)\r\n            return this; // Nothing to reverse\r\n        Array.prototype.reverse.call(this.view.subarray(begin, end));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the next `length` bytes. This will just advance\r\n     * @param {number} length Number of bytes to skip. May also be negative to move the offset back.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.skip = function(length) {\r\n        if (!this.noAssert) {\r\n            if (typeof length !== 'number' || length % 1 !== 0)\n                throw TypeError(\"Illegal length: \"+length+\" (not an integer)\");\n            length |= 0;\n        }\r\n        var offset = this.offset + length;\r\n        if (!this.noAssert) {\r\n            if (offset < 0 || offset > this.buffer.byteLength)\r\n                throw RangeError(\"Illegal length: 0 <= \"+this.offset+\" + \"+length+\" <= \"+this.buffer.byteLength);\r\n        }\r\n        this.offset = offset;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Slices this ByteBuffer by creating a cloned instance with `offset = begin` and `limit = end`.\r\n     * @param {number=} begin Begin offset, defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {!ByteBuffer} Clone of this ByteBuffer with slicing applied, backed by the same {@link ByteBuffer#buffer}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.slice = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);\n        }\r\n        var bb = this.clone();\r\n        bb.offset = begin;\r\n        bb.limit = end;\r\n        return bb;\r\n    };\r\n    /**\r\n     * Returns a copy of the backing buffer that contains this ByteBuffer's contents. Contents are the bytes between\r\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.\r\n     * @param {boolean=} forceCopy If `true` returns a copy, otherwise returns a view referencing the same memory if\r\n     *  possible. Defaults to `false`\r\n     * @returns {!ArrayBuffer} Contents as an ArrayBuffer\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toBuffer = function(forceCopy) {\r\n        var offset = this.offset,\r\n            limit = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: Not an integer\");\n            offset >>>= 0;\n            if (typeof limit !== 'number' || limit % 1 !== 0)\n                throw TypeError(\"Illegal limit: Not an integer\");\n            limit >>>= 0;\n            if (offset < 0 || offset > limit || limit > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+offset+\" <= \"+limit+\" <= \"+this.buffer.byteLength);\n        }\r\n        // NOTE: It's not possible to have another ArrayBuffer reference the same memory as the backing buffer. This is\r\n        // possible with Uint8Array#subarray only, but we have to return an ArrayBuffer by contract. So:\r\n        if (!forceCopy && offset === 0 && limit === this.buffer.byteLength)\r\n            return this.buffer;\r\n        if (offset === limit)\r\n            return EMPTY_BUFFER;\r\n        var buffer = new ArrayBuffer(limit - offset);\r\n        new Uint8Array(buffer).set(new Uint8Array(this.buffer).subarray(offset, limit), 0);\r\n        return buffer;\r\n    };\r\n\r\n    /**\r\n     * Returns a raw buffer compacted to contain this ByteBuffer's contents. Contents are the bytes between\r\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}. This is an alias of {@link ByteBuffer#toBuffer}.\r\n     * @function\r\n     * @param {boolean=} forceCopy If `true` returns a copy, otherwise returns a view referencing the same memory.\r\n     *  Defaults to `false`\r\n     * @returns {!ArrayBuffer} Contents as an ArrayBuffer\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toArrayBuffer = ByteBufferPrototype.toBuffer;\r\n\r\n    /**\r\n     * Converts the ByteBuffer's contents to a string.\r\n     * @param {string=} encoding Output encoding. Returns an informative string representation if omitted but also allows\r\n     *  direct conversion to \"utf8\", \"hex\", \"base64\" and \"binary\" encoding. \"debug\" returns a hex representation with\r\n     *  highlighted offsets.\r\n     * @param {number=} begin Offset to begin at, defaults to {@link ByteBuffer#offset}\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\r\n     * @returns {string} String representation\r\n     * @throws {Error} If `encoding` is invalid\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toString = function(encoding, begin, end) {\r\n        if (typeof encoding === 'undefined')\r\n            return \"ByteBufferAB(offset=\"+this.offset+\",markedOffset=\"+this.markedOffset+\",limit=\"+this.limit+\",capacity=\"+this.capacity()+\")\";\r\n        if (typeof encoding === 'number')\r\n            encoding = \"utf8\",\r\n            begin = encoding,\r\n            end = begin;\r\n        switch (encoding) {\r\n            case \"utf8\":\r\n                return this.toUTF8(begin, end);\r\n            case \"base64\":\r\n                return this.toBase64(begin, end);\r\n            case \"hex\":\r\n                return this.toHex(begin, end);\r\n            case \"binary\":\r\n                return this.toBinary(begin, end);\r\n            case \"debug\":\r\n                return this.toDebug();\r\n            case \"columns\":\r\n                return this.toColumns();\r\n            default:\r\n                throw Error(\"Unsupported encoding: \"+encoding);\r\n        }\r\n    };\r\n\r\n    // lxiv-embeddable\r\n\r\n    /**\r\n     * lxiv-embeddable (c) 2014 Daniel Wirtz <dcode@dcode.io>\r\n     * Released under the Apache License, Version 2.0\r\n     * see: https://github.com/dcodeIO/lxiv for details\r\n     */\r\n    var lxiv = function() {\r\n        \"use strict\";\r\n\r\n        /**\r\n         * lxiv namespace.\r\n         * @type {!Object.<string,*>}\r\n         * @exports lxiv\r\n         */\r\n        var lxiv = {};\r\n\r\n        /**\r\n         * Character codes for output.\r\n         * @type {!Array.<number>}\r\n         * @inner\r\n         */\r\n        var aout = [\r\n            65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\r\n            81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102,\r\n            103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118,\r\n            119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47\r\n        ];\r\n\r\n        /**\r\n         * Character codes for input.\r\n         * @type {!Array.<number>}\r\n         * @inner\r\n         */\r\n        var ain = [];\r\n        for (var i=0, k=aout.length; i<k; ++i)\r\n            ain[aout[i]] = i;\r\n\r\n        /**\r\n         * Encodes bytes to base64 char codes.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if\r\n         *  there are no more bytes left.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each encoded char\r\n         *  code.\r\n         */\r\n        lxiv.encode = function(src, dst) {\r\n            var b, t;\r\n            while ((b = src()) !== null) {\r\n                dst(aout[(b>>2)&0x3f]);\r\n                t = (b&0x3)<<4;\r\n                if ((b = src()) !== null) {\r\n                    t |= (b>>4)&0xf;\r\n                    dst(aout[(t|((b>>4)&0xf))&0x3f]);\r\n                    t = (b&0xf)<<2;\r\n                    if ((b = src()) !== null)\r\n                        dst(aout[(t|((b>>6)&0x3))&0x3f]),\r\n                        dst(aout[b&0x3f]);\r\n                    else\r\n                        dst(aout[t&0x3f]),\r\n                        dst(61);\r\n                } else\r\n                    dst(aout[t&0x3f]),\r\n                    dst(61),\r\n                    dst(61);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Decodes base64 char codes to bytes.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte.\r\n         * @throws {Error} If a character code is invalid\r\n         */\r\n        lxiv.decode = function(src, dst) {\r\n            var c, t1, t2;\r\n            function fail(c) {\r\n                throw Error(\"Illegal character code: \"+c);\r\n            }\r\n            while ((c = src()) !== null) {\r\n                t1 = ain[c];\r\n                if (typeof t1 === 'undefined') fail(c);\r\n                if ((c = src()) !== null) {\r\n                    t2 = ain[c];\r\n                    if (typeof t2 === 'undefined') fail(c);\r\n                    dst((t1<<2)>>>0|(t2&0x30)>>4);\r\n                    if ((c = src()) !== null) {\r\n                        t1 = ain[c];\r\n                        if (typeof t1 === 'undefined')\r\n                            if (c === 61) break; else fail(c);\r\n                        dst(((t2&0xf)<<4)>>>0|(t1&0x3c)>>2);\r\n                        if ((c = src()) !== null) {\r\n                            t2 = ain[c];\r\n                            if (typeof t2 === 'undefined')\r\n                                if (c === 61) break; else fail(c);\r\n                            dst(((t1&0x3)<<6)>>>0|t2);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Tests if a string is valid base64.\r\n         * @param {string} str String to test\r\n         * @returns {boolean} `true` if valid, otherwise `false`\r\n         */\r\n        lxiv.test = function(str) {\r\n            return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(str);\r\n        };\r\n\r\n        return lxiv;\r\n    }();\r\n\r\n    // encodings/base64\r\n\r\n    /**\r\n     * Encodes this ByteBuffer's contents to a base64 encoded string.\r\n     * @param {number=} begin Offset to begin at, defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {string} Base64 encoded string\r\n     * @throws {RangeError} If `begin` or `end` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toBase64 = function(begin, end) {\r\n        if (typeof begin === 'undefined')\r\n            begin = this.offset;\r\n        if (typeof end === 'undefined')\r\n            end = this.limit;\r\n        begin = begin | 0; end = end | 0;\r\n        if (begin < 0 || end > this.capacity || begin > end)\r\n            throw RangeError(\"begin, end\");\r\n        var sd; lxiv.encode(function() {\r\n            return begin < end ? this.view[begin++] : null;\r\n        }.bind(this), sd = stringDestination());\r\n        return sd();\r\n    };\r\n\r\n    /**\r\n     * Decodes a base64 encoded string to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.fromBase64 = function(str, littleEndian) {\r\n        if (typeof str !== 'string')\r\n            throw TypeError(\"str\");\r\n        var bb = new ByteBuffer(str.length/4*3, littleEndian),\r\n            i = 0;\r\n        lxiv.decode(stringSource(str), function(b) {\r\n            bb.view[i++] = b;\r\n        });\r\n        bb.limit = i;\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Encodes a binary string to base64 like `window.btoa` does.\r\n     * @param {string} str Binary string\r\n     * @returns {string} Base64 encoded string\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.btoa\r\n     * @expose\r\n     */\r\n    ByteBuffer.btoa = function(str) {\r\n        return ByteBuffer.fromBinary(str).toBase64();\r\n    };\r\n\r\n    /**\r\n     * Decodes a base64 encoded string to binary like `window.atob` does.\r\n     * @param {string} b64 Base64 encoded string\r\n     * @returns {string} Binary string\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.atob\r\n     * @expose\r\n     */\r\n    ByteBuffer.atob = function(b64) {\r\n        return ByteBuffer.fromBase64(b64).toBinary();\r\n    };\r\n\r\n    // encodings/binary\r\n\r\n    /**\r\n     * Encodes this ByteBuffer to a binary encoded string, that is using only characters 0x00-0xFF as bytes.\r\n     * @param {number=} begin Offset to begin at. Defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end Offset to end at. Defaults to {@link ByteBuffer#limit}.\r\n     * @returns {string} Binary encoded string\r\n     * @throws {RangeError} If `offset > limit`\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toBinary = function(begin, end) {\r\n        if (typeof begin === 'undefined')\r\n            begin = this.offset;\r\n        if (typeof end === 'undefined')\r\n            end = this.limit;\r\n        begin |= 0; end |= 0;\r\n        if (begin < 0 || end > this.capacity() || begin > end)\r\n            throw RangeError(\"begin, end\");\r\n        if (begin === end)\r\n            return \"\";\r\n        var chars = [],\r\n            parts = [];\r\n        while (begin < end) {\r\n            chars.push(this.view[begin++]);\r\n            if (chars.length >= 1024)\r\n                parts.push(String.fromCharCode.apply(String, chars)),\r\n                chars = [];\r\n        }\r\n        return parts.join('') + String.fromCharCode.apply(String, chars);\r\n    };\r\n\r\n    /**\r\n     * Decodes a binary encoded string, that is using only characters 0x00-0xFF as bytes, to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.fromBinary = function(str, littleEndian) {\r\n        if (typeof str !== 'string')\r\n            throw TypeError(\"str\");\r\n        var i = 0,\r\n            k = str.length,\r\n            charCode,\r\n            bb = new ByteBuffer(k, littleEndian);\r\n        while (i<k) {\r\n            charCode = str.charCodeAt(i);\r\n            if (charCode > 0xff)\r\n                throw RangeError(\"illegal char code: \"+charCode);\r\n            bb.view[i++] = charCode;\r\n        }\r\n        bb.limit = k;\r\n        return bb;\r\n    };\r\n\r\n    // encodings/debug\r\n\r\n    /**\r\n     * Encodes this ByteBuffer to a hex encoded string with marked offsets. Offset symbols are:\r\n     * * `<` : offset,\r\n     * * `'` : markedOffset,\r\n     * * `>` : limit,\r\n     * * `|` : offset and limit,\r\n     * * `[` : offset and markedOffset,\r\n     * * `]` : markedOffset and limit,\r\n     * * `!` : offset, markedOffset and limit\r\n     * @param {boolean=} columns If `true` returns two columns hex + ascii, defaults to `false`\r\n     * @returns {string|!Array.<string>} Debug string or array of lines if `asArray = true`\r\n     * @expose\r\n     * @example `>00'01 02<03` contains four bytes with `limit=0, markedOffset=1, offset=3`\r\n     * @example `00[01 02 03>` contains four bytes with `offset=markedOffset=1, limit=4`\r\n     * @example `00|01 02 03` contains four bytes with `offset=limit=1, markedOffset=-1`\r\n     * @example `|` contains zero bytes with `offset=limit=0, markedOffset=-1`\r\n     */\r\n    ByteBufferPrototype.toDebug = function(columns) {\r\n        var i = -1,\r\n            k = this.buffer.byteLength,\r\n            b,\r\n            hex = \"\",\r\n            asc = \"\",\r\n            out = \"\";\r\n        while (i<k) {\r\n            if (i !== -1) {\r\n                b = this.view[i];\r\n                if (b < 0x10) hex += \"0\"+b.toString(16).toUpperCase();\r\n                else hex += b.toString(16).toUpperCase();\r\n                if (columns)\r\n                    asc += b > 32 && b < 127 ? String.fromCharCode(b) : '.';\r\n            }\r\n            ++i;\r\n            if (columns) {\r\n                if (i > 0 && i % 16 === 0 && i !== k) {\r\n                    while (hex.length < 3*16+3) hex += \" \";\r\n                    out += hex+asc+\"\\n\";\r\n                    hex = asc = \"\";\r\n                }\r\n            }\r\n            if (i === this.offset && i === this.limit)\r\n                hex += i === this.markedOffset ? \"!\" : \"|\";\r\n            else if (i === this.offset)\r\n                hex += i === this.markedOffset ? \"[\" : \"<\";\r\n            else if (i === this.limit)\r\n                hex += i === this.markedOffset ? \"]\" : \">\";\r\n            else\r\n                hex += i === this.markedOffset ? \"'\" : (columns || (i !== 0 && i !== k) ? \" \" : \"\");\r\n        }\r\n        if (columns && hex !== \" \") {\r\n            while (hex.length < 3*16+3)\r\n                hex += \" \";\r\n            out += hex + asc + \"\\n\";\r\n        }\r\n        return columns ? out : hex;\r\n    };\r\n\r\n    /**\r\n     * Decodes a hex encoded string with marked offsets to a ByteBuffer.\r\n     * @param {string} str Debug string to decode (not be generated with `columns = true`)\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     * @see ByteBuffer#toDebug\r\n     */\r\n    ByteBuffer.fromDebug = function(str, littleEndian, noAssert) {\r\n        var k = str.length,\r\n            bb = new ByteBuffer(((k+1)/3)|0, littleEndian, noAssert);\r\n        var i = 0, j = 0, ch, b,\r\n            rs = false, // Require symbol next\r\n            ho = false, hm = false, hl = false, // Already has offset (ho), markedOffset (hm), limit (hl)?\r\n            fail = false;\r\n        while (i<k) {\r\n            switch (ch = str.charAt(i++)) {\r\n                case '!':\r\n                    if (!noAssert) {\r\n                        if (ho || hm || hl) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        ho = hm = hl = true;\r\n                    }\r\n                    bb.offset = bb.markedOffset = bb.limit = j;\r\n                    rs = false;\r\n                    break;\r\n                case '|':\r\n                    if (!noAssert) {\r\n                        if (ho || hl) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        ho = hl = true;\r\n                    }\r\n                    bb.offset = bb.limit = j;\r\n                    rs = false;\r\n                    break;\r\n                case '[':\r\n                    if (!noAssert) {\r\n                        if (ho || hm) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        ho = hm = true;\r\n                    }\r\n                    bb.offset = bb.markedOffset = j;\r\n                    rs = false;\r\n                    break;\r\n                case '<':\r\n                    if (!noAssert) {\r\n                        if (ho) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        ho = true;\r\n                    }\r\n                    bb.offset = j;\r\n                    rs = false;\r\n                    break;\r\n                case ']':\r\n                    if (!noAssert) {\r\n                        if (hl || hm) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        hl = hm = true;\r\n                    }\r\n                    bb.limit = bb.markedOffset = j;\r\n                    rs = false;\r\n                    break;\r\n                case '>':\r\n                    if (!noAssert) {\r\n                        if (hl) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        hl = true;\r\n                    }\r\n                    bb.limit = j;\r\n                    rs = false;\r\n                    break;\r\n                case \"'\":\r\n                    if (!noAssert) {\r\n                        if (hm) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        hm = true;\r\n                    }\r\n                    bb.markedOffset = j;\r\n                    rs = false;\r\n                    break;\r\n                case ' ':\r\n                    rs = false;\r\n                    break;\r\n                default:\r\n                    if (!noAssert) {\r\n                        if (rs) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    b = parseInt(ch+str.charAt(i++), 16);\r\n                    if (!noAssert) {\r\n                        if (isNaN(b) || b < 0 || b > 255)\r\n                            throw TypeError(\"Illegal str: Not a debug encoded string\");\r\n                    }\r\n                    bb.view[j++] = b;\r\n                    rs = true;\r\n            }\r\n            if (fail)\r\n                throw TypeError(\"Illegal str: Invalid symbol at \"+i);\r\n        }\r\n        if (!noAssert) {\r\n            if (!ho || !hl)\r\n                throw TypeError(\"Illegal str: Missing offset or limit\");\r\n            if (j<bb.buffer.byteLength)\r\n                throw TypeError(\"Illegal str: Not a debug encoded string (is it hex?) \"+j+\" < \"+k);\r\n        }\r\n        return bb;\r\n    };\r\n\r\n    // encodings/hex\r\n\r\n    /**\r\n     * Encodes this ByteBuffer's contents to a hex encoded string.\r\n     * @param {number=} begin Offset to begin at. Defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end Offset to end at. Defaults to {@link ByteBuffer#limit}.\r\n     * @returns {string} Hex encoded string\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toHex = function(begin, end) {\r\n        begin = typeof begin === 'undefined' ? this.offset : begin;\r\n        end = typeof end === 'undefined' ? this.limit : end;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);\n        }\r\n        var out = new Array(end - begin),\r\n            b;\r\n        while (begin < end) {\r\n            b = this.view[begin++];\r\n            if (b < 0x10)\r\n                out.push(\"0\", b.toString(16));\r\n            else out.push(b.toString(16));\r\n        }\r\n        return out.join('');\r\n    };\r\n\r\n    /**\r\n     * Decodes a hex encoded string to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.fromHex = function(str, littleEndian, noAssert) {\r\n        if (!noAssert) {\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n            if (str.length % 2 !== 0)\r\n                throw TypeError(\"Illegal str: Length not a multiple of 2\");\r\n        }\r\n        var k = str.length,\r\n            bb = new ByteBuffer((k / 2) | 0, littleEndian),\r\n            b;\r\n        for (var i=0, j=0; i<k; i+=2) {\r\n            b = parseInt(str.substring(i, i+2), 16);\r\n            if (!noAssert)\r\n                if (!isFinite(b) || b < 0 || b > 255)\r\n                    throw TypeError(\"Illegal str: Contains non-hex characters\");\r\n            bb.view[j++] = b;\r\n        }\r\n        bb.limit = j;\r\n        return bb;\r\n    };\r\n\r\n    // utfx-embeddable\r\n\r\n    /**\r\n     * utfx-embeddable (c) 2014 Daniel Wirtz <dcode@dcode.io>\r\n     * Released under the Apache License, Version 2.0\r\n     * see: https://github.com/dcodeIO/utfx for details\r\n     */\r\n    var utfx = function() {\r\n        \"use strict\";\r\n\r\n        /**\r\n         * utfx namespace.\r\n         * @inner\r\n         * @type {!Object.<string,*>}\r\n         */\r\n        var utfx = {};\r\n\r\n        /**\r\n         * Maximum valid code point.\r\n         * @type {number}\r\n         * @const\r\n         */\r\n        utfx.MAX_CODEPOINT = 0x10FFFF;\r\n\r\n        /**\r\n         * Encodes UTF8 code points to UTF8 bytes.\r\n         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\r\n         *  respectively `null` if there are no more code points left or a single numeric code point.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte\r\n         */\r\n        utfx.encodeUTF8 = function(src, dst) {\r\n            var cp = null;\r\n            if (typeof src === 'number')\r\n                cp = src,\r\n                src = function() { return null; };\r\n            while (cp !== null || (cp = src()) !== null) {\r\n                if (cp < 0x80)\r\n                    dst(cp&0x7F);\r\n                else if (cp < 0x800)\r\n                    dst(((cp>>6)&0x1F)|0xC0),\r\n                    dst((cp&0x3F)|0x80);\r\n                else if (cp < 0x10000)\r\n                    dst(((cp>>12)&0x0F)|0xE0),\r\n                    dst(((cp>>6)&0x3F)|0x80),\r\n                    dst((cp&0x3F)|0x80);\r\n                else\r\n                    dst(((cp>>18)&0x07)|0xF0),\r\n                    dst(((cp>>12)&0x3F)|0x80),\r\n                    dst(((cp>>6)&0x3F)|0x80),\r\n                    dst((cp&0x3F)|0x80);\r\n                cp = null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Decodes UTF8 bytes to UTF8 code points.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there\r\n         *  are no more bytes left.\r\n         * @param {!function(number)} dst Code points destination as a function successively called with each decoded code point.\r\n         * @throws {RangeError} If a starting byte is invalid in UTF8\r\n         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the\r\n         *  remaining bytes.\r\n         */\r\n        utfx.decodeUTF8 = function(src, dst) {\r\n            var a, b, c, d, fail = function(b) {\r\n                b = b.slice(0, b.indexOf(null));\r\n                var err = Error(b.toString());\r\n                err.name = \"TruncatedError\";\r\n                err['bytes'] = b;\r\n                throw err;\r\n            };\r\n            while ((a = src()) !== null) {\r\n                if ((a&0x80) === 0)\r\n                    dst(a);\r\n                else if ((a&0xE0) === 0xC0)\r\n                    ((b = src()) === null) && fail([a, b]),\r\n                    dst(((a&0x1F)<<6) | (b&0x3F));\r\n                else if ((a&0xF0) === 0xE0)\r\n                    ((b=src()) === null || (c=src()) === null) && fail([a, b, c]),\r\n                    dst(((a&0x0F)<<12) | ((b&0x3F)<<6) | (c&0x3F));\r\n                else if ((a&0xF8) === 0xF0)\r\n                    ((b=src()) === null || (c=src()) === null || (d=src()) === null) && fail([a, b, c ,d]),\r\n                    dst(((a&0x07)<<18) | ((b&0x3F)<<12) | ((c&0x3F)<<6) | (d&0x3F));\r\n                else throw RangeError(\"Illegal starting byte: \"+a);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Converts UTF16 characters to UTF8 code points.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @param {!function(number)} dst Code points destination as a function successively called with each converted code\r\n         *  point.\r\n         */\r\n        utfx.UTF16toUTF8 = function(src, dst) {\r\n            var c1, c2 = null;\r\n            while (true) {\r\n                if ((c1 = c2 !== null ? c2 : src()) === null)\r\n                    break;\r\n                if (c1 >= 0xD800 && c1 <= 0xDFFF) {\r\n                    if ((c2 = src()) !== null) {\r\n                        if (c2 >= 0xDC00 && c2 <= 0xDFFF) {\r\n                            dst((c1-0xD800)*0x400+c2-0xDC00+0x10000);\r\n                            c2 = null; continue;\r\n                        }\r\n                    }\r\n                }\r\n                dst(c1);\r\n            }\r\n            if (c2 !== null) dst(c2);\r\n        };\r\n\r\n        /**\r\n         * Converts UTF8 code points to UTF16 characters.\r\n         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\r\n         *  respectively `null` if there are no more code points left or a single numeric code point.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.\r\n         * @throws {RangeError} If a code point is out of range\r\n         */\r\n        utfx.UTF8toUTF16 = function(src, dst) {\r\n            var cp = null;\r\n            if (typeof src === 'number')\r\n                cp = src, src = function() { return null; };\r\n            while (cp !== null || (cp = src()) !== null) {\r\n                if (cp <= 0xFFFF)\r\n                    dst(cp);\r\n                else\r\n                    cp -= 0x10000,\r\n                    dst((cp>>10)+0xD800),\r\n                    dst((cp%0x400)+0xDC00);\r\n                cp = null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Converts and encodes UTF16 characters to UTF8 bytes.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively `null`\r\n         *  if there are no more characters left.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte.\r\n         */\r\n        utfx.encodeUTF16toUTF8 = function(src, dst) {\r\n            utfx.UTF16toUTF8(src, function(cp) {\r\n                utfx.encodeUTF8(cp, dst);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Decodes and converts UTF8 bytes to UTF16 characters.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there\r\n         *  are no more bytes left.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.\r\n         * @throws {RangeError} If a starting byte is invalid in UTF8\r\n         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the remaining bytes.\r\n         */\r\n        utfx.decodeUTF8toUTF16 = function(src, dst) {\r\n            utfx.decodeUTF8(src, function(cp) {\r\n                utfx.UTF8toUTF16(cp, dst);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Calculates the byte length of an UTF8 code point.\r\n         * @param {number} cp UTF8 code point\r\n         * @returns {number} Byte length\r\n         */\r\n        utfx.calculateCodePoint = function(cp) {\r\n            return (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;\r\n        };\r\n\r\n        /**\r\n         * Calculates the number of UTF8 bytes required to store UTF8 code points.\r\n         * @param {(!function():number|null)} src Code points source as a function returning the next code point respectively\r\n         *  `null` if there are no more code points left.\r\n         * @returns {number} The number of UTF8 bytes required\r\n         */\r\n        utfx.calculateUTF8 = function(src) {\r\n            var cp, l=0;\r\n            while ((cp = src()) !== null)\r\n                l += (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;\r\n            return l;\r\n        };\r\n\r\n        /**\r\n         * Calculates the number of UTF8 code points respectively UTF8 bytes required to store UTF16 char codes.\r\n         * @param {(!function():number|null)} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @returns {!Array.<number>} The number of UTF8 code points at index 0 and the number of UTF8 bytes required at index 1.\r\n         */\r\n        utfx.calculateUTF16asUTF8 = function(src) {\r\n            var n=0, l=0;\r\n            utfx.UTF16toUTF8(src, function(cp) {\r\n                ++n; l += (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;\r\n            });\r\n            return [n,l];\r\n        };\r\n\r\n        return utfx;\r\n    }();\r\n\r\n    // encodings/utf8\r\n\r\n    /**\r\n     * Encodes this ByteBuffer's contents between {@link ByteBuffer#offset} and {@link ByteBuffer#limit} to an UTF8 encoded\r\n     *  string.\r\n     * @returns {string} Hex encoded string\r\n     * @throws {RangeError} If `offset > limit`\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toUTF8 = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);\n        }\r\n        var sd; try {\r\n            utfx.decodeUTF8toUTF16(function() {\r\n                return begin < end ? this.view[begin++] : null;\r\n            }.bind(this), sd = stringDestination());\r\n        } catch (e) {\r\n            if (begin !== end)\r\n                throw RangeError(\"Illegal range: Truncated data, \"+begin+\" != \"+end);\r\n        }\r\n        return sd();\r\n    };\r\n\r\n    /**\r\n     * Decodes an UTF8 encoded string to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.fromUTF8 = function(str, littleEndian, noAssert) {\r\n        if (!noAssert)\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n        var bb = new ByteBuffer(utfx.calculateUTF16asUTF8(stringSource(str), true)[1], littleEndian, noAssert),\r\n            i = 0;\r\n        utfx.encodeUTF16toUTF8(stringSource(str), function(b) {\r\n            bb.view[i++] = b;\r\n        });\r\n        bb.limit = i;\r\n        return bb;\r\n    };\r\n\r\n    return ByteBuffer;\r\n});\r\n","// based on the aes implimentation in triple sec\n// https://github.com/keybase/triplesec\n\n// which is in turn based on the one from crypto-js\n// https://code.google.com/p/crypto-js/\n\nvar uint_max = Math.pow(2, 32)\nfunction fixup_uint32 (x) {\n  var ret, x_pos\n  ret = x > uint_max || x < 0 ? (x_pos = Math.abs(x) % uint_max, x < 0 ? uint_max - x_pos : x_pos) : x\n  return ret\n}\nfunction scrub_vec (v) {\n  for (var i = 0; i < v.length; v++) {\n    v[i] = 0\n  }\n  return false\n}\n\nfunction Global () {\n  this.SBOX = []\n  this.INV_SBOX = []\n  this.SUB_MIX = [[], [], [], []]\n  this.INV_SUB_MIX = [[], [], [], []]\n  this.init()\n  this.RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]\n}\n\nGlobal.prototype.init = function () {\n  var d, i, sx, t, x, x2, x4, x8, xi, _i\n  d = (function () {\n    var _i, _results\n    _results = []\n    for (i = _i = 0; _i < 256; i = ++_i) {\n      if (i < 128) {\n        _results.push(i << 1)\n      } else {\n        _results.push((i << 1) ^ 0x11b)\n      }\n    }\n    return _results\n  })()\n  x = 0\n  xi = 0\n  for (i = _i = 0; _i < 256; i = ++_i) {\n    sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)\n    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63\n    this.SBOX[x] = sx\n    this.INV_SBOX[sx] = x\n    x2 = d[x]\n    x4 = d[x2]\n    x8 = d[x4]\n    t = (d[sx] * 0x101) ^ (sx * 0x1010100)\n    this.SUB_MIX[0][x] = (t << 24) | (t >>> 8)\n    this.SUB_MIX[1][x] = (t << 16) | (t >>> 16)\n    this.SUB_MIX[2][x] = (t << 8) | (t >>> 24)\n    this.SUB_MIX[3][x] = t\n    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)\n    this.INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)\n    this.INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)\n    this.INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)\n    this.INV_SUB_MIX[3][sx] = t\n    if (x === 0) {\n      x = xi = 1\n    } else {\n      x = x2 ^ d[d[d[x8 ^ x2]]]\n      xi ^= d[d[xi]]\n    }\n  }\n  return true\n}\n\nvar G = new Global()\n\nAES.blockSize = 4 * 4\n\nAES.prototype.blockSize = AES.blockSize\n\nAES.keySize = 256 / 8\n\nAES.prototype.keySize = AES.keySize\n\nfunction bufferToArray (buf) {\n  var len = buf.length / 4\n  var out = new Array(len)\n  var i = -1\n  while (++i < len) {\n    out[i] = buf.readUInt32BE(i * 4)\n  }\n  return out\n}\nfunction AES (key) {\n  this._key = bufferToArray(key)\n  this._doReset()\n}\n\nAES.prototype._doReset = function () {\n  var invKsRow, keySize, keyWords, ksRow, ksRows, t\n  keyWords = this._key\n  keySize = keyWords.length\n  this._nRounds = keySize + 6\n  ksRows = (this._nRounds + 1) * 4\n  this._keySchedule = []\n  for (ksRow = 0; ksRow < ksRows; ksRow++) {\n    this._keySchedule[ksRow] = ksRow < keySize ? keyWords[ksRow] : (t = this._keySchedule[ksRow - 1], (ksRow % keySize) === 0 ? (t = (t << 8) | (t >>> 24), t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | G.SBOX[t & 0xff], t ^= G.RCON[(ksRow / keySize) | 0] << 24) : keySize > 6 && ksRow % keySize === 4 ? t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | G.SBOX[t & 0xff] : void 0, this._keySchedule[ksRow - keySize] ^ t)\n  }\n  this._invKeySchedule = []\n  for (invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n    ksRow = ksRows - invKsRow\n    t = this._keySchedule[ksRow - (invKsRow % 4 ? 0 : 4)]\n    this._invKeySchedule[invKsRow] = invKsRow < 4 || ksRow <= 4 ? t : G.INV_SUB_MIX[0][G.SBOX[t >>> 24]] ^ G.INV_SUB_MIX[1][G.SBOX[(t >>> 16) & 0xff]] ^ G.INV_SUB_MIX[2][G.SBOX[(t >>> 8) & 0xff]] ^ G.INV_SUB_MIX[3][G.SBOX[t & 0xff]]\n  }\n  return true\n}\n\nAES.prototype.encryptBlock = function (M) {\n  M = bufferToArray(new Buffer(M))\n  var out = this._doCryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX)\n  var buf = new Buffer(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[1], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[3], 12)\n  return buf\n}\n\nAES.prototype.decryptBlock = function (M) {\n  M = bufferToArray(new Buffer(M))\n  var temp = [M[3], M[1]]\n  M[1] = temp[0]\n  M[3] = temp[1]\n  var out = this._doCryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX)\n  var buf = new Buffer(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[3], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[1], 12)\n  return buf\n}\n\nAES.prototype.scrub = function () {\n  scrub_vec(this._keySchedule)\n  scrub_vec(this._invKeySchedule)\n  scrub_vec(this._key)\n}\n\nAES.prototype._doCryptBlock = function (M, keySchedule, SUB_MIX, SBOX) {\n  var ksRow, s0, s1, s2, s3, t0, t1, t2, t3\n\n  s0 = M[0] ^ keySchedule[0]\n  s1 = M[1] ^ keySchedule[1]\n  s2 = M[2] ^ keySchedule[2]\n  s3 = M[3] ^ keySchedule[3]\n  ksRow = 4\n  for (var round = 1; round < this._nRounds; round++) {\n    t0 = SUB_MIX[0][s0 >>> 24] ^ SUB_MIX[1][(s1 >>> 16) & 0xff] ^ SUB_MIX[2][(s2 >>> 8) & 0xff] ^ SUB_MIX[3][s3 & 0xff] ^ keySchedule[ksRow++]\n    t1 = SUB_MIX[0][s1 >>> 24] ^ SUB_MIX[1][(s2 >>> 16) & 0xff] ^ SUB_MIX[2][(s3 >>> 8) & 0xff] ^ SUB_MIX[3][s0 & 0xff] ^ keySchedule[ksRow++]\n    t2 = SUB_MIX[0][s2 >>> 24] ^ SUB_MIX[1][(s3 >>> 16) & 0xff] ^ SUB_MIX[2][(s0 >>> 8) & 0xff] ^ SUB_MIX[3][s1 & 0xff] ^ keySchedule[ksRow++]\n    t3 = SUB_MIX[0][s3 >>> 24] ^ SUB_MIX[1][(s0 >>> 16) & 0xff] ^ SUB_MIX[2][(s1 >>> 8) & 0xff] ^ SUB_MIX[3][s2 & 0xff] ^ keySchedule[ksRow++]\n    s0 = t0\n    s1 = t1\n    s2 = t2\n    s3 = t3\n  }\n  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]\n  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]\n  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]\n  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]\n  return [\n    fixup_uint32(t0),\n    fixup_uint32(t1),\n    fixup_uint32(t2),\n    fixup_uint32(t3)\n  ]\n}\n\nexports.AES = AES\n","'use strict';\n\nvar domain;\n\n// This constructor is used to store event handlers. Instantiating this is\n// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n// object (tested with v8 v4.9).\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nexport default EventEmitter;\nexport {EventEmitter};\n\n// nodejs oddity\n// require('events') === require('events').EventEmitter\nEventEmitter.EventEmitter = EventEmitter\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.prototype.domain = undefined;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\nEventEmitter.init = function() {\n  this.domain = null;\n  if (EventEmitter.usingDomains) {\n    // if there is an active domain, then attach to it.\n    if (domain.active && !(this instanceof domain.Domain)) {\n      this.domain = domain.active;\n    }\n  }\n\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events, domain;\n  var needDomainExit = false;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  domain = this.domain;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (domain) {\n      if (!er)\n        er = new Error('Uncaught, unspecified \"error\" event');\n      er.domainEmitter = this;\n      er.domain = domain;\n      er.domainThrown = false;\n      domain.emit('error', er);\n    } else if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  if (needDomainExit)\n    domain.exit();\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] :\n                                          [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n                            existing.length + ' ' + type + ' listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        emitWarning(w);\n      }\n    }\n  }\n\n  return target;\n}\nfunction emitWarning(e) {\n  typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n  function g() {\n    target.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || (list.listener && list.listener === listener)) {\n        if (--this._eventsCount === 0)\n          this._events = new EventHandlers();\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener ||\n              (list[i].listener && list[i].listener === listener)) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = new EventHandlers();\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener.listener || evlistener];\n    else\n      ret = unwrapListeners(evlistener);\n  }\n\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n  while (i--)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","\nvar inherits;\nif (typeof Object.create === 'function'){\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\nexport default inherits;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport process from 'process';\nvar formatRegExp = /%[sdj%]/g;\nexport function format(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexport function deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexport function debuglog(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n      debugs[set] = function() {\n        var msg = format.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nexport function inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexport function isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexport function isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexport function isNull(arg) {\n  return arg === null;\n}\n\nexport function isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexport function isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexport function isString(arg) {\n  return typeof arg === 'string';\n}\n\nexport function isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nexport function isUndefined(arg) {\n  return arg === void 0;\n}\n\nexport function isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexport function isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nexport function isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexport function isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexport function isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexport function isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\n\nexport function isBuffer(maybeBuf) {\n  return Buffer.isBuffer(maybeBuf);\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexport function log() {\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n}\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nimport inherits from './inherits';\nexport {inherits}\n\nexport function _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport default {\n  inherits: inherits,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol,\n  isString: isString,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format,\n  debuglog: debuglog\n}\n","import {Buffer} from 'buffer';\n\nexport default BufferList;\n\nfunction BufferList() {\n  this.head = null;\n  this.tail = null;\n  this.length = 0;\n}\n\nBufferList.prototype.push = function (v) {\n  var entry = { data: v, next: null };\n  if (this.length > 0) this.tail.next = entry;else this.head = entry;\n  this.tail = entry;\n  ++this.length;\n};\n\nBufferList.prototype.unshift = function (v) {\n  var entry = { data: v, next: this.head };\n  if (this.length === 0) this.tail = entry;\n  this.head = entry;\n  ++this.length;\n};\n\nBufferList.prototype.shift = function () {\n  if (this.length === 0) return;\n  var ret = this.head.data;\n  if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n  --this.length;\n  return ret;\n};\n\nBufferList.prototype.clear = function () {\n  this.head = this.tail = null;\n  this.length = 0;\n};\n\nBufferList.prototype.join = function (s) {\n  if (this.length === 0) return '';\n  var p = this.head;\n  var ret = '' + p.data;\n  while (p = p.next) {\n    ret += s + p.data;\n  }return ret;\n};\n\nBufferList.prototype.concat = function (n) {\n  if (this.length === 0) return Buffer.alloc(0);\n  if (this.length === 1) return this.head.data;\n  var ret = Buffer.allocUnsafe(n >>> 0);\n  var p = this.head;\n  var i = 0;\n  while (p) {\n    p.data.copy(ret, i);\n    i += p.data.length;\n    p = p.next;\n  }\n  return ret;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport {Buffer} from 'buffer';\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nexport function StringDecoder(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n","'use strict';\n\n\nReadable.ReadableState = ReadableState;\nimport EventEmitter from 'events';\nimport {inherits, debuglog} from 'util';\nimport BufferList from './buffer-list';\nimport {StringDecoder} from 'string_decoder';\nimport {Duplex} from './duplex';\nimport {nextTick} from 'process';\n\nvar debug = debuglog('stream');\ninherits(Readable, EventEmitter);\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') {\n    return emitter.prependListener(event, fn);\n  } else {\n    // This is a hack to make sure that our error handler is attached before any\n    // userland ones.  NEVER DO THIS. This is here only because this code needs\n    // to continue to work with older versions of Node.js that do not include\n    // the prependListener() method. The goal is to eventually remove this hack.\n    if (!emitter._events || !emitter._events[event])\n      emitter.on(event, fn);\n    else if (Array.isArray(emitter._events[event]))\n      emitter._events[event].unshift(fn);\n    else\n      emitter._events[event] = [fn, emitter._events[event]];\n  }\n}\nfunction listenerCount (emitter, type) {\n  return emitter.listeners(type).length;\n}\nfunction ReadableState(options, stream) {\n\n  options = options || {};\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~ ~this.highWaterMark;\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nexport default Readable;\nexport function Readable(options) {\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options && typeof options.read === 'function') this._read = options.read;\n\n  EventEmitter.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n\n  if (!state.objectMode && typeof chunk === 'string') {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = Buffer.from(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var _e = new Error('stream.unshift() after end event');\n      stream.emit('error', _e);\n    } else {\n      var skipAdd;\n      if (state.decoder && !addToFront && !encoding) {\n        chunk = state.decoder.write(chunk);\n        skipAdd = !state.objectMode && chunk.length === 0;\n      }\n\n      if (!addToFront) state.reading = false;\n\n      // Don't add to the buffer if we've decoded to an empty string chunk and\n      // we're not in object mode\n      if (!skipAdd) {\n        // if we want the data now, just emit it.\n        if (state.flowing && state.length === 0 && !state.sync) {\n          stream.emit('data', chunk);\n          stream.read(0);\n        } else {\n          // update the buffer info.\n          state.length += state.objectMode ? 1 : chunk.length;\n          if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n          if (state.needReadable) emitReadable(stream);\n        }\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false);\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted) nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (listenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && src.listeners('data').length) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var _i = 0; _i < len; _i++) {\n      dests[_i].emit('unpipe', this);\n    }return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1) return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = EventEmitter.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function (ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n","// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n\nimport {inherits, deprecate} from 'util';\nimport {Buffer} from 'buffer';\nWritable.WritableState = WritableState;\nimport {EventEmitter} from 'events';\nimport {Duplex} from './duplex';\nimport {nextTick} from 'process';\ninherits(Writable, EventEmitter);\n\nfunction nop() {}\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\nfunction WritableState(options, stream) {\n  Object.defineProperty(this, 'buffer', {\n    get: deprecate(function () {\n      return this.getBuffer();\n    }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.')\n  });\n  options = options || {};\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~ ~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function writableStateGetBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\nexport default Writable;\nexport function Writable(options) {\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex)) return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n  }\n\n  EventEmitter.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  nextTick(cb, er);\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n  // Always throw error if a null is written\n  // if we are not in object mode then throw\n  // if it is not a buffer, string, or undefined.\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (Buffer.isBuffer(chunk)) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n\n  if (Buffer.isBuffer(chunk)) encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) nextTick(cb, er);else cb(er);\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n        nextTick(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n        afterWrite(stream, state, finished, cb);\n      }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    while (entry) {\n      buffer[count] = entry;\n      entry = entry.next;\n      count += 1;\n    }\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequestCount = 0;\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else {\n      prefinish(stream, state);\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function (err) {\n    var entry = _this.entry;\n    _this.entry = null;\n    while (entry) {\n      var cb = entry.callback;\n      state.pendingcb--;\n      cb(err);\n      entry = entry.next;\n    }\n    if (state.corkedRequestsFree) {\n      state.corkedRequestsFree.next = _this;\n    } else {\n      state.corkedRequestsFree = _this;\n    }\n  };\n}\n","\nimport {inherits} from 'util';\nimport {nextTick} from 'process';\nimport {Readable} from './readable';\nimport {Writable} from './writable';\n\n\ninherits(Duplex, Readable);\n\nvar keys = Object.keys(Writable.prototype);\nfor (var v = 0; v < keys.length; v++) {\n  var method = keys[v];\n  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n}\nexport default Duplex;\nexport function Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n","// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n\nimport {Duplex} from './duplex';\n\n\nimport {inherits} from 'util';\ninherits(Transform, Duplex);\n\nfunction TransformState(stream) {\n  this.afterTransform = function (er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n  this.writeencoding = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined) stream.push(data);\n\n  cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\nexport default Transform;\nexport function Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  this.once('prefinish', function () {\n    if (typeof this._flush === 'function') this._flush(function (er) {\n      done(stream, er);\n    });else done(stream);\n  });\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('Not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nfunction done(stream, er) {\n  if (er) return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (ts.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}\n","\nimport {Transform} from './transform';\n\nimport {inherits} from 'util';\ninherits(PassThrough, Transform);\nexport default PassThrough;\nexport function PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n","import EE from 'events';\nimport {inherits} from 'util';\n\nimport {Duplex} from './readable-stream/duplex.js';\nimport {Readable} from './readable-stream/readable.js';\nimport {Writable} from './readable-stream/writable.js';\nimport {Transform} from './readable-stream/transform.js';\nimport {PassThrough} from './readable-stream/passthrough.js';\ninherits(Stream, EE);\nStream.Readable = Readable;\nStream.Writable = Writable;\nStream.Duplex = Duplex;\nStream.Transform = Transform;\nStream.PassThrough = PassThrough;\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\nexport default Stream;\nexport {Readable,Writable,Duplex,Transform,PassThrough,Stream}\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","var Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar StringDecoder = require('string_decoder').StringDecoder\nvar inherits = require('inherits')\n\nfunction CipherBase (hashMode) {\n  Transform.call(this)\n  this.hashMode = typeof hashMode === 'string'\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest\n  } else {\n    this.final = this._finalOrDigest\n  }\n  if (this._final) {\n    this.__final = this._final\n    this._final = null\n  }\n  this._decoder = null\n  this._encoding = null\n}\ninherits(CipherBase, Transform)\n\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  if (typeof data === 'string') {\n    data = Buffer.from(data, inputEnc)\n  }\n\n  var outData = this._update(data)\n  if (this.hashMode) return this\n\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc)\n  }\n\n  return outData\n}\n\nCipherBase.prototype.setAutoPadding = function () {}\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state')\n}\n\nCipherBase.prototype._transform = function (data, _, next) {\n  var err\n  try {\n    if (this.hashMode) {\n      this._update(data)\n    } else {\n      this.push(this._update(data))\n    }\n  } catch (e) {\n    err = e\n  } finally {\n    next(err)\n  }\n}\nCipherBase.prototype._flush = function (done) {\n  var err\n  try {\n    this.push(this.__final())\n  } catch (e) {\n    err = e\n  }\n\n  done(err)\n}\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this.__final() || Buffer.alloc(0)\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true)\n  }\n  return outData\n}\n\nCipherBase.prototype._toString = function (value, enc, fin) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc)\n    this._encoding = enc\n  }\n\n  if (this._encoding !== enc) throw new Error('can\\'t switch encodings')\n\n  var out = this._decoder.write(value)\n  if (fin) {\n    out += this._decoder.end()\n  }\n\n  return out\n}\n\nmodule.exports = CipherBase\n","exports['aes-128-ecb'] = {\n  cipher: 'AES',\n  key: 128,\n  iv: 0,\n  mode: 'ECB',\n  type: 'block'\n}\nexports['aes-192-ecb'] = {\n  cipher: 'AES',\n  key: 192,\n  iv: 0,\n  mode: 'ECB',\n  type: 'block'\n}\nexports['aes-256-ecb'] = {\n  cipher: 'AES',\n  key: 256,\n  iv: 0,\n  mode: 'ECB',\n  type: 'block'\n}\nexports['aes-128-cbc'] = {\n  cipher: 'AES',\n  key: 128,\n  iv: 16,\n  mode: 'CBC',\n  type: 'block'\n}\nexports['aes-192-cbc'] = {\n  cipher: 'AES',\n  key: 192,\n  iv: 16,\n  mode: 'CBC',\n  type: 'block'\n}\nexports['aes-256-cbc'] = {\n  cipher: 'AES',\n  key: 256,\n  iv: 16,\n  mode: 'CBC',\n  type: 'block'\n}\nexports['aes128'] = exports['aes-128-cbc']\nexports['aes192'] = exports['aes-192-cbc']\nexports['aes256'] = exports['aes-256-cbc']\nexports['aes-128-cfb'] = {\n  cipher: 'AES',\n  key: 128,\n  iv: 16,\n  mode: 'CFB',\n  type: 'stream'\n}\nexports['aes-192-cfb'] = {\n  cipher: 'AES',\n  key: 192,\n  iv: 16,\n  mode: 'CFB',\n  type: 'stream'\n}\nexports['aes-256-cfb'] = {\n  cipher: 'AES',\n  key: 256,\n  iv: 16,\n  mode: 'CFB',\n  type: 'stream'\n}\nexports['aes-128-cfb8'] = {\n  cipher: 'AES',\n  key: 128,\n  iv: 16,\n  mode: 'CFB8',\n  type: 'stream'\n}\nexports['aes-192-cfb8'] = {\n  cipher: 'AES',\n  key: 192,\n  iv: 16,\n  mode: 'CFB8',\n  type: 'stream'\n}\nexports['aes-256-cfb8'] = {\n  cipher: 'AES',\n  key: 256,\n  iv: 16,\n  mode: 'CFB8',\n  type: 'stream'\n}\nexports['aes-128-cfb1'] = {\n  cipher: 'AES',\n  key: 128,\n  iv: 16,\n  mode: 'CFB1',\n  type: 'stream'\n}\nexports['aes-192-cfb1'] = {\n  cipher: 'AES',\n  key: 192,\n  iv: 16,\n  mode: 'CFB1',\n  type: 'stream'\n}\nexports['aes-256-cfb1'] = {\n  cipher: 'AES',\n  key: 256,\n  iv: 16,\n  mode: 'CFB1',\n  type: 'stream'\n}\nexports['aes-128-ofb'] = {\n  cipher: 'AES',\n  key: 128,\n  iv: 16,\n  mode: 'OFB',\n  type: 'stream'\n}\nexports['aes-192-ofb'] = {\n  cipher: 'AES',\n  key: 192,\n  iv: 16,\n  mode: 'OFB',\n  type: 'stream'\n}\nexports['aes-256-ofb'] = {\n  cipher: 'AES',\n  key: 256,\n  iv: 16,\n  mode: 'OFB',\n  type: 'stream'\n}\nexports['aes-128-ctr'] = {\n  cipher: 'AES',\n  key: 128,\n  iv: 16,\n  mode: 'CTR',\n  type: 'stream'\n}\nexports['aes-192-ctr'] = {\n  cipher: 'AES',\n  key: 192,\n  iv: 16,\n  mode: 'CTR',\n  type: 'stream'\n}\nexports['aes-256-ctr'] = {\n  cipher: 'AES',\n  key: 256,\n  iv: 16,\n  mode: 'CTR',\n  type: 'stream'\n}\nexports['aes-128-gcm'] = {\n  cipher: 'AES',\n  key: 128,\n  iv: 12,\n  mode: 'GCM',\n  type: 'auth'\n}\nexports['aes-192-gcm'] = {\n  cipher: 'AES',\n  key: 192,\n  iv: 12,\n  mode: 'GCM',\n  type: 'auth'\n}\nexports['aes-256-gcm'] = {\n  cipher: 'AES',\n  key: 256,\n  iv: 12,\n  mode: 'GCM',\n  type: 'auth'\n}\n","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();","'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\nrequire('inherits')(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nrequire('inherits')(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;","'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = require('util');\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/buffer_list');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\nrequire('inherits')(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';\n\nmodule.exports = Transform;\n\nvar _require$codes = require('../errors').codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = require('./_stream_duplex');\n\nrequire('inherits')(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\nrequire('inherits')(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = require('../../../errors').codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('readable-stream').Transform\nvar inherits = require('inherits')\n\nfunction throwIfNotStringOrBuffer (val, prefix) {\n  if (!Buffer.isBuffer(val) && typeof val !== 'string') {\n    throw new TypeError(prefix + ' must be a string or a buffer')\n  }\n}\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  throwIfNotStringOrBuffer(data, 'Data')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n","'use strict'\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\nvar Buffer = require('safe-buffer').Buffer\n\nvar ARRAY16 = new Array(16)\n\nfunction MD5 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n}\n\ninherits(MD5, HashBase)\n\nMD5.prototype._update = function () {\n  var M = ARRAY16\n  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)\n\n  var a = this._a\n  var b = this._b\n  var c = this._c\n  var d = this._d\n\n  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)\n  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)\n  c = fnF(c, d, a, b, M[2], 0x242070db, 17)\n  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)\n  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)\n  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)\n  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)\n  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)\n  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)\n  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)\n  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)\n  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)\n  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)\n  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)\n  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)\n  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)\n\n  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)\n  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)\n  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)\n  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)\n  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)\n  d = fnG(d, a, b, c, M[10], 0x02441453, 9)\n  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)\n  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)\n  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)\n  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)\n  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)\n  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)\n  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)\n  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)\n  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)\n  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)\n\n  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)\n  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)\n  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)\n  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)\n  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)\n  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)\n  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)\n  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)\n  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)\n  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)\n  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)\n  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)\n  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)\n  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)\n  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)\n  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)\n\n  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)\n  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)\n  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)\n  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)\n  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)\n  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)\n  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)\n  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)\n  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)\n  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)\n  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)\n  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)\n  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)\n  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)\n  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)\n  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)\n\n  this._a = (this._a + a) | 0\n  this._b = (this._b + b) | 0\n  this._c = (this._c + c) | 0\n  this._d = (this._d + d) | 0\n}\n\nMD5.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.allocUnsafe(16)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fnF (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnG (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnH (a, b, c, d, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnI (a, b, c, d, m, k, s) {\n  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0\n}\n\nmodule.exports = MD5\n","var Buffer = require('safe-buffer').Buffer\nvar MD5 = require('md5.js')\n\n/* eslint-disable camelcase */\nfunction EVP_BytesToKey (password, salt, keyBits, ivLen) {\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')\n  if (salt) {\n    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')\n    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')\n  }\n\n  var keyLen = keyBits / 8\n  var key = Buffer.alloc(keyLen)\n  var iv = Buffer.alloc(ivLen || 0)\n  var tmp = Buffer.alloc(0)\n\n  while (keyLen > 0 || ivLen > 0) {\n    var hash = new MD5()\n    hash.update(tmp)\n    hash.update(password)\n    if (salt) hash.update(salt)\n    tmp = hash.digest()\n\n    var used = 0\n\n    if (keyLen > 0) {\n      var keyStart = key.length - keyLen\n      used = Math.min(keyLen, tmp.length)\n      tmp.copy(key, keyStart, 0, used)\n      keyLen -= used\n    }\n\n    if (used < tmp.length && ivLen > 0) {\n      var ivStart = iv.length - ivLen\n      var length = Math.min(ivLen, tmp.length - used)\n      tmp.copy(iv, ivStart, used, used + length)\n      ivLen -= length\n    }\n  }\n\n  tmp.fill(0)\n  return { key: key, iv: iv }\n}\n\nmodule.exports = EVP_BytesToKey\n","var aes = require('./aes')\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\n\ninherits(StreamCipher, Transform)\nmodule.exports = StreamCipher\nfunction StreamCipher (mode, key, iv, decrypt) {\n  if (!(this instanceof StreamCipher)) {\n    return new StreamCipher(mode, key, iv)\n  }\n  Transform.call(this)\n  this._cipher = new aes.AES(key)\n  this._prev = new Buffer(iv.length)\n  this._cache = new Buffer('')\n  this._secCache = new Buffer('')\n  this._decrypt = decrypt\n  iv.copy(this._prev)\n  this._mode = mode\n}\nStreamCipher.prototype._update = function (chunk) {\n  return this._mode.encrypt(this, chunk, this._decrypt)\n}\nStreamCipher.prototype._final = function () {\n  this._cipher.scrub()\n}\n","var zeros = new Buffer(16)\nzeros.fill(0)\nmodule.exports = GHASH\nfunction GHASH (key) {\n  this.h = key\n  this.state = new Buffer(16)\n  this.state.fill(0)\n  this.cache = new Buffer('')\n}\n// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html\n// by Juho Vähä-Herttua\nGHASH.prototype.ghash = function (block) {\n  var i = -1\n  while (++i < block.length) {\n    this.state[i] ^= block[i]\n  }\n  this._multiply()\n}\n\nGHASH.prototype._multiply = function () {\n  var Vi = toArray(this.h)\n  var Zi = [0, 0, 0, 0]\n  var j, xi, lsb_Vi\n  var i = -1\n  while (++i < 128) {\n    xi = (this.state[~~(i / 8)] & (1 << (7 - i % 8))) !== 0\n    if (xi) {\n      // Z_i+1 = Z_i ^ V_i\n      Zi = xor(Zi, Vi)\n    }\n\n    // Store the value of LSB(V_i)\n    lsb_Vi = (Vi[3] & 1) !== 0\n\n    // V_i+1 = V_i >> 1\n    for (j = 3; j > 0; j--) {\n      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)\n    }\n    Vi[0] = Vi[0] >>> 1\n\n    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R\n    if (lsb_Vi) {\n      Vi[0] = Vi[0] ^ (0xe1 << 24)\n    }\n  }\n  this.state = fromArray(Zi)\n}\nGHASH.prototype.update = function (buf) {\n  this.cache = Buffer.concat([this.cache, buf])\n  var chunk\n  while (this.cache.length >= 16) {\n    chunk = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    this.ghash(chunk)\n  }\n}\nGHASH.prototype.final = function (abl, bl) {\n  if (this.cache.length) {\n    this.ghash(Buffer.concat([this.cache, zeros], 16))\n  }\n  this.ghash(fromArray([\n    0, abl,\n    0, bl\n  ]))\n  return this.state\n}\n\nfunction toArray (buf) {\n  return [\n    buf.readUInt32BE(0),\n    buf.readUInt32BE(4),\n    buf.readUInt32BE(8),\n    buf.readUInt32BE(12)\n  ]\n}\nfunction fromArray (out) {\n  out = out.map(fixup_uint32)\n  var buf = new Buffer(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[1], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[3], 12)\n  return buf\n}\nvar uint_max = Math.pow(2, 32)\nfunction fixup_uint32 (x) {\n  var ret, x_pos\n  ret = x > uint_max || x < 0 ? (x_pos = Math.abs(x) % uint_max, x < 0 ? uint_max - x_pos : x_pos) : x\n  return ret\n}\nfunction xor (a, b) {\n  return [\n    a[0] ^ b[0],\n    a[1] ^ b[1],\n    a[2] ^ b[2],\n    a[3] ^ b[3]\n  ]\n}\n","module.exports = function xor (a, b) {\n  var length = Math.min(a.length, b.length)\n  var buffer = new Buffer(length)\n\n  for (var i = 0; i < length; ++i) {\n    buffer[i] = a[i] ^ b[i]\n  }\n\n  return buffer\n}\n","var aes = require('./aes')\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\nvar GHASH = require('./ghash')\nvar xor = require('buffer-xor')\ninherits(StreamCipher, Transform)\nmodule.exports = StreamCipher\n\nfunction StreamCipher (mode, key, iv, decrypt) {\n  if (!(this instanceof StreamCipher)) {\n    return new StreamCipher(mode, key, iv)\n  }\n  Transform.call(this)\n  this._finID = Buffer.concat([iv, new Buffer([0, 0, 0, 1])])\n  iv = Buffer.concat([iv, new Buffer([0, 0, 0, 2])])\n  this._cipher = new aes.AES(key)\n  this._prev = new Buffer(iv.length)\n  this._cache = new Buffer('')\n  this._secCache = new Buffer('')\n  this._decrypt = decrypt\n  this._alen = 0\n  this._len = 0\n  iv.copy(this._prev)\n  this._mode = mode\n  var h = new Buffer(4)\n  h.fill(0)\n  this._ghash = new GHASH(this._cipher.encryptBlock(h))\n  this._authTag = null\n  this._called = false\n}\nStreamCipher.prototype._update = function (chunk) {\n  if (!this._called && this._alen) {\n    var rump = 16 - (this._alen % 16)\n    if (rump < 16) {\n      rump = new Buffer(rump)\n      rump.fill(0)\n      this._ghash.update(rump)\n    }\n  }\n  this._called = true\n  var out = this._mode.encrypt(this, chunk)\n  if (this._decrypt) {\n    this._ghash.update(chunk)\n  } else {\n    this._ghash.update(out)\n  }\n  this._len += chunk.length\n  return out\n}\nStreamCipher.prototype._final = function () {\n  if (this._decrypt && !this._authTag) {\n    throw new Error('Unsupported state or unable to authenticate data')\n  }\n  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))\n  if (this._decrypt) {\n    if (xorTest(tag, this._authTag)) {\n      throw new Error('Unsupported state or unable to authenticate data')\n    }\n  } else {\n    this._authTag = tag\n  }\n  this._cipher.scrub()\n}\nStreamCipher.prototype.getAuthTag = function getAuthTag () {\n  if (!this._decrypt && Buffer.isBuffer(this._authTag)) {\n    return this._authTag\n  } else {\n    throw new Error('Attempting to get auth tag in unsupported state')\n  }\n}\nStreamCipher.prototype.setAuthTag = function setAuthTag (tag) {\n  if (this._decrypt) {\n    this._authTag = tag\n  } else {\n    throw new Error('Attempting to set auth tag in unsupported state')\n  }\n}\nStreamCipher.prototype.setAAD = function setAAD (buf) {\n  if (!this._called) {\n    this._ghash.update(buf)\n    this._alen += buf.length\n  } else {\n    throw new Error('Attempting to set AAD in unsupported state')\n  }\n}\nfunction xorTest (a, b) {\n  var out = 0\n  if (a.length !== b.length) {\n    out++\n  }\n  var len = Math.min(a.length, b.length)\n  var i = -1\n  while (++i < len) {\n    out += (a[i] ^ b[i])\n  }\n  return out\n}\n","exports.encrypt = function (self, block) {\n  return self._cipher.encryptBlock(block)\n}\nexports.decrypt = function (self, block) {\n  return self._cipher.decryptBlock(block)\n}\n","var xor = require('buffer-xor')\n\nexports.encrypt = function (self, block) {\n  var data = xor(block, self._prev)\n\n  self._prev = self._cipher.encryptBlock(data)\n  return self._prev\n}\n\nexports.decrypt = function (self, block) {\n  var pad = self._prev\n\n  self._prev = block\n  var out = self._cipher.decryptBlock(block)\n\n  return xor(out, pad)\n}\n","var xor = require('buffer-xor')\n\nexports.encrypt = function (self, data, decrypt) {\n  var out = new Buffer('')\n  var len\n\n  while (data.length) {\n    if (self._cache.length === 0) {\n      self._cache = self._cipher.encryptBlock(self._prev)\n      self._prev = new Buffer('')\n    }\n\n    if (self._cache.length <= data.length) {\n      len = self._cache.length\n      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])\n      data = data.slice(len)\n    } else {\n      out = Buffer.concat([out, encryptStart(self, data, decrypt)])\n      break\n    }\n  }\n\n  return out\n}\nfunction encryptStart (self, data, decrypt) {\n  var len = data.length\n  var out = xor(data, self._cache)\n  self._cache = self._cache.slice(len)\n  self._prev = Buffer.concat([self._prev, decrypt ? data : out])\n  return out\n}\n","function encryptByte (self, byteParam, decrypt) {\n  var pad = self._cipher.encryptBlock(self._prev)\n  var out = pad[0] ^ byteParam\n  self._prev = Buffer.concat([self._prev.slice(1), new Buffer([decrypt ? byteParam : out])])\n  return out\n}\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = new Buffer(len)\n  var i = -1\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n  return out\n}\n","function encryptByte (self, byteParam, decrypt) {\n  var pad\n  var i = -1\n  var len = 8\n  var out = 0\n  var bit, value\n  while (++i < len) {\n    pad = self._cipher.encryptBlock(self._prev)\n    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0\n    value = pad[0] ^ bit\n    out += ((value & 0x80) >> (i % 8))\n    self._prev = shiftIn(self._prev, decrypt ? bit : value)\n  }\n  return out\n}\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = new Buffer(len)\n  var i = -1\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n  return out\n}\nfunction shiftIn (buffer, value) {\n  var len = buffer.length\n  var i = -1\n  var out = new Buffer(buffer.length)\n  buffer = Buffer.concat([buffer, new Buffer([value])])\n  while (++i < len) {\n    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)\n  }\n  return out\n}\n","var xor = require('buffer-xor')\n\nfunction getBlock (self) {\n  self._prev = self._cipher.encryptBlock(self._prev)\n  return self._prev\n}\n\nexports.encrypt = function (self, chunk) {\n  while (self._cache.length < chunk.length) {\n    self._cache = Buffer.concat([self._cache, getBlock(self)])\n  }\n\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n","var xor = require('buffer-xor')\n\nfunction incr32 (iv) {\n  var len = iv.length\n  var item\n  while (len--) {\n    item = iv.readUInt8(len)\n    if (item === 255) {\n      iv.writeUInt8(0, len)\n    } else {\n      item++\n      iv.writeUInt8(item, len)\n      break\n    }\n  }\n}\n\nfunction getBlock (self) {\n  var out = self._cipher.encryptBlock(self._prev)\n  incr32(self._prev)\n  return out\n}\n\nexports.encrypt = function (self, chunk) {\n  while (self._cache.length < chunk.length) {\n    self._cache = Buffer.concat([self._cache, getBlock(self)])\n  }\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n","var aes = require('./aes')\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\nvar modes = require('./modes')\nvar ebtk = require('evp_bytestokey')\nvar StreamCipher = require('./streamCipher')\nvar AuthCipher = require('./authCipher')\ninherits(Cipher, Transform)\nfunction Cipher (mode, key, iv) {\n  if (!(this instanceof Cipher)) {\n    return new Cipher(mode, key, iv)\n  }\n  Transform.call(this)\n  this._cache = new Splitter()\n  this._cipher = new aes.AES(key)\n  this._prev = new Buffer(iv.length)\n  iv.copy(this._prev)\n  this._mode = mode\n  this._autopadding = true\n}\nCipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n  while ((chunk = this._cache.get())) {\n    thing = this._mode.encrypt(this, chunk)\n    out.push(thing)\n  }\n  return Buffer.concat(out)\n}\nCipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    chunk = this._mode.encrypt(this, chunk)\n    this._cipher.scrub()\n    return chunk\n  } else if (chunk.toString('hex') !== '10101010101010101010101010101010') {\n    this._cipher.scrub()\n    throw new Error('data not multiple of block length')\n  }\n}\nCipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  if (!(this instanceof Splitter)) {\n    return new Splitter()\n  }\n  this.cache = new Buffer('')\n}\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function () {\n  if (this.cache.length > 15) {\n    var out = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    return out\n  }\n  return null\n}\nSplitter.prototype.flush = function () {\n  var len = 16 - this.cache.length\n  var padBuff = new Buffer(len)\n\n  var i = -1\n  while (++i < len) {\n    padBuff.writeUInt8(len, i)\n  }\n  var out = Buffer.concat([this.cache, padBuff])\n  return out\n}\nvar modelist = {\n  ECB: require('./modes/ecb'),\n  CBC: require('./modes/cbc'),\n  CFB: require('./modes/cfb'),\n  CFB8: require('./modes/cfb8'),\n  CFB1: require('./modes/cfb1'),\n  OFB: require('./modes/ofb'),\n  CTR: require('./modes/ctr'),\n  GCM: require('./modes/ctr')\n}\n\nfunction createCipheriv (suite, password, iv) {\n  var config = modes[suite.toLowerCase()]\n  if (!config) {\n    throw new TypeError('invalid suite type')\n  }\n  if (typeof iv === 'string') {\n    iv = new Buffer(iv)\n  }\n  if (typeof password === 'string') {\n    password = new Buffer(password)\n  }\n  if (password.length !== config.key / 8) {\n    throw new TypeError('invalid key length ' + password.length)\n  }\n  if (iv.length !== config.iv) {\n    throw new TypeError('invalid iv length ' + iv.length)\n  }\n  if (config.type === 'stream') {\n    return new StreamCipher(modelist[config.mode], password, iv)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(modelist[config.mode], password, iv)\n  }\n  return new Cipher(modelist[config.mode], password, iv)\n}\nfunction createCipher (suite, password) {\n  var config = modes[suite.toLowerCase()]\n  if (!config) {\n    throw new TypeError('invalid suite type')\n  }\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createCipheriv = createCipheriv\nexports.createCipher = createCipher\n","var aes = require('./aes')\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\nvar modes = require('./modes')\nvar StreamCipher = require('./streamCipher')\nvar AuthCipher = require('./authCipher')\nvar ebtk = require('evp_bytestokey')\n\ninherits(Decipher, Transform)\nfunction Decipher (mode, key, iv) {\n  if (!(this instanceof Decipher)) {\n    return new Decipher(mode, key, iv)\n  }\n  Transform.call(this)\n  this._cache = new Splitter()\n  this._last = void 0\n  this._cipher = new aes.AES(key)\n  this._prev = new Buffer(iv.length)\n  iv.copy(this._prev)\n  this._mode = mode\n  this._autopadding = true\n}\nDecipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n  while ((chunk = this._cache.get(this._autopadding))) {\n    thing = this._mode.decrypt(this, chunk)\n    out.push(thing)\n  }\n  return Buffer.concat(out)\n}\nDecipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    return unpad(this._mode.decrypt(this, chunk))\n  } else if (chunk) {\n    throw new Error('data not multiple of block length')\n  }\n}\nDecipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\nfunction Splitter () {\n  if (!(this instanceof Splitter)) {\n    return new Splitter()\n  }\n  this.cache = new Buffer('')\n}\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function (autoPadding) {\n  var out\n  if (autoPadding) {\n    if (this.cache.length > 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  } else {\n    if (this.cache.length >= 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  }\n  return null\n}\nSplitter.prototype.flush = function () {\n  if (this.cache.length) {\n    return this.cache\n  }\n}\nfunction unpad (last) {\n  var padded = last[15]\n  var i = -1\n  while (++i < padded) {\n    if (last[(i + (16 - padded))] !== padded) {\n      throw new Error('unable to decrypt data')\n    }\n  }\n  if (padded === 16) {\n    return\n  }\n  return last.slice(0, 16 - padded)\n}\n\nvar modelist = {\n  ECB: require('./modes/ecb'),\n  CBC: require('./modes/cbc'),\n  CFB: require('./modes/cfb'),\n  CFB8: require('./modes/cfb8'),\n  CFB1: require('./modes/cfb1'),\n  OFB: require('./modes/ofb'),\n  CTR: require('./modes/ctr'),\n  GCM: require('./modes/ctr')\n}\n\nfunction createDecipheriv (suite, password, iv) {\n  var config = modes[suite.toLowerCase()]\n  if (!config) {\n    throw new TypeError('invalid suite type')\n  }\n  if (typeof iv === 'string') {\n    iv = new Buffer(iv)\n  }\n  if (typeof password === 'string') {\n    password = new Buffer(password)\n  }\n  if (password.length !== config.key / 8) {\n    throw new TypeError('invalid key length ' + password.length)\n  }\n  if (iv.length !== config.iv) {\n    throw new TypeError('invalid iv length ' + iv.length)\n  }\n  if (config.type === 'stream') {\n    return new StreamCipher(modelist[config.mode], password, iv, true)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(modelist[config.mode], password, iv, true)\n  }\n  return new Decipher(modelist[config.mode], password, iv)\n}\n\nfunction createDecipher (suite, password) {\n  var config = modes[suite.toLowerCase()]\n  if (!config) {\n    throw new TypeError('invalid suite type')\n  }\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\nexports.createDecipher = createDecipher\nexports.createDecipheriv = createDecipheriv\n","var ciphers = require('./encrypter')\nexports.createCipher = exports.Cipher = ciphers.createCipher\nexports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv\nvar deciphers = require('./decrypter')\nexports.createDecipher = exports.Decipher = deciphers.createDecipher\nexports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv\nvar modes = require('./modes')\nfunction getCiphers () {\n  return Object.keys(modes)\n}\nexports.listCiphers = exports.getCiphers = getCiphers\n","\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport {isBuffer} from 'buffer';\nimport {isPrimitive, inherits, isError, isFunction, isRegExp, isDate, inspect as utilInspect} from 'util';\nvar pSlice = Array.prototype.slice;\nvar _functionsHaveNames;\nfunction functionsHaveNames() {\n  if (typeof _functionsHaveNames !== 'undefined') {\n    return _functionsHaveNames;\n  }\n  return _functionsHaveNames = (function () {\n    return function foo() {}.name === 'foo';\n  }());\n}\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nfunction assert(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\nexport default assert;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames()) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = AssertionError;\nexport function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n}\n\n// assert.AssertionError instanceof Error\ninherits(AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames() || !isFunction(something)) {\n    return utilInspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nexport function fail(actual, expected, message, operator, stackStartFunction) {\n  throw new AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nexport function ok(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\nassert.ok = ok;\nexport {ok as assert};\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\nassert.equal = equal;\nexport function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', equal);\n}\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\nassert.notEqual = notEqual;\nexport function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', notEqual);\n  }\n}\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\nassert.deepEqual = deepEqual;\nexport function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', deepEqual);\n  }\n}\nassert.deepStrictEqual = deepStrictEqual;\nexport function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', deepStrictEqual);\n  }\n}\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (isDate(actual) && isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (isRegExp(actual) && isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (isPrimitive(a) || isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\nassert.notDeepEqual = notDeepEqual;\nexport function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', notDeepEqual);\n  }\n}\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nexport function notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\nassert.strictEqual = strictEqual;\nexport function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', strictEqual);\n  }\n}\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\nassert.notStrictEqual = notStrictEqual;\nexport function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', notStrictEqual);\n  }\n}\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\nassert.throws = throws;\nexport function throws(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n}\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = doesNotThrow;\nexport function doesNotThrow(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n}\n\nassert.ifError = ifError;\nexport function ifError(err) {\n  if (err) throw err;\n}\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","// (public) Constructor\nfunction BigInteger(a, b, c) {\n  if (!(this instanceof BigInteger))\n    return new BigInteger(a, b, c)\n\n  if (a != null) {\n    if (\"number\" == typeof a) this.fromNumber(a, b, c)\n    else if (b == null && \"string\" != typeof a) this.fromString(a, 256)\n    else this.fromString(a, b)\n  }\n}\n\nvar proto = BigInteger.prototype\n\n// duck-typed isBigInteger\nproto.__bigi = require('../package.json').version\nBigInteger.isBigInteger = function (obj, check_ver) {\n  return obj && obj.__bigi && (!check_ver || obj.__bigi === proto.__bigi)\n}\n\n// Bits per digit\nvar dbits\n\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i, x, w, j, c, n) {\n  while (--n >= 0) {\n    var v = x * this[i++] + w[j] + c\n    c = Math.floor(v / 0x4000000)\n    w[j++] = v & 0x3ffffff\n  }\n  return c\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i, x, w, j, c, n) {\n  var xl = x & 0x7fff,\n    xh = x >> 15\n  while (--n >= 0) {\n    var l = this[i] & 0x7fff\n    var h = this[i++] >> 15\n    var m = xh * l + h * xl\n    l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff)\n    c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30)\n    w[j++] = l & 0x3fffffff\n  }\n  return c\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i, x, w, j, c, n) {\n  var xl = x & 0x3fff,\n    xh = x >> 14\n  while (--n >= 0) {\n    var l = this[i] & 0x3fff\n    var h = this[i++] >> 14\n    var m = xh * l + h * xl\n    l = xl * l + ((m & 0x3fff) << 14) + w[j] + c\n    c = (l >> 28) + (m >> 14) + xh * h\n    w[j++] = l & 0xfffffff\n  }\n  return c\n}\n\n// wtf?\nBigInteger.prototype.am = am1\ndbits = 26\n\nBigInteger.prototype.DB = dbits\nBigInteger.prototype.DM = ((1 << dbits) - 1)\nvar DV = BigInteger.prototype.DV = (1 << dbits)\n\nvar BI_FP = 52\nBigInteger.prototype.FV = Math.pow(2, BI_FP)\nBigInteger.prototype.F1 = BI_FP - dbits\nBigInteger.prototype.F2 = 2 * dbits - BI_FP\n\n// Digit conversions\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\"\nvar BI_RC = new Array()\nvar rr, vv\nrr = \"0\".charCodeAt(0)\nfor (vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv\nrr = \"a\".charCodeAt(0)\nfor (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv\nrr = \"A\".charCodeAt(0)\nfor (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv\n\nfunction int2char(n) {\n  return BI_RM.charAt(n)\n}\n\nfunction intAt(s, i) {\n  var c = BI_RC[s.charCodeAt(i)]\n  return (c == null) ? -1 : c\n}\n\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n  for (var i = this.t - 1; i >= 0; --i) r[i] = this[i]\n  r.t = this.t\n  r.s = this.s\n}\n\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n  this.t = 1\n  this.s = (x < 0) ? -1 : 0\n  if (x > 0) this[0] = x\n  else if (x < -1) this[0] = x + DV\n  else this.t = 0\n}\n\n// return bigint initialized to value\nfunction nbv(i) {\n  var r = new BigInteger()\n  r.fromInt(i)\n  return r\n}\n\n// (protected) set from string and radix\nfunction bnpFromString(s, b) {\n  var self = this\n\n  var k\n  if (b == 16) k = 4\n  else if (b == 8) k = 3\n  else if (b == 256) k = 8; // byte array\n  else if (b == 2) k = 1\n  else if (b == 32) k = 5\n  else if (b == 4) k = 2\n  else {\n    self.fromRadix(s, b)\n    return\n  }\n  self.t = 0\n  self.s = 0\n  var i = s.length,\n    mi = false,\n    sh = 0\n  while (--i >= 0) {\n    var x = (k == 8) ? s[i] & 0xff : intAt(s, i)\n    if (x < 0) {\n      if (s.charAt(i) == \"-\") mi = true\n      continue\n    }\n    mi = false\n    if (sh == 0)\n      self[self.t++] = x\n    else if (sh + k > self.DB) {\n      self[self.t - 1] |= (x & ((1 << (self.DB - sh)) - 1)) << sh\n      self[self.t++] = (x >> (self.DB - sh))\n    } else\n      self[self.t - 1] |= x << sh\n    sh += k\n    if (sh >= self.DB) sh -= self.DB\n  }\n  if (k == 8 && (s[0] & 0x80) != 0) {\n    self.s = -1\n    if (sh > 0) self[self.t - 1] |= ((1 << (self.DB - sh)) - 1) << sh\n  }\n  self.clamp()\n  if (mi) BigInteger.ZERO.subTo(self, self)\n}\n\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n  var c = this.s & this.DM\n  while (this.t > 0 && this[this.t - 1] == c)--this.t\n}\n\n// (public) return string representation in given radix\nfunction bnToString(b) {\n  var self = this\n  if (self.s < 0) return \"-\" + self.negate()\n    .toString(b)\n  var k\n  if (b == 16) k = 4\n  else if (b == 8) k = 3\n  else if (b == 2) k = 1\n  else if (b == 32) k = 5\n  else if (b == 4) k = 2\n  else return self.toRadix(b)\n  var km = (1 << k) - 1,\n    d, m = false,\n    r = \"\",\n    i = self.t\n  var p = self.DB - (i * self.DB) % k\n  if (i-- > 0) {\n    if (p < self.DB && (d = self[i] >> p) > 0) {\n      m = true\n      r = int2char(d)\n    }\n    while (i >= 0) {\n      if (p < k) {\n        d = (self[i] & ((1 << p) - 1)) << (k - p)\n        d |= self[--i] >> (p += self.DB - k)\n      } else {\n        d = (self[i] >> (p -= k)) & km\n        if (p <= 0) {\n          p += self.DB\n          --i\n        }\n      }\n      if (d > 0) m = true\n      if (m) r += int2char(d)\n    }\n  }\n  return m ? r : \"0\"\n}\n\n// (public) -this\nfunction bnNegate() {\n  var r = new BigInteger()\n  BigInteger.ZERO.subTo(this, r)\n  return r\n}\n\n// (public) |this|\nfunction bnAbs() {\n  return (this.s < 0) ? this.negate() : this\n}\n\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n  var r = this.s - a.s\n  if (r != 0) return r\n  var i = this.t\n  r = i - a.t\n  if (r != 0) return (this.s < 0) ? -r : r\n  while (--i >= 0)\n    if ((r = this[i] - a[i]) != 0) return r\n  return 0\n}\n\n// returns bit length of the integer x\nfunction nbits(x) {\n  var r = 1,\n    t\n  if ((t = x >>> 16) != 0) {\n    x = t\n    r += 16\n  }\n  if ((t = x >> 8) != 0) {\n    x = t\n    r += 8\n  }\n  if ((t = x >> 4) != 0) {\n    x = t\n    r += 4\n  }\n  if ((t = x >> 2) != 0) {\n    x = t\n    r += 2\n  }\n  if ((t = x >> 1) != 0) {\n    x = t\n    r += 1\n  }\n  return r\n}\n\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n  if (this.t <= 0) return 0\n  return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ (this.s & this.DM))\n}\n\n// (public) return the number of bytes in \"this\"\nfunction bnByteLength() {\n  return this.bitLength() >> 3\n}\n\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n, r) {\n  var i\n  for (i = this.t - 1; i >= 0; --i) r[i + n] = this[i]\n  for (i = n - 1; i >= 0; --i) r[i] = 0\n  r.t = this.t + n\n  r.s = this.s\n}\n\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n, r) {\n  for (var i = n; i < this.t; ++i) r[i - n] = this[i]\n  r.t = Math.max(this.t - n, 0)\n  r.s = this.s\n}\n\n// (protected) r = this << n\nfunction bnpLShiftTo(n, r) {\n  var self = this\n  var bs = n % self.DB\n  var cbs = self.DB - bs\n  var bm = (1 << cbs) - 1\n  var ds = Math.floor(n / self.DB),\n    c = (self.s << bs) & self.DM,\n    i\n  for (i = self.t - 1; i >= 0; --i) {\n    r[i + ds + 1] = (self[i] >> cbs) | c\n    c = (self[i] & bm) << bs\n  }\n  for (i = ds - 1; i >= 0; --i) r[i] = 0\n  r[ds] = c\n  r.t = self.t + ds + 1\n  r.s = self.s\n  r.clamp()\n}\n\n// (protected) r = this >> n\nfunction bnpRShiftTo(n, r) {\n  var self = this\n  r.s = self.s\n  var ds = Math.floor(n / self.DB)\n  if (ds >= self.t) {\n    r.t = 0\n    return\n  }\n  var bs = n % self.DB\n  var cbs = self.DB - bs\n  var bm = (1 << bs) - 1\n  r[0] = self[ds] >> bs\n  for (var i = ds + 1; i < self.t; ++i) {\n    r[i - ds - 1] |= (self[i] & bm) << cbs\n    r[i - ds] = self[i] >> bs\n  }\n  if (bs > 0) r[self.t - ds - 1] |= (self.s & bm) << cbs\n  r.t = self.t - ds\n  r.clamp()\n}\n\n// (protected) r = this - a\nfunction bnpSubTo(a, r) {\n  var self = this\n  var i = 0,\n    c = 0,\n    m = Math.min(a.t, self.t)\n  while (i < m) {\n    c += self[i] - a[i]\n    r[i++] = c & self.DM\n    c >>= self.DB\n  }\n  if (a.t < self.t) {\n    c -= a.s\n    while (i < self.t) {\n      c += self[i]\n      r[i++] = c & self.DM\n      c >>= self.DB\n    }\n    c += self.s\n  } else {\n    c += self.s\n    while (i < a.t) {\n      c -= a[i]\n      r[i++] = c & self.DM\n      c >>= self.DB\n    }\n    c -= a.s\n  }\n  r.s = (c < 0) ? -1 : 0\n  if (c < -1) r[i++] = self.DV + c\n  else if (c > 0) r[i++] = c\n  r.t = i\n  r.clamp()\n}\n\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a, r) {\n  var x = this.abs(),\n    y = a.abs()\n  var i = x.t\n  r.t = i + y.t\n  while (--i >= 0) r[i] = 0\n  for (i = 0; i < y.t; ++i) r[i + x.t] = x.am(0, y[i], r, i, 0, x.t)\n  r.s = 0\n  r.clamp()\n  if (this.s != a.s) BigInteger.ZERO.subTo(r, r)\n}\n\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n  var x = this.abs()\n  var i = r.t = 2 * x.t\n  while (--i >= 0) r[i] = 0\n  for (i = 0; i < x.t - 1; ++i) {\n    var c = x.am(i, x[i], r, 2 * i, 0, 1)\n    if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {\n      r[i + x.t] -= x.DV\n      r[i + x.t + 1] = 1\n    }\n  }\n  if (r.t > 0) r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1)\n  r.s = 0\n  r.clamp()\n}\n\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m, q, r) {\n  var self = this\n  var pm = m.abs()\n  if (pm.t <= 0) return\n  var pt = self.abs()\n  if (pt.t < pm.t) {\n    if (q != null) q.fromInt(0)\n    if (r != null) self.copyTo(r)\n    return\n  }\n  if (r == null) r = new BigInteger()\n  var y = new BigInteger(),\n    ts = self.s,\n    ms = m.s\n  var nsh = self.DB - nbits(pm[pm.t - 1]); // normalize modulus\n  if (nsh > 0) {\n    pm.lShiftTo(nsh, y)\n    pt.lShiftTo(nsh, r)\n  } else {\n    pm.copyTo(y)\n    pt.copyTo(r)\n  }\n  var ys = y.t\n  var y0 = y[ys - 1]\n  if (y0 == 0) return\n  var yt = y0 * (1 << self.F1) + ((ys > 1) ? y[ys - 2] >> self.F2 : 0)\n  var d1 = self.FV / yt,\n    d2 = (1 << self.F1) / yt,\n    e = 1 << self.F2\n  var i = r.t,\n    j = i - ys,\n    t = (q == null) ? new BigInteger() : q\n  y.dlShiftTo(j, t)\n  if (r.compareTo(t) >= 0) {\n    r[r.t++] = 1\n    r.subTo(t, r)\n  }\n  BigInteger.ONE.dlShiftTo(ys, t)\n  t.subTo(y, y); // \"negative\" y so we can replace sub with am later\n  while (y.t < ys) y[y.t++] = 0\n  while (--j >= 0) {\n    // Estimate quotient digit\n    var qd = (r[--i] == y0) ? self.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2)\n    if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) { // Try it out\n      y.dlShiftTo(j, t)\n      r.subTo(t, r)\n      while (r[i] < --qd) r.subTo(t, r)\n    }\n  }\n  if (q != null) {\n    r.drShiftTo(ys, q)\n    if (ts != ms) BigInteger.ZERO.subTo(q, q)\n  }\n  r.t = ys\n  r.clamp()\n  if (nsh > 0) r.rShiftTo(nsh, r); // Denormalize remainder\n  if (ts < 0) BigInteger.ZERO.subTo(r, r)\n}\n\n// (public) this mod a\nfunction bnMod(a) {\n  var r = new BigInteger()\n  this.abs()\n    .divRemTo(a, null, r)\n  if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r, r)\n  return r\n}\n\n// Modular reduction using \"classic\" algorithm\nfunction Classic(m) {\n  this.m = m\n}\n\nfunction cConvert(x) {\n  if (x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m)\n  else return x\n}\n\nfunction cRevert(x) {\n  return x\n}\n\nfunction cReduce(x) {\n  x.divRemTo(this.m, null, x)\n}\n\nfunction cMulTo(x, y, r) {\n  x.multiplyTo(y, r)\n  this.reduce(r)\n}\n\nfunction cSqrTo(x, r) {\n  x.squareTo(r)\n  this.reduce(r)\n}\n\nClassic.prototype.convert = cConvert\nClassic.prototype.revert = cRevert\nClassic.prototype.reduce = cReduce\nClassic.prototype.mulTo = cMulTo\nClassic.prototype.sqrTo = cSqrTo\n\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n  if (this.t < 1) return 0\n  var x = this[0]\n  if ((x & 1) == 0) return 0\n  var y = x & 3; // y == 1/x mod 2^2\n  y = (y * (2 - (x & 0xf) * y)) & 0xf; // y == 1/x mod 2^4\n  y = (y * (2 - (x & 0xff) * y)) & 0xff; // y == 1/x mod 2^8\n  y = (y * (2 - (((x & 0xffff) * y) & 0xffff))) & 0xffff; // y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n  y = (y * (2 - x * y % this.DV)) % this.DV; // y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n  return (y > 0) ? this.DV - y : -y\n}\n\n// Montgomery reduction\nfunction Montgomery(m) {\n  this.m = m\n  this.mp = m.invDigit()\n  this.mpl = this.mp & 0x7fff\n  this.mph = this.mp >> 15\n  this.um = (1 << (m.DB - 15)) - 1\n  this.mt2 = 2 * m.t\n}\n\n// xR mod m\nfunction montConvert(x) {\n  var r = new BigInteger()\n  x.abs()\n    .dlShiftTo(this.m.t, r)\n  r.divRemTo(this.m, null, r)\n  if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r)\n  return r\n}\n\n// x/R mod m\nfunction montRevert(x) {\n  var r = new BigInteger()\n  x.copyTo(r)\n  this.reduce(r)\n  return r\n}\n\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n  while (x.t <= this.mt2) // pad x so am has enough room later\n    x[x.t++] = 0\n  for (var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x[i]*mp mod DV\n    var j = x[i] & 0x7fff\n    var u0 = (j * this.mpl + (((j * this.mph + (x[i] >> 15) * this.mpl) & this.um) << 15)) & x.DM\n    // use am to combine the multiply-shift-add into one call\n    j = i + this.m.t\n    x[j] += this.m.am(0, u0, x, i, 0, this.m.t)\n    // propagate carry\n    while (x[j] >= x.DV) {\n      x[j] -= x.DV\n      x[++j]++\n    }\n  }\n  x.clamp()\n  x.drShiftTo(this.m.t, x)\n  if (x.compareTo(this.m) >= 0) x.subTo(this.m, x)\n}\n\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x, r) {\n  x.squareTo(r)\n  this.reduce(r)\n}\n\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x, y, r) {\n  x.multiplyTo(y, r)\n  this.reduce(r)\n}\n\nMontgomery.prototype.convert = montConvert\nMontgomery.prototype.revert = montRevert\nMontgomery.prototype.reduce = montReduce\nMontgomery.prototype.mulTo = montMulTo\nMontgomery.prototype.sqrTo = montSqrTo\n\n// (protected) true iff this is even\nfunction bnpIsEven() {\n  return ((this.t > 0) ? (this[0] & 1) : this.s) == 0\n}\n\n// (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\nfunction bnpExp(e, z) {\n  if (e > 0xffffffff || e < 1) return BigInteger.ONE\n  var r = new BigInteger(),\n    r2 = new BigInteger(),\n    g = z.convert(this),\n    i = nbits(e) - 1\n  g.copyTo(r)\n  while (--i >= 0) {\n    z.sqrTo(r, r2)\n    if ((e & (1 << i)) > 0) z.mulTo(r2, g, r)\n    else {\n      var t = r\n      r = r2\n      r2 = t\n    }\n  }\n  return z.revert(r)\n}\n\n// (public) this^e % m, 0 <= e < 2^32\nfunction bnModPowInt(e, m) {\n  var z\n  if (e < 256 || m.isEven()) z = new Classic(m)\n  else z = new Montgomery(m)\n  return this.exp(e, z)\n}\n\n// protected\nproto.copyTo = bnpCopyTo\nproto.fromInt = bnpFromInt\nproto.fromString = bnpFromString\nproto.clamp = bnpClamp\nproto.dlShiftTo = bnpDLShiftTo\nproto.drShiftTo = bnpDRShiftTo\nproto.lShiftTo = bnpLShiftTo\nproto.rShiftTo = bnpRShiftTo\nproto.subTo = bnpSubTo\nproto.multiplyTo = bnpMultiplyTo\nproto.squareTo = bnpSquareTo\nproto.divRemTo = bnpDivRemTo\nproto.invDigit = bnpInvDigit\nproto.isEven = bnpIsEven\nproto.exp = bnpExp\n\n// public\nproto.toString = bnToString\nproto.negate = bnNegate\nproto.abs = bnAbs\nproto.compareTo = bnCompareTo\nproto.bitLength = bnBitLength\nproto.byteLength = bnByteLength\nproto.mod = bnMod\nproto.modPowInt = bnModPowInt\n\n// (public)\nfunction bnClone() {\n  var r = new BigInteger()\n  this.copyTo(r)\n  return r\n}\n\n// (public) return value as integer\nfunction bnIntValue() {\n  if (this.s < 0) {\n    if (this.t == 1) return this[0] - this.DV\n    else if (this.t == 0) return -1\n  } else if (this.t == 1) return this[0]\n  else if (this.t == 0) return 0\n  // assumes 16 < DB < 32\n  return ((this[1] & ((1 << (32 - this.DB)) - 1)) << this.DB) | this[0]\n}\n\n// (public) return value as byte\nfunction bnByteValue() {\n  return (this.t == 0) ? this.s : (this[0] << 24) >> 24\n}\n\n// (public) return value as short (assumes DB>=16)\nfunction bnShortValue() {\n  return (this.t == 0) ? this.s : (this[0] << 16) >> 16\n}\n\n// (protected) return x s.t. r^x < DV\nfunction bnpChunkSize(r) {\n  return Math.floor(Math.LN2 * this.DB / Math.log(r))\n}\n\n// (public) 0 if this == 0, 1 if this > 0\nfunction bnSigNum() {\n  if (this.s < 0) return -1\n  else if (this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0\n  else return 1\n}\n\n// (protected) convert to radix string\nfunction bnpToRadix(b) {\n  if (b == null) b = 10\n  if (this.signum() == 0 || b < 2 || b > 36) return \"0\"\n  var cs = this.chunkSize(b)\n  var a = Math.pow(b, cs)\n  var d = nbv(a),\n    y = new BigInteger(),\n    z = new BigInteger(),\n    r = \"\"\n  this.divRemTo(d, y, z)\n  while (y.signum() > 0) {\n    r = (a + z.intValue())\n      .toString(b)\n      .substr(1) + r\n    y.divRemTo(d, y, z)\n  }\n  return z.intValue()\n    .toString(b) + r\n}\n\n// (protected) convert from radix string\nfunction bnpFromRadix(s, b) {\n  var self = this\n  self.fromInt(0)\n  if (b == null) b = 10\n  var cs = self.chunkSize(b)\n  var d = Math.pow(b, cs),\n    mi = false,\n    j = 0,\n    w = 0\n  for (var i = 0; i < s.length; ++i) {\n    var x = intAt(s, i)\n    if (x < 0) {\n      if (s.charAt(i) == \"-\" && self.signum() == 0) mi = true\n      continue\n    }\n    w = b * w + x\n    if (++j >= cs) {\n      self.dMultiply(d)\n      self.dAddOffset(w, 0)\n      j = 0\n      w = 0\n    }\n  }\n  if (j > 0) {\n    self.dMultiply(Math.pow(b, j))\n    self.dAddOffset(w, 0)\n  }\n  if (mi) BigInteger.ZERO.subTo(self, self)\n}\n\n// (protected) alternate constructor\nfunction bnpFromNumber(a, b, c) {\n  var self = this\n  if (\"number\" == typeof b) {\n    // new BigInteger(int,int,RNG)\n    if (a < 2) self.fromInt(1)\n    else {\n      self.fromNumber(a, c)\n      if (!self.testBit(a - 1)) // force MSB set\n        self.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), op_or, self)\n      if (self.isEven()) self.dAddOffset(1, 0); // force odd\n      while (!self.isProbablePrime(b)) {\n        self.dAddOffset(2, 0)\n        if (self.bitLength() > a) self.subTo(BigInteger.ONE.shiftLeft(a - 1), self)\n      }\n    }\n  } else {\n    // new BigInteger(int,RNG)\n    var x = new Array(),\n      t = a & 7\n    x.length = (a >> 3) + 1\n    b.nextBytes(x)\n    if (t > 0) x[0] &= ((1 << t) - 1)\n    else x[0] = 0\n    self.fromString(x, 256)\n  }\n}\n\n// (public) convert to bigendian byte array\nfunction bnToByteArray() {\n  var self = this\n  var i = self.t,\n    r = new Array()\n  r[0] = self.s\n  var p = self.DB - (i * self.DB) % 8,\n    d, k = 0\n  if (i-- > 0) {\n    if (p < self.DB && (d = self[i] >> p) != (self.s & self.DM) >> p)\n      r[k++] = d | (self.s << (self.DB - p))\n    while (i >= 0) {\n      if (p < 8) {\n        d = (self[i] & ((1 << p) - 1)) << (8 - p)\n        d |= self[--i] >> (p += self.DB - 8)\n      } else {\n        d = (self[i] >> (p -= 8)) & 0xff\n        if (p <= 0) {\n          p += self.DB\n          --i\n        }\n      }\n      if ((d & 0x80) != 0) d |= -256\n      if (k === 0 && (self.s & 0x80) != (d & 0x80))++k\n      if (k > 0 || d != self.s) r[k++] = d\n    }\n  }\n  return r\n}\n\nfunction bnEquals(a) {\n  return (this.compareTo(a) == 0)\n}\n\nfunction bnMin(a) {\n  return (this.compareTo(a) < 0) ? this : a\n}\n\nfunction bnMax(a) {\n  return (this.compareTo(a) > 0) ? this : a\n}\n\n// (protected) r = this op a (bitwise)\nfunction bnpBitwiseTo(a, op, r) {\n  var self = this\n  var i, f, m = Math.min(a.t, self.t)\n  for (i = 0; i < m; ++i) r[i] = op(self[i], a[i])\n  if (a.t < self.t) {\n    f = a.s & self.DM\n    for (i = m; i < self.t; ++i) r[i] = op(self[i], f)\n    r.t = self.t\n  } else {\n    f = self.s & self.DM\n    for (i = m; i < a.t; ++i) r[i] = op(f, a[i])\n    r.t = a.t\n  }\n  r.s = op(self.s, a.s)\n  r.clamp()\n}\n\n// (public) this & a\nfunction op_and(x, y) {\n  return x & y\n}\n\nfunction bnAnd(a) {\n  var r = new BigInteger()\n  this.bitwiseTo(a, op_and, r)\n  return r\n}\n\n// (public) this | a\nfunction op_or(x, y) {\n  return x | y\n}\n\nfunction bnOr(a) {\n  var r = new BigInteger()\n  this.bitwiseTo(a, op_or, r)\n  return r\n}\n\n// (public) this ^ a\nfunction op_xor(x, y) {\n  return x ^ y\n}\n\nfunction bnXor(a) {\n  var r = new BigInteger()\n  this.bitwiseTo(a, op_xor, r)\n  return r\n}\n\n// (public) this & ~a\nfunction op_andnot(x, y) {\n  return x & ~y\n}\n\nfunction bnAndNot(a) {\n  var r = new BigInteger()\n  this.bitwiseTo(a, op_andnot, r)\n  return r\n}\n\n// (public) ~this\nfunction bnNot() {\n  var r = new BigInteger()\n  for (var i = 0; i < this.t; ++i) r[i] = this.DM & ~this[i]\n  r.t = this.t\n  r.s = ~this.s\n  return r\n}\n\n// (public) this << n\nfunction bnShiftLeft(n) {\n  var r = new BigInteger()\n  if (n < 0) this.rShiftTo(-n, r)\n  else this.lShiftTo(n, r)\n  return r\n}\n\n// (public) this >> n\nfunction bnShiftRight(n) {\n  var r = new BigInteger()\n  if (n < 0) this.lShiftTo(-n, r)\n  else this.rShiftTo(n, r)\n  return r\n}\n\n// return index of lowest 1-bit in x, x < 2^31\nfunction lbit(x) {\n  if (x == 0) return -1\n  var r = 0\n  if ((x & 0xffff) == 0) {\n    x >>= 16\n    r += 16\n  }\n  if ((x & 0xff) == 0) {\n    x >>= 8\n    r += 8\n  }\n  if ((x & 0xf) == 0) {\n    x >>= 4\n    r += 4\n  }\n  if ((x & 3) == 0) {\n    x >>= 2\n    r += 2\n  }\n  if ((x & 1) == 0)++r\n  return r\n}\n\n// (public) returns index of lowest 1-bit (or -1 if none)\nfunction bnGetLowestSetBit() {\n  for (var i = 0; i < this.t; ++i)\n    if (this[i] != 0) return i * this.DB + lbit(this[i])\n  if (this.s < 0) return this.t * this.DB\n  return -1\n}\n\n// return number of 1 bits in x\nfunction cbit(x) {\n  var r = 0\n  while (x != 0) {\n    x &= x - 1\n    ++r\n  }\n  return r\n}\n\n// (public) return number of set bits\nfunction bnBitCount() {\n  var r = 0,\n    x = this.s & this.DM\n  for (var i = 0; i < this.t; ++i) r += cbit(this[i] ^ x)\n  return r\n}\n\n// (public) true iff nth bit is set\nfunction bnTestBit(n) {\n  var j = Math.floor(n / this.DB)\n  if (j >= this.t) return (this.s != 0)\n  return ((this[j] & (1 << (n % this.DB))) != 0)\n}\n\n// (protected) this op (1<<n)\nfunction bnpChangeBit(n, op) {\n  var r = BigInteger.ONE.shiftLeft(n)\n  this.bitwiseTo(r, op, r)\n  return r\n}\n\n// (public) this | (1<<n)\nfunction bnSetBit(n) {\n  return this.changeBit(n, op_or)\n}\n\n// (public) this & ~(1<<n)\nfunction bnClearBit(n) {\n  return this.changeBit(n, op_andnot)\n}\n\n// (public) this ^ (1<<n)\nfunction bnFlipBit(n) {\n  return this.changeBit(n, op_xor)\n}\n\n// (protected) r = this + a\nfunction bnpAddTo(a, r) {\n  var self = this\n\n  var i = 0,\n    c = 0,\n    m = Math.min(a.t, self.t)\n  while (i < m) {\n    c += self[i] + a[i]\n    r[i++] = c & self.DM\n    c >>= self.DB\n  }\n  if (a.t < self.t) {\n    c += a.s\n    while (i < self.t) {\n      c += self[i]\n      r[i++] = c & self.DM\n      c >>= self.DB\n    }\n    c += self.s\n  } else {\n    c += self.s\n    while (i < a.t) {\n      c += a[i]\n      r[i++] = c & self.DM\n      c >>= self.DB\n    }\n    c += a.s\n  }\n  r.s = (c < 0) ? -1 : 0\n  if (c > 0) r[i++] = c\n  else if (c < -1) r[i++] = self.DV + c\n  r.t = i\n  r.clamp()\n}\n\n// (public) this + a\nfunction bnAdd(a) {\n  var r = new BigInteger()\n  this.addTo(a, r)\n  return r\n}\n\n// (public) this - a\nfunction bnSubtract(a) {\n  var r = new BigInteger()\n  this.subTo(a, r)\n  return r\n}\n\n// (public) this * a\nfunction bnMultiply(a) {\n  var r = new BigInteger()\n  this.multiplyTo(a, r)\n  return r\n}\n\n// (public) this^2\nfunction bnSquare() {\n  var r = new BigInteger()\n  this.squareTo(r)\n  return r\n}\n\n// (public) this / a\nfunction bnDivide(a) {\n  var r = new BigInteger()\n  this.divRemTo(a, r, null)\n  return r\n}\n\n// (public) this % a\nfunction bnRemainder(a) {\n  var r = new BigInteger()\n  this.divRemTo(a, null, r)\n  return r\n}\n\n// (public) [this/a,this%a]\nfunction bnDivideAndRemainder(a) {\n  var q = new BigInteger(),\n    r = new BigInteger()\n  this.divRemTo(a, q, r)\n  return new Array(q, r)\n}\n\n// (protected) this *= n, this >= 0, 1 < n < DV\nfunction bnpDMultiply(n) {\n  this[this.t] = this.am(0, n - 1, this, 0, 0, this.t)\n  ++this.t\n  this.clamp()\n}\n\n// (protected) this += n << w words, this >= 0\nfunction bnpDAddOffset(n, w) {\n  if (n == 0) return\n  while (this.t <= w) this[this.t++] = 0\n  this[w] += n\n  while (this[w] >= this.DV) {\n    this[w] -= this.DV\n    if (++w >= this.t) this[this.t++] = 0\n    ++this[w]\n  }\n}\n\n// A \"null\" reducer\nfunction NullExp() {}\n\nfunction nNop(x) {\n  return x\n}\n\nfunction nMulTo(x, y, r) {\n  x.multiplyTo(y, r)\n}\n\nfunction nSqrTo(x, r) {\n  x.squareTo(r)\n}\n\nNullExp.prototype.convert = nNop\nNullExp.prototype.revert = nNop\nNullExp.prototype.mulTo = nMulTo\nNullExp.prototype.sqrTo = nSqrTo\n\n// (public) this^e\nfunction bnPow(e) {\n  return this.exp(e, new NullExp())\n}\n\n// (protected) r = lower n words of \"this * a\", a.t <= n\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyLowerTo(a, n, r) {\n  var i = Math.min(this.t + a.t, n)\n  r.s = 0; // assumes a,this >= 0\n  r.t = i\n  while (i > 0) r[--i] = 0\n  var j\n  for (j = r.t - this.t; i < j; ++i) r[i + this.t] = this.am(0, a[i], r, i, 0, this.t)\n  for (j = Math.min(a.t, n); i < j; ++i) this.am(0, a[i], r, i, 0, n - i)\n  r.clamp()\n}\n\n// (protected) r = \"this * a\" without lower n words, n > 0\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyUpperTo(a, n, r) {\n  --n\n  var i = r.t = this.t + a.t - n\n  r.s = 0; // assumes a,this >= 0\n  while (--i >= 0) r[i] = 0\n  for (i = Math.max(n - this.t, 0); i < a.t; ++i)\n    r[this.t + i - n] = this.am(n - i, a[i], r, 0, 0, this.t + i - n)\n  r.clamp()\n  r.drShiftTo(1, r)\n}\n\n// Barrett modular reduction\nfunction Barrett(m) {\n  // setup Barrett\n  this.r2 = new BigInteger()\n  this.q3 = new BigInteger()\n  BigInteger.ONE.dlShiftTo(2 * m.t, this.r2)\n  this.mu = this.r2.divide(m)\n  this.m = m\n}\n\nfunction barrettConvert(x) {\n  if (x.s < 0 || x.t > 2 * this.m.t) return x.mod(this.m)\n  else if (x.compareTo(this.m) < 0) return x\n  else {\n    var r = new BigInteger()\n    x.copyTo(r)\n    this.reduce(r)\n    return r\n  }\n}\n\nfunction barrettRevert(x) {\n  return x\n}\n\n// x = x mod m (HAC 14.42)\nfunction barrettReduce(x) {\n  var self = this\n  x.drShiftTo(self.m.t - 1, self.r2)\n  if (x.t > self.m.t + 1) {\n    x.t = self.m.t + 1\n    x.clamp()\n  }\n  self.mu.multiplyUpperTo(self.r2, self.m.t + 1, self.q3)\n  self.m.multiplyLowerTo(self.q3, self.m.t + 1, self.r2)\n  while (x.compareTo(self.r2) < 0) x.dAddOffset(1, self.m.t + 1)\n  x.subTo(self.r2, x)\n  while (x.compareTo(self.m) >= 0) x.subTo(self.m, x)\n}\n\n// r = x^2 mod m; x != r\nfunction barrettSqrTo(x, r) {\n  x.squareTo(r)\n  this.reduce(r)\n}\n\n// r = x*y mod m; x,y != r\nfunction barrettMulTo(x, y, r) {\n  x.multiplyTo(y, r)\n  this.reduce(r)\n}\n\nBarrett.prototype.convert = barrettConvert\nBarrett.prototype.revert = barrettRevert\nBarrett.prototype.reduce = barrettReduce\nBarrett.prototype.mulTo = barrettMulTo\nBarrett.prototype.sqrTo = barrettSqrTo\n\n// (public) this^e % m (HAC 14.85)\nfunction bnModPow(e, m) {\n  var i = e.bitLength(),\n    k, r = nbv(1),\n    z\n  if (i <= 0) return r\n  else if (i < 18) k = 1\n  else if (i < 48) k = 3\n  else if (i < 144) k = 4\n  else if (i < 768) k = 5\n  else k = 6\n  if (i < 8)\n    z = new Classic(m)\n  else if (m.isEven())\n    z = new Barrett(m)\n  else\n    z = new Montgomery(m)\n\n  // precomputation\n  var g = new Array(),\n    n = 3,\n    k1 = k - 1,\n    km = (1 << k) - 1\n  g[1] = z.convert(this)\n  if (k > 1) {\n    var g2 = new BigInteger()\n    z.sqrTo(g[1], g2)\n    while (n <= km) {\n      g[n] = new BigInteger()\n      z.mulTo(g2, g[n - 2], g[n])\n      n += 2\n    }\n  }\n\n  var j = e.t - 1,\n    w, is1 = true,\n    r2 = new BigInteger(),\n    t\n  i = nbits(e[j]) - 1\n  while (j >= 0) {\n    if (i >= k1) w = (e[j] >> (i - k1)) & km\n    else {\n      w = (e[j] & ((1 << (i + 1)) - 1)) << (k1 - i)\n      if (j > 0) w |= e[j - 1] >> (this.DB + i - k1)\n    }\n\n    n = k\n    while ((w & 1) == 0) {\n      w >>= 1\n      --n\n    }\n    if ((i -= n) < 0) {\n      i += this.DB\n      --j\n    }\n    if (is1) { // ret == 1, don't bother squaring or multiplying it\n      g[w].copyTo(r)\n      is1 = false\n    } else {\n      while (n > 1) {\n        z.sqrTo(r, r2)\n        z.sqrTo(r2, r)\n        n -= 2\n      }\n      if (n > 0) z.sqrTo(r, r2)\n      else {\n        t = r\n        r = r2\n        r2 = t\n      }\n      z.mulTo(r2, g[w], r)\n    }\n\n    while (j >= 0 && (e[j] & (1 << i)) == 0) {\n      z.sqrTo(r, r2)\n      t = r\n      r = r2\n      r2 = t\n      if (--i < 0) {\n        i = this.DB - 1\n        --j\n      }\n    }\n  }\n  return z.revert(r)\n}\n\n// (public) gcd(this,a) (HAC 14.54)\nfunction bnGCD(a) {\n  var x = (this.s < 0) ? this.negate() : this.clone()\n  var y = (a.s < 0) ? a.negate() : a.clone()\n  if (x.compareTo(y) < 0) {\n    var t = x\n    x = y\n    y = t\n  }\n  var i = x.getLowestSetBit(),\n    g = y.getLowestSetBit()\n  if (g < 0) return x\n  if (i < g) g = i\n  if (g > 0) {\n    x.rShiftTo(g, x)\n    y.rShiftTo(g, y)\n  }\n  while (x.signum() > 0) {\n    if ((i = x.getLowestSetBit()) > 0) x.rShiftTo(i, x)\n    if ((i = y.getLowestSetBit()) > 0) y.rShiftTo(i, y)\n    if (x.compareTo(y) >= 0) {\n      x.subTo(y, x)\n      x.rShiftTo(1, x)\n    } else {\n      y.subTo(x, y)\n      y.rShiftTo(1, y)\n    }\n  }\n  if (g > 0) y.lShiftTo(g, y)\n  return y\n}\n\n// (protected) this % n, n < 2^26\nfunction bnpModInt(n) {\n  if (n <= 0) return 0\n  var d = this.DV % n,\n    r = (this.s < 0) ? n - 1 : 0\n  if (this.t > 0)\n    if (d == 0) r = this[0] % n\n    else\n      for (var i = this.t - 1; i >= 0; --i) r = (d * r + this[i]) % n\n  return r\n}\n\n// (public) 1/this % m (HAC 14.61)\nfunction bnModInverse(m) {\n  var ac = m.isEven()\n  if (this.signum() === 0) throw new Error('division by zero')\n  if ((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO\n  var u = m.clone(),\n    v = this.clone()\n  var a = nbv(1),\n    b = nbv(0),\n    c = nbv(0),\n    d = nbv(1)\n  while (u.signum() != 0) {\n    while (u.isEven()) {\n      u.rShiftTo(1, u)\n      if (ac) {\n        if (!a.isEven() || !b.isEven()) {\n          a.addTo(this, a)\n          b.subTo(m, b)\n        }\n        a.rShiftTo(1, a)\n      } else if (!b.isEven()) b.subTo(m, b)\n      b.rShiftTo(1, b)\n    }\n    while (v.isEven()) {\n      v.rShiftTo(1, v)\n      if (ac) {\n        if (!c.isEven() || !d.isEven()) {\n          c.addTo(this, c)\n          d.subTo(m, d)\n        }\n        c.rShiftTo(1, c)\n      } else if (!d.isEven()) d.subTo(m, d)\n      d.rShiftTo(1, d)\n    }\n    if (u.compareTo(v) >= 0) {\n      u.subTo(v, u)\n      if (ac) a.subTo(c, a)\n      b.subTo(d, b)\n    } else {\n      v.subTo(u, v)\n      if (ac) c.subTo(a, c)\n      d.subTo(b, d)\n    }\n  }\n  if (v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO\n  while (d.compareTo(m) >= 0) d.subTo(m, d)\n  while (d.signum() < 0) d.addTo(m, d)\n  return d\n}\n\nvar lowprimes = [\n  2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\n  73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151,\n  157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233,\n  239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317,\n  331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,\n  421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503,\n  509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607,\n  613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701,\n  709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811,\n  821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911,\n  919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997\n]\n\nvar lplim = (1 << 26) / lowprimes[lowprimes.length - 1]\n\n// (public) test primality with certainty >= 1-.5^t\nfunction bnIsProbablePrime(t) {\n  var i, x = this.abs()\n  if (x.t == 1 && x[0] <= lowprimes[lowprimes.length - 1]) {\n    for (i = 0; i < lowprimes.length; ++i)\n      if (x[0] == lowprimes[i]) return true\n    return false\n  }\n  if (x.isEven()) return false\n  i = 1\n  while (i < lowprimes.length) {\n    var m = lowprimes[i],\n      j = i + 1\n    while (j < lowprimes.length && m < lplim) m *= lowprimes[j++]\n    m = x.modInt(m)\n    while (i < j) if (m % lowprimes[i++] == 0) return false\n  }\n  return x.millerRabin(t)\n}\n\n// (protected) true if probably prime (HAC 4.24, Miller-Rabin)\nfunction bnpMillerRabin(t) {\n  var n1 = this.subtract(BigInteger.ONE)\n  var k = n1.getLowestSetBit()\n  if (k <= 0) return false\n  var r = n1.shiftRight(k)\n  t = (t + 1) >> 1\n  if (t > lowprimes.length) t = lowprimes.length\n  var a = new BigInteger(null)\n  var j, bases = []\n  for (var i = 0; i < t; ++i) {\n    for (;;) {\n      j = lowprimes[Math.floor(Math.random() * lowprimes.length)]\n      if (bases.indexOf(j) == -1) break\n    }\n    bases.push(j)\n    a.fromInt(j)\n    var y = a.modPow(r, this)\n    if (y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n      var j = 1\n      while (j++ < k && y.compareTo(n1) != 0) {\n        y = y.modPowInt(2, this)\n        if (y.compareTo(BigInteger.ONE) == 0) return false\n      }\n      if (y.compareTo(n1) != 0) return false\n    }\n  }\n  return true\n}\n\n// protected\nproto.chunkSize = bnpChunkSize\nproto.toRadix = bnpToRadix\nproto.fromRadix = bnpFromRadix\nproto.fromNumber = bnpFromNumber\nproto.bitwiseTo = bnpBitwiseTo\nproto.changeBit = bnpChangeBit\nproto.addTo = bnpAddTo\nproto.dMultiply = bnpDMultiply\nproto.dAddOffset = bnpDAddOffset\nproto.multiplyLowerTo = bnpMultiplyLowerTo\nproto.multiplyUpperTo = bnpMultiplyUpperTo\nproto.modInt = bnpModInt\nproto.millerRabin = bnpMillerRabin\n\n// public\nproto.clone = bnClone\nproto.intValue = bnIntValue\nproto.byteValue = bnByteValue\nproto.shortValue = bnShortValue\nproto.signum = bnSigNum\nproto.toByteArray = bnToByteArray\nproto.equals = bnEquals\nproto.min = bnMin\nproto.max = bnMax\nproto.and = bnAnd\nproto.or = bnOr\nproto.xor = bnXor\nproto.andNot = bnAndNot\nproto.not = bnNot\nproto.shiftLeft = bnShiftLeft\nproto.shiftRight = bnShiftRight\nproto.getLowestSetBit = bnGetLowestSetBit\nproto.bitCount = bnBitCount\nproto.testBit = bnTestBit\nproto.setBit = bnSetBit\nproto.clearBit = bnClearBit\nproto.flipBit = bnFlipBit\nproto.add = bnAdd\nproto.subtract = bnSubtract\nproto.multiply = bnMultiply\nproto.divide = bnDivide\nproto.remainder = bnRemainder\nproto.divideAndRemainder = bnDivideAndRemainder\nproto.modPow = bnModPow\nproto.modInverse = bnModInverse\nproto.pow = bnPow\nproto.gcd = bnGCD\nproto.isProbablePrime = bnIsProbablePrime\n\n// JSBN-specific extension\nproto.square = bnSquare\n\n// constants\nBigInteger.ZERO = nbv(0)\nBigInteger.ONE = nbv(1)\nBigInteger.valueOf = nbv\n\nmodule.exports = BigInteger\n","// FIXME: Kind of a weird way to throw exceptions, consider removing\nvar assert = require('assert')\nvar BigInteger = require('./bigi')\n\n/**\n * Turns a byte array into a big integer.\n *\n * This function will interpret a byte array as a big integer in big\n * endian notation.\n */\nBigInteger.fromByteArrayUnsigned = function(byteArray) {\n  // BigInteger expects a DER integer conformant byte array\n  if (byteArray[0] & 0x80) {\n    return new BigInteger([0].concat(byteArray))\n  }\n\n  return new BigInteger(byteArray)\n}\n\n/**\n * Returns a byte array representation of the big integer.\n *\n * This returns the absolute of the contained value in big endian\n * form. A value of zero results in an empty array.\n */\nBigInteger.prototype.toByteArrayUnsigned = function() {\n  var byteArray = this.toByteArray()\n  return byteArray[0] === 0 ? byteArray.slice(1) : byteArray\n}\n\nBigInteger.fromDERInteger = function(byteArray) {\n  return new BigInteger(byteArray)\n}\n\n/*\n * Converts BigInteger to a DER integer representation.\n *\n * The format for this value uses the most significant bit as a sign\n * bit.  If the most significant bit is already set and the integer is\n * positive, a 0x00 is prepended.\n *\n * Examples:\n *\n *      0 =>     0x00\n *      1 =>     0x01\n *     -1 =>     0xff\n *    127 =>     0x7f\n *   -127 =>     0x81\n *    128 =>   0x0080\n *   -128 =>     0x80\n *    255 =>   0x00ff\n *   -255 =>   0xff01\n *  16300 =>   0x3fac\n * -16300 =>   0xc054\n *  62300 => 0x00f35c\n * -62300 => 0xff0ca4\n*/\nBigInteger.prototype.toDERInteger = BigInteger.prototype.toByteArray\n\nBigInteger.fromBuffer = function(buffer) {\n  // BigInteger expects a DER integer conformant byte array\n  if (buffer[0] & 0x80) {\n    var byteArray = Array.prototype.slice.call(buffer)\n\n    return new BigInteger([0].concat(byteArray))\n  }\n\n  return new BigInteger(buffer)\n}\n\nBigInteger.fromHex = function(hex) {\n  if (hex === '') return BigInteger.ZERO\n\n  assert.equal(hex, hex.match(/^[A-Fa-f0-9]+/), 'Invalid hex string')\n  assert.equal(hex.length % 2, 0, 'Incomplete hex')\n  return new BigInteger(hex, 16)\n}\n\nBigInteger.prototype.toBuffer = function(size) {\n  var byteArray = this.toByteArrayUnsigned()\n  var zeros = []\n\n  var padding = size - byteArray.length\n  while (zeros.length < padding) zeros.push(0)\n\n  return new Buffer(zeros.concat(byteArray))\n}\n\nBigInteger.prototype.toHex = function(size) {\n  return this.toBuffer(size).toString('hex')\n}\n","var assert = require('assert')\nvar BigInteger = require('bigi')\n\nvar THREE = BigInteger.valueOf(3)\n\nfunction Point (curve, x, y, z) {\n  assert.notStrictEqual(z, undefined, 'Missing Z coordinate')\n\n  this.curve = curve\n  this.x = x\n  this.y = y\n  this.z = z\n  this._zInv = null\n\n  this.compressed = true\n}\n\nObject.defineProperty(Point.prototype, 'zInv', {\n  get: function () {\n    if (this._zInv === null) {\n      this._zInv = this.z.modInverse(this.curve.p)\n    }\n\n    return this._zInv\n  }\n})\n\nObject.defineProperty(Point.prototype, 'affineX', {\n  get: function () {\n    return this.x.multiply(this.zInv).mod(this.curve.p)\n  }\n})\n\nObject.defineProperty(Point.prototype, 'affineY', {\n  get: function () {\n    return this.y.multiply(this.zInv).mod(this.curve.p)\n  }\n})\n\nPoint.fromAffine = function (curve, x, y) {\n  return new Point(curve, x, y, BigInteger.ONE)\n}\n\nPoint.prototype.equals = function (other) {\n  if (other === this) return true\n  if (this.curve.isInfinity(this)) return this.curve.isInfinity(other)\n  if (this.curve.isInfinity(other)) return this.curve.isInfinity(this)\n\n  // u = Y2 * Z1 - Y1 * Z2\n  var u = other.y.multiply(this.z).subtract(this.y.multiply(other.z)).mod(this.curve.p)\n\n  if (u.signum() !== 0) return false\n\n  // v = X2 * Z1 - X1 * Z2\n  var v = other.x.multiply(this.z).subtract(this.x.multiply(other.z)).mod(this.curve.p)\n\n  return v.signum() === 0\n}\n\nPoint.prototype.negate = function () {\n  var y = this.curve.p.subtract(this.y)\n\n  return new Point(this.curve, this.x, y, this.z)\n}\n\nPoint.prototype.add = function (b) {\n  if (this.curve.isInfinity(this)) return b\n  if (this.curve.isInfinity(b)) return this\n\n  var x1 = this.x\n  var y1 = this.y\n  var x2 = b.x\n  var y2 = b.y\n\n  // u = Y2 * Z1 - Y1 * Z2\n  var u = y2.multiply(this.z).subtract(y1.multiply(b.z)).mod(this.curve.p)\n  // v = X2 * Z1 - X1 * Z2\n  var v = x2.multiply(this.z).subtract(x1.multiply(b.z)).mod(this.curve.p)\n\n  if (v.signum() === 0) {\n    if (u.signum() === 0) {\n      return this.twice() // this == b, so double\n    }\n\n    return this.curve.infinity // this = -b, so infinity\n  }\n\n  var v2 = v.square()\n  var v3 = v2.multiply(v)\n  var x1v2 = x1.multiply(v2)\n  var zu2 = u.square().multiply(this.z)\n\n  // x3 = v * (z2 * (z1 * u^2 - 2 * x1 * v^2) - v^3)\n  var x3 = zu2.subtract(x1v2.shiftLeft(1)).multiply(b.z).subtract(v3).multiply(v).mod(this.curve.p)\n  // y3 = z2 * (3 * x1 * u * v^2 - y1 * v^3 - z1 * u^3) + u * v^3\n  var y3 = x1v2.multiply(THREE).multiply(u).subtract(y1.multiply(v3)).subtract(zu2.multiply(u)).multiply(b.z).add(u.multiply(v3)).mod(this.curve.p)\n  // z3 = v^3 * z1 * z2\n  var z3 = v3.multiply(this.z).multiply(b.z).mod(this.curve.p)\n\n  return new Point(this.curve, x3, y3, z3)\n}\n\nPoint.prototype.twice = function () {\n  if (this.curve.isInfinity(this)) return this\n  if (this.y.signum() === 0) return this.curve.infinity\n\n  var x1 = this.x\n  var y1 = this.y\n\n  var y1z1 = y1.multiply(this.z).mod(this.curve.p)\n  var y1sqz1 = y1z1.multiply(y1).mod(this.curve.p)\n  var a = this.curve.a\n\n  // w = 3 * x1^2 + a * z1^2\n  var w = x1.square().multiply(THREE)\n\n  if (a.signum() !== 0) {\n    w = w.add(this.z.square().multiply(a))\n  }\n\n  w = w.mod(this.curve.p)\n  // x3 = 2 * y1 * z1 * (w^2 - 8 * x1 * y1^2 * z1)\n  var x3 = w.square().subtract(x1.shiftLeft(3).multiply(y1sqz1)).shiftLeft(1).multiply(y1z1).mod(this.curve.p)\n  // y3 = 4 * y1^2 * z1 * (3 * w * x1 - 2 * y1^2 * z1) - w^3\n  var y3 = w.multiply(THREE).multiply(x1).subtract(y1sqz1.shiftLeft(1)).shiftLeft(2).multiply(y1sqz1).subtract(w.pow(3)).mod(this.curve.p)\n  // z3 = 8 * (y1 * z1)^3\n  var z3 = y1z1.pow(3).shiftLeft(3).mod(this.curve.p)\n\n  return new Point(this.curve, x3, y3, z3)\n}\n\n// Simple NAF (Non-Adjacent Form) multiplication algorithm\n// TODO: modularize the multiplication algorithm\nPoint.prototype.multiply = function (k) {\n  if (this.curve.isInfinity(this)) return this\n  if (k.signum() === 0) return this.curve.infinity\n\n  var e = k\n  var h = e.multiply(THREE)\n\n  var neg = this.negate()\n  var R = this\n\n  for (var i = h.bitLength() - 2; i > 0; --i) {\n    var hBit = h.testBit(i)\n    var eBit = e.testBit(i)\n\n    R = R.twice()\n\n    if (hBit !== eBit) {\n      R = R.add(hBit ? this : neg)\n    }\n  }\n\n  return R\n}\n\n// Compute this*j + x*k (simultaneous multiplication)\nPoint.prototype.multiplyTwo = function (j, x, k) {\n  var i = Math.max(j.bitLength(), k.bitLength()) - 1\n  var R = this.curve.infinity\n  var both = this.add(x)\n\n  while (i >= 0) {\n    var jBit = j.testBit(i)\n    var kBit = k.testBit(i)\n\n    R = R.twice()\n\n    if (jBit) {\n      if (kBit) {\n        R = R.add(both)\n      } else {\n        R = R.add(this)\n      }\n    } else if (kBit) {\n      R = R.add(x)\n    }\n    --i\n  }\n\n  return R\n}\n\nPoint.prototype.getEncoded = function (compressed) {\n  if (compressed == null) compressed = this.compressed\n  if (this.curve.isInfinity(this)) return new Buffer('00', 'hex') // Infinity point encoded is simply '00'\n\n  var x = this.affineX\n  var y = this.affineY\n  var byteLength = this.curve.pLength\n  var buffer\n\n  // 0x02/0x03 | X\n  if (compressed) {\n    buffer = new Buffer(1 + byteLength)\n    buffer.writeUInt8(y.isEven() ? 0x02 : 0x03, 0)\n\n  // 0x04 | X | Y\n  } else {\n    buffer = new Buffer(1 + byteLength + byteLength)\n    buffer.writeUInt8(0x04, 0)\n\n    y.toBuffer(byteLength).copy(buffer, 1 + byteLength)\n  }\n\n  x.toBuffer(byteLength).copy(buffer, 1)\n\n  return buffer\n}\n\nPoint.decodeFrom = function (curve, buffer) {\n  var type = buffer.readUInt8(0)\n  var compressed = (type !== 4)\n\n  var byteLength = Math.floor((curve.p.bitLength() + 7) / 8)\n  var x = BigInteger.fromBuffer(buffer.slice(1, 1 + byteLength))\n\n  var Q\n  if (compressed) {\n    assert.equal(buffer.length, byteLength + 1, 'Invalid sequence length')\n    assert(type === 0x02 || type === 0x03, 'Invalid sequence tag')\n\n    var isOdd = (type === 0x03)\n    Q = curve.pointFromX(isOdd, x)\n  } else {\n    assert.equal(buffer.length, 1 + byteLength + byteLength, 'Invalid sequence length')\n\n    var y = BigInteger.fromBuffer(buffer.slice(1 + byteLength))\n    Q = Point.fromAffine(curve, x, y)\n  }\n\n  Q.compressed = compressed\n  return Q\n}\n\nPoint.prototype.toString = function () {\n  if (this.curve.isInfinity(this)) return '(INFINITY)'\n\n  return '(' + this.affineX.toString() + ',' + this.affineY.toString() + ')'\n}\n\nmodule.exports = Point\n","var assert = require('assert')\nvar BigInteger = require('bigi')\n\nvar Point = require('./point')\n\nfunction Curve (p, a, b, Gx, Gy, n, h) {\n  this.p = p\n  this.a = a\n  this.b = b\n  this.G = Point.fromAffine(this, Gx, Gy)\n  this.n = n\n  this.h = h\n\n  this.infinity = new Point(this, null, null, BigInteger.ZERO)\n\n  // result caching\n  this.pOverFour = p.add(BigInteger.ONE).shiftRight(2)\n\n  // determine size of p in bytes\n  this.pLength = Math.floor((this.p.bitLength() + 7) / 8)\n}\n\nCurve.prototype.pointFromX = function (isOdd, x) {\n  var alpha = x.pow(3).add(this.a.multiply(x)).add(this.b).mod(this.p)\n  var beta = alpha.modPow(this.pOverFour, this.p) // XXX: not compatible with all curves\n\n  var y = beta\n  if (beta.isEven() ^ !isOdd) {\n    y = this.p.subtract(y) // -y % p\n  }\n\n  return Point.fromAffine(this, x, y)\n}\n\nCurve.prototype.isInfinity = function (Q) {\n  if (Q === this.infinity) return true\n\n  return Q.z.signum() === 0 && Q.y.signum() !== 0\n}\n\nCurve.prototype.isOnCurve = function (Q) {\n  if (this.isInfinity(Q)) return true\n\n  var x = Q.affineX\n  var y = Q.affineY\n  var a = this.a\n  var b = this.b\n  var p = this.p\n\n  // Check that xQ and yQ are integers in the interval [0, p - 1]\n  if (x.signum() < 0 || x.compareTo(p) >= 0) return false\n  if (y.signum() < 0 || y.compareTo(p) >= 0) return false\n\n  // and check that y^2 = x^3 + ax + b (mod p)\n  var lhs = y.square().mod(p)\n  var rhs = x.pow(3).add(a.multiply(x)).add(b).mod(p)\n  return lhs.equals(rhs)\n}\n\n/**\n * Validate an elliptic curve point.\n *\n * See SEC 1, section 3.2.2.1: Elliptic Curve Public Key Validation Primitive\n */\nCurve.prototype.validate = function (Q) {\n  // Check Q != O\n  assert(!this.isInfinity(Q), 'Point is at infinity')\n  assert(this.isOnCurve(Q), 'Point is not on the curve')\n\n  // Check nQ = O (where Q is a scalar multiple of G)\n  var nQ = Q.multiply(this.n)\n  assert(this.isInfinity(nQ), 'Point is not a scalar multiple of G')\n\n  return true\n}\n\nmodule.exports = Curve\n","var BigInteger = require('bigi')\n\nvar curves = require('./curves.json')\nvar Curve = require('./curve')\n\nfunction getCurveByName (name) {\n  var curve = curves[name]\n  if (!curve) return null\n\n  var p = new BigInteger(curve.p, 16)\n  var a = new BigInteger(curve.a, 16)\n  var b = new BigInteger(curve.b, 16)\n  var n = new BigInteger(curve.n, 16)\n  var h = new BigInteger(curve.h, 16)\n  var Gx = new BigInteger(curve.Gx, 16)\n  var Gy = new BigInteger(curve.Gy, 16)\n\n  return new Curve(p, a, b, Gx, Gy, n, h)\n}\n\nmodule.exports = getCurveByName\n","var Point = require('./point')\nvar Curve = require('./curve')\n\nvar getCurveByName = require('./names')\n\nmodule.exports = {\n  Curve: Curve,\n  Point: Point,\n  getCurveByName: getCurveByName\n}\n","'use strict'\nvar intSize = 4\nvar zeroBuffer = new Buffer(intSize)\nzeroBuffer.fill(0)\n\nvar charSize = 8\nvar hashSize = 16\n\nfunction toArray (buf) {\n  if ((buf.length % intSize) !== 0) {\n    var len = buf.length + (intSize - (buf.length % intSize))\n    buf = Buffer.concat([buf, zeroBuffer], len)\n  }\n\n  var arr = new Array(buf.length >>> 2)\n  for (var i = 0, j = 0; i < buf.length; i += intSize, j++) {\n    arr[j] = buf.readInt32LE(i)\n  }\n\n  return arr\n}\n\nmodule.exports = function hash (buf, fn) {\n  var arr = fn(toArray(buf), buf.length * charSize)\n  buf = new Buffer(hashSize)\n  for (var i = 0; i < arr.length; i++) {\n    buf.writeInt32LE(arr[i], i << 2, true)\n  }\n  return buf\n}\n","'use strict'\n/*\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\nvar makeHash = require('./make-hash')\n\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length\n */\nfunction core_md5 (x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << ((len) % 32)\n  x[(((len + 64) >>> 9) << 4) + 14] = len\n\n  var a = 1732584193\n  var b = -271733879\n  var c = -1732584194\n  var d = 271733878\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a\n    var oldb = b\n    var oldc = c\n    var oldd = d\n\n    a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936)\n    d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586)\n    c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819)\n    b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330)\n    a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897)\n    d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426)\n    c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341)\n    b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983)\n    a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416)\n    d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417)\n    c = md5_ff(c, d, a, b, x[i + 10], 17, -42063)\n    b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162)\n    a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682)\n    d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101)\n    c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290)\n    b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329)\n\n    a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510)\n    d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632)\n    c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713)\n    b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302)\n    a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691)\n    d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083)\n    c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335)\n    b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848)\n    a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438)\n    d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690)\n    c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961)\n    b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501)\n    a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467)\n    d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784)\n    c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473)\n    b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734)\n\n    a = md5_hh(a, b, c, d, x[i + 5], 4, -378558)\n    d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463)\n    c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562)\n    b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556)\n    a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060)\n    d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353)\n    c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632)\n    b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640)\n    a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174)\n    d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222)\n    c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979)\n    b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189)\n    a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487)\n    d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835)\n    c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520)\n    b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651)\n\n    a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844)\n    d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415)\n    c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905)\n    b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055)\n    a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571)\n    d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606)\n    c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523)\n    b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799)\n    a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359)\n    d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744)\n    c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380)\n    b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649)\n    a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070)\n    d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379)\n    c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259)\n    b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551)\n\n    a = safe_add(a, olda)\n    b = safe_add(b, oldb)\n    c = safe_add(c, oldc)\n    d = safe_add(d, oldd)\n  }\n\n  return [a, b, c, d]\n}\n\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\nfunction md5_cmn (q, a, b, x, s, t) {\n  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b)\n}\n\nfunction md5_ff (a, b, c, d, x, s, t) {\n  return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t)\n}\n\nfunction md5_gg (a, b, c, d, x, s, t) {\n  return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t)\n}\n\nfunction md5_hh (a, b, c, d, x, s, t) {\n  return md5_cmn(b ^ c ^ d, a, b, x, s, t)\n}\n\nfunction md5_ii (a, b, c, d, x, s, t) {\n  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t)\n}\n\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\nfunction safe_add (x, y) {\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF)\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16)\n  return (msw << 16) | (lsw & 0xFFFF)\n}\n\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\nfunction bit_rol (num, cnt) {\n  return (num << cnt) | (num >>> (32 - cnt))\n}\n\nmodule.exports = function md5 (buf) {\n  return makeHash(buf, core_md5)\n}\n","'use strict'\nvar Buffer = require('buffer').Buffer\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\n\nvar ARRAY16 = new Array(16)\n\nvar zl = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]\n\nvar zr = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]\n\nvar sl = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]\n\nvar sr = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]\n\nvar hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]\nvar hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]\n\nfunction RIPEMD160 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n}\n\ninherits(RIPEMD160, HashBase)\n\nRIPEMD160.prototype._update = function () {\n  var words = ARRAY16\n  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)\n\n  var al = this._a | 0\n  var bl = this._b | 0\n  var cl = this._c | 0\n  var dl = this._d | 0\n  var el = this._e | 0\n\n  var ar = this._a | 0\n  var br = this._b | 0\n  var cr = this._c | 0\n  var dr = this._d | 0\n  var er = this._e | 0\n\n  // computation\n  for (var i = 0; i < 80; i += 1) {\n    var tl\n    var tr\n    if (i < 16) {\n      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])\n      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])\n    } else if (i < 32) {\n      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])\n      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])\n    } else if (i < 48) {\n      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])\n      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])\n    } else if (i < 64) {\n      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])\n      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])\n    } else { // if (i<80) {\n      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])\n      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])\n    }\n\n    al = el\n    el = dl\n    dl = rotl(cl, 10)\n    cl = bl\n    bl = tl\n\n    ar = er\n    er = dr\n    dr = rotl(cr, 10)\n    cr = br\n    br = tr\n  }\n\n  // update state\n  var t = (this._b + cl + dr) | 0\n  this._b = (this._c + dl + er) | 0\n  this._c = (this._d + el + ar) | 0\n  this._d = (this._e + al + br) | 0\n  this._e = (this._a + bl + cr) | 0\n  this._a = t\n}\n\nRIPEMD160.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  buffer.writeInt32LE(this._e, 16)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fn1 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn2 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn3 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn4 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn5 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0\n}\n\nmodule.exports = RIPEMD160\n","var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Sha256 = require('./sha256')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8\n  this._b = 0x367cd507\n  this._c = 0x3070dd17\n  this._d = 0xf70e5939\n  this._e = 0xffc00b31\n  this._f = 0x68581511\n  this._g = 0x64f98fa7\n  this._h = 0xbefa4fa4\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n","var inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._ah = 0x6a09e667\n  this._bh = 0xbb67ae85\n  this._ch = 0x3c6ef372\n  this._dh = 0xa54ff53a\n  this._eh = 0x510e527f\n  this._fh = 0x9b05688c\n  this._gh = 0x1f83d9ab\n  this._hh = 0x5be0cd19\n\n  this._al = 0xf3bcc908\n  this._bl = 0x84caa73b\n  this._cl = 0xfe94f82b\n  this._dl = 0x5f1d36f1\n  this._el = 0xade682d1\n  this._fl = 0x2b3e6c1f\n  this._gl = 0xfb41bd6b\n  this._hl = 0x137e2179\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nfunction getCarry (a, b) {\n  return (a >>> 0) < (b >>> 0) ? 1 : 0\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var ah = this._ah | 0\n  var bh = this._bh | 0\n  var ch = this._ch | 0\n  var dh = this._dh | 0\n  var eh = this._eh | 0\n  var fh = this._fh | 0\n  var gh = this._gh | 0\n  var hh = this._hh | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  for (var i = 0; i < 32; i += 2) {\n    W[i] = M.readInt32BE(i * 4)\n    W[i + 1] = M.readInt32BE(i * 4 + 4)\n  }\n  for (; i < 160; i += 2) {\n    var xh = W[i - 15 * 2]\n    var xl = W[i - 15 * 2 + 1]\n    var gamma0 = Gamma0(xh, xl)\n    var gamma0l = Gamma0l(xl, xh)\n\n    xh = W[i - 2 * 2]\n    xl = W[i - 2 * 2 + 1]\n    var gamma1 = Gamma1(xh, xl)\n    var gamma1l = Gamma1l(xl, xh)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7h = W[i - 7 * 2]\n    var Wi7l = W[i - 7 * 2 + 1]\n\n    var Wi16h = W[i - 16 * 2]\n    var Wi16l = W[i - 16 * 2 + 1]\n\n    var Wil = (gamma0l + Wi7l) | 0\n    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0\n    Wil = (Wil + gamma1l) | 0\n    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0\n    Wil = (Wil + Wi16l) | 0\n    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0\n\n    W[i] = Wih\n    W[i + 1] = Wil\n  }\n\n  for (var j = 0; j < 160; j += 2) {\n    Wih = W[j]\n    Wil = W[j + 1]\n\n    var majh = maj(ah, bh, ch)\n    var majl = maj(al, bl, cl)\n\n    var sigma0h = sigma0(ah, al)\n    var sigma0l = sigma0(al, ah)\n    var sigma1h = sigma1(eh, el)\n    var sigma1l = sigma1(el, eh)\n\n    // t1 = h + sigma1 + ch + K[j] + W[j]\n    var Kih = K[j]\n    var Kil = K[j + 1]\n\n    var chh = Ch(eh, fh, gh)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = (hl + sigma1l) | 0\n    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0\n    t1l = (t1l + chl) | 0\n    t1h = (t1h + chh + getCarry(t1l, chl)) | 0\n    t1l = (t1l + Kil) | 0\n    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0\n    t1l = (t1l + Wil) | 0\n    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0\n\n    // t2 = sigma0 + maj\n    var t2l = (sigma0l + majl) | 0\n    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0\n\n    hh = gh\n    hl = gl\n    gh = fh\n    gl = fl\n    fh = eh\n    fl = el\n    el = (dl + t1l) | 0\n    eh = (dh + t1h + getCarry(el, dl)) | 0\n    dh = ch\n    dl = cl\n    ch = bh\n    cl = bl\n    bh = ah\n    bl = al\n    al = (t1l + t2l) | 0\n    ah = (t1h + t2h + getCarry(al, t1l)) | 0\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0\n  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0\n  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0\n  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0\n  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0\n  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0\n  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0\n  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n  writeInt64BE(this._gh, this._gl, 48)\n  writeInt64BE(this._hh, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n","var inherits = require('inherits')\nvar SHA512 = require('./sha512')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._ah = 0xcbbb9d5d\n  this._bh = 0x629a292a\n  this._ch = 0x9159015a\n  this._dh = 0x152fecd8\n  this._eh = 0x67332667\n  this._fh = 0x8eb44a87\n  this._gh = 0xdb0c2e0d\n  this._hh = 0x47b5481d\n\n  this._al = 0xc1059ed8\n  this._bl = 0x367cd507\n  this._cl = 0x3070dd17\n  this._dl = 0xf70e5939\n  this._el = 0xffc00b31\n  this._fl = 0x68581511\n  this._gl = 0x64f98fa7\n  this._hl = 0xbefa4fa4\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n","var exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')\n\n  return new Algorithm()\n}\n\nexports.sha = require('./sha')\nexports.sha1 = require('./sha1')\nexports.sha224 = require('./sha224')\nexports.sha256 = require('./sha256')\nexports.sha384 = require('./sha384')\nexports.sha512 = require('./sha512')\n","'use strict'\nvar inherits = require('inherits')\nvar md5 = require('./md5')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\n\nvar Base = require('cipher-base')\n\nfunction HashNoConstructor (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n  this.buffers = []\n}\n\ninherits(HashNoConstructor, Base)\n\nHashNoConstructor.prototype._update = function (data) {\n  this.buffers.push(data)\n}\n\nHashNoConstructor.prototype._final = function () {\n  var buf = Buffer.concat(this.buffers)\n  var r = this._hash(buf)\n  this.buffers = null\n\n  return r\n}\n\nfunction Hash (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === 'md5') return new HashNoConstructor(md5)\n  if (alg === 'rmd160' || alg === 'ripemd160') return new Hash(new RIPEMD160())\n\n  return new Hash(sha(alg))\n}\n","'use strict'\nvar inherits = require('inherits')\nvar Buffer = require('safe-buffer').Buffer\n\nvar Base = require('cipher-base')\n\nvar ZEROS = Buffer.alloc(128)\nvar blocksize = 64\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  this._alg = alg\n  this._key = key\n\n  if (key.length > blocksize) {\n    key = alg(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  this._hash = [ipad]\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.push(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._alg(Buffer.concat(this._hash))\n  return this._alg(Buffer.concat([this._opad, h]))\n}\nmodule.exports = Hmac\n","'use strict'\nvar inherits = require('inherits')\nvar Legacy = require('./legacy')\nvar Base = require('cipher-base')\nvar Buffer = require('safe-buffer').Buffer\nvar md5 = require('create-hash/md5')\nvar RIPEMD160 = require('ripemd160')\n\nvar sha = require('sha.js')\n\nvar ZEROS = Buffer.alloc(128)\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  this._alg = alg\n  this._key = key\n  if (key.length > blocksize) {\n    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n    key = hash.update(key).digest()\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n  this._hash.update(ipad)\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._hash.digest()\n  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)\n  return hash.update(this._opad).update(h).digest()\n}\n\nmodule.exports = function createHmac (alg, key) {\n  alg = alg.toLowerCase()\n  if (alg === 'rmd160' || alg === 'ripemd160') {\n    return new Hmac('rmd160', key)\n  }\n  if (alg === 'md5') {\n    return new Legacy(md5, key)\n  }\n  return new Hmac(alg, key)\n}\n","\"use strict\";\n\nvar createHash = require('create-hash');\n\nvar createHmac = require('create-hmac');\n/** @namespace hash */\n\n/** @arg {string|Buffer} data\n    @arg {string} [resultEncoding = null] - 'hex', 'binary' or 'base64'\n    @return {string|Buffer} - Buffer when resultEncoding is null, or string\n*/\n\n\nfunction sha1(data, resultEncoding) {\n  return createHash('sha1').update(data).digest(resultEncoding);\n}\n/** @arg {string|Buffer} data\n    @arg {string} [resultEncoding = null] - 'hex', 'binary' or 'base64'\n    @return {string|Buffer} - Buffer when resultEncoding is null, or string\n*/\n\n\nfunction sha256(data, resultEncoding) {\n  return createHash('sha256').update(data).digest(resultEncoding);\n}\n/** @arg {string|Buffer} data\n    @arg {string} [resultEncoding = null] - 'hex', 'binary' or 'base64'\n    @return {string|Buffer} - Buffer when resultEncoding is null, or string\n*/\n\n\nfunction sha512(data, resultEncoding) {\n  return createHash('sha512').update(data).digest(resultEncoding);\n}\n\nfunction HmacSHA256(buffer, secret) {\n  return createHmac('sha256', secret).update(buffer).digest();\n}\n\nfunction ripemd160(data) {\n  try {\n    return createHash('rmd160').update(data).digest();\n  } catch (e) {\n    return createHash('ripemd160').update(data).digest();\n  }\n} // function hash160(buffer) {\n//   return ripemd160(sha256(buffer))\n// }\n//\n// function hash256(buffer) {\n//   return sha256(sha256(buffer))\n// }\n//\n// function HmacSHA512(buffer, secret) {\n//   return crypto.createHmac('sha512', secret).update(buffer).digest()\n// }\n\n\nmodule.exports = {\n  sha1: sha1,\n  sha256: sha256,\n  sha512: sha512,\n  HmacSHA256: HmacSHA256,\n  ripemd160: ripemd160 // hash160: hash160,\n  // hash256: hash256,\n  // HmacSHA512: HmacSHA512\n\n};","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar base58 = require('bs58');\n\nvar assert = require('assert');\n\nvar randomBytes = require('randombytes');\n\nvar hash = require('./hash');\n\nmodule.exports = {\n  random32ByteBuffer: random32ByteBuffer,\n  addEntropy: addEntropy,\n  cpuEntropy: cpuEntropy,\n  entropyCount: function entropyCount() {\n    return _entropyCount;\n  },\n  checkDecode: checkDecode,\n  checkEncode: checkEncode\n};\nvar entropyPos = 0,\n    _entropyCount = 0;\nvar externalEntropyArray = randomBytes(101);\n/**\n    Additional forms of entropy are used.  A week random number generator can run out of entropy.  This should ensure even the worst random number implementation will be reasonably safe.\n\n    @arg {number} [cpuEntropyBits = 0] generate entropy on the fly.  This is\n    not required, entropy can be added in advanced via addEntropy or initialize().\n\n    @arg {boolean} [safe = true] false for testing, otherwise this will be\n    true to ensure initialize() was called.\n\n    @return a random buffer obtained from the secure random number generator.  Additional entropy is used.\n*/\n\nfunction random32ByteBuffer() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$cpuEntropyBits = _ref.cpuEntropyBits,\n      cpuEntropyBits = _ref$cpuEntropyBits === void 0 ? 0 : _ref$cpuEntropyBits,\n      _ref$safe = _ref.safe,\n      safe = _ref$safe === void 0 ? true : _ref$safe;\n\n  assert.equal((0, _typeof2[\"default\"])(cpuEntropyBits), 'number', 'cpuEntropyBits');\n  assert.equal((0, _typeof2[\"default\"])(safe), 'boolean', 'boolean');\n\n  if (safe) {\n    assert(_entropyCount >= 128, 'Call initialize() to add entropy');\n  } // if(entropyCount > 0) {\n  //     console.log(`Additional private key entropy: ${entropyCount} events`)\n  // }\n\n\n  var hash_array = [];\n  hash_array.push(randomBytes(32));\n  hash_array.push(Buffer.from(cpuEntropy(cpuEntropyBits)));\n  hash_array.push(externalEntropyArray);\n  hash_array.push(browserEntropy());\n  return hash.sha256(Buffer.concat(hash_array));\n}\n/**\n    Adds entropy.  This may be called many times while the amount of data saved\n    is accumulatively reduced to 101 integers.  Data is retained in RAM for the\n    life of this module.\n\n    @example React <code>\n    componentDidMount() {\n        this.refs.MyComponent.addEventListener(\"mousemove\", this.onEntropyEvent, {capture: false, passive: true})\n    }\n    componentWillUnmount() {\n        this.refs.MyComponent.removeEventListener(\"mousemove\", this.onEntropyEvent);\n    }\n    onEntropyEvent = (e) => {\n        if(e.type === 'mousemove')\n            key_utils.addEntropy(e.pageX, e.pageY, e.screenX, e.screenY)\n        else\n            console.log('onEntropyEvent Unknown', e.type, e)\n    }\n    </code>\n*/\n\n\nfunction addEntropy() {\n  assert.equal(externalEntropyArray.length, 101, 'externalEntropyArray');\n\n  for (var _len = arguments.length, ints = new Array(_len), _key = 0; _key < _len; _key++) {\n    ints[_key] = arguments[_key];\n  }\n\n  _entropyCount += ints.length;\n\n  for (var _i = 0, _ints = ints; _i < _ints.length; _i++) {\n    var i = _ints[_i];\n    var pos = entropyPos++ % 101;\n    var i2 = externalEntropyArray[pos] += i;\n    if (i2 > 9007199254740991) externalEntropyArray[pos] = 0;\n  }\n}\n/**\n    This runs in just under 1 second and ensures a minimum of cpuEntropyBits\n    bits of entropy are gathered.\n\n    Based on more-entropy. @see https://github.com/keybase/more-entropy/blob/master/src/generator.iced\n\n    @arg {number} [cpuEntropyBits = 128]\n    @return {array} counts gathered by measuring variations in the CPU speed during floating point operations.\n*/\n\n\nfunction cpuEntropy() {\n  var cpuEntropyBits = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 128;\n  var collected = [];\n  var lastCount = null;\n  var lowEntropySamples = 0;\n\n  while (collected.length < cpuEntropyBits) {\n    var count = floatingPointCount();\n\n    if (lastCount != null) {\n      var delta = count - lastCount;\n\n      if (Math.abs(delta) < 1) {\n        lowEntropySamples++;\n        continue;\n      } // how many bits of entropy were in this sample\n\n\n      var bits = Math.floor(log2(Math.abs(delta)) + 1);\n\n      if (bits < 4) {\n        if (bits < 2) {\n          lowEntropySamples++;\n        }\n\n        continue;\n      }\n\n      collected.push(delta);\n    }\n\n    lastCount = count;\n  }\n\n  if (lowEntropySamples > 10) {\n    var pct = Number(lowEntropySamples / cpuEntropyBits * 100).toFixed(2); // Is this algorithm getting inefficient?\n\n    console.warn(\"WARN: \".concat(pct, \"% low CPU entropy re-sampled\"));\n  }\n\n  return collected;\n}\n/**\n    @private\n    Count while performing floating point operations during a fixed time\n    (7 ms for example).  Using a fixed time makes this algorithm\n    predictable in runtime.\n*/\n\n\nfunction floatingPointCount() {\n  var workMinMs = 7;\n  var d = Date.now();\n  var i = 0,\n      x = 0;\n\n  while (Date.now() < d + workMinMs + 1) {\n    x = Math.sin(Math.sqrt(Math.log(++i + x)));\n  }\n\n  return i;\n}\n\nvar log2 = function log2(x) {\n  return Math.log(x) / Math.LN2;\n};\n/**\n    @private\n    Attempt to gather and hash information from the browser's window, history, and supported mime types.  For non-browser environments this simply includes secure random data.  In any event, the information is re-hashed in a loop for 25 milliseconds seconds.\n\n    @return {Buffer} 32 bytes\n*/\n\n\nfunction browserEntropy() {\n  var entropyStr = Array(randomBytes(101)).join();\n\n  try {\n    entropyStr += new Date().toString() + \" \" + window.screen.height + \" \" + window.screen.width + \" \" + window.screen.colorDepth + \" \" + \" \" + window.screen.availHeight + \" \" + window.screen.availWidth + \" \" + window.screen.pixelDepth + navigator.language + \" \" + window.location + \" \" + window.history.length;\n\n    for (var i = 0, mimeType; i < navigator.mimeTypes.length; i++) {\n      mimeType = navigator.mimeTypes[i];\n      entropyStr += mimeType.description + \" \" + mimeType.type + \" \" + mimeType.suffixes + \" \";\n    }\n  } catch (error) {\n    //nodejs:ReferenceError: window is not defined\n    entropyStr += hash.sha256(new Date().toString());\n  }\n\n  var b = new Buffer(entropyStr);\n  entropyStr += b.toString('binary') + \" \" + new Date().toString();\n  var entropy = entropyStr;\n  var start_t = Date.now();\n\n  while (Date.now() - start_t < 25) {\n    entropy = hash.sha256(entropy);\n  }\n\n  return entropy;\n}\n/**\n  @arg {Buffer} keyBuffer data\n  @arg {string} keyType = sha256x2, K1, etc\n  @return {string} checksum encoded base58 string\n*/\n\n\nfunction checkEncode(keyBuffer) {\n  var keyType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  assert(Buffer.isBuffer(keyBuffer), 'expecting keyBuffer<Buffer>');\n\n  if (keyType === 'sha256x2') {\n    // legacy\n    var checksum = hash.sha256(hash.sha256(keyBuffer)).slice(0, 4);\n    return base58.encode(Buffer.concat([keyBuffer, checksum]));\n  } else {\n    var check = [keyBuffer];\n\n    if (keyType) {\n      check.push(Buffer.from(keyType));\n    }\n\n    var _checksum = hash.ripemd160(Buffer.concat(check)).slice(0, 4);\n\n    return base58.encode(Buffer.concat([keyBuffer, _checksum]));\n  }\n}\n/**\n  @arg {Buffer} keyString data\n  @arg {string} keyType = sha256x2, K1, etc\n  @return {string} checksum encoded base58 string\n*/\n\n\nfunction checkDecode(keyString) {\n  var keyType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  assert(keyString != null, 'private key expected');\n  var buffer = new Buffer(base58.decode(keyString));\n  var checksum = buffer.slice(-4);\n  var key = buffer.slice(0, -4);\n  var newCheck;\n\n  if (keyType === 'sha256x2') {\n    // legacy\n    newCheck = hash.sha256(hash.sha256(key)).slice(0, 4); // WIF (legacy)\n  } else {\n    var check = [key];\n\n    if (keyType) {\n      check.push(Buffer.from(keyType));\n    }\n\n    newCheck = hash.ripemd160(Buffer.concat(check)).slice(0, 4); //PVT\n  }\n\n  if (checksum.toString('hex') !== newCheck.toString('hex')) {\n    throw new Error('Invalid checksum, ' + \"\".concat(checksum.toString('hex'), \" != \").concat(newCheck.toString('hex')));\n  }\n\n  return key;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar assert = require('assert');\n\nvar ecurve = require('ecurve');\n\nvar BigInteger = require('bigi');\n\nvar secp256k1 = ecurve.getCurveByName('secp256k1');\n\nvar hash = require('./hash');\n\nvar keyUtils = require('./key_utils');\n\nvar G = secp256k1.G;\nvar n = secp256k1.n;\nmodule.exports = PublicKey;\n/**\n  @param {string|Buffer|PublicKey|ecurve.Point} public key\n  @param {string} [pubkey_prefix = 'EOS']\n*/\n\nfunction PublicKey(Q) {\n  var pubkey_prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'EOS';\n\n  if (typeof Q === 'string') {\n    var publicKey = PublicKey.fromString(Q, pubkey_prefix);\n    assert(publicKey != null, 'Invalid public key');\n    return publicKey;\n  } else if (Buffer.isBuffer(Q)) {\n    return PublicKey.fromBuffer(Q);\n  } else if ((0, _typeof2[\"default\"])(Q) === 'object' && Q.Q) {\n    return PublicKey(Q.Q);\n  }\n\n  assert.equal((0, _typeof2[\"default\"])(Q), 'object', 'Invalid public key');\n  assert.equal((0, _typeof2[\"default\"])(Q.compressed), 'boolean', 'Invalid public key');\n\n  function toBuffer() {\n    var compressed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Q.compressed;\n    return Q.getEncoded(compressed);\n  }\n\n  var pubdata; // cache\n  // /**\n  //     @todo secp224r1\n  //     @return {string} PUB_K1_base58pubkey..\n  // */\n  // function toString() {\n  //     if(pubdata) {\n  //         return pubdata\n  //     }\n  //     pubdata = `PUB_K1_` + keyUtils.checkEncode(toBuffer(), 'K1')\n  //     return pubdata;\n  // }\n\n  /** @todo rename to toStringLegacy\n   * @arg {string} [pubkey_prefix = 'EOS'] - public key prefix\n  */\n\n  function toString() {\n    var pubkey_prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'EOS';\n    return pubkey_prefix + keyUtils.checkEncode(toBuffer());\n  }\n\n  function toUncompressed() {\n    var buf = Q.getEncoded(false);\n    var point = ecurve.Point.decodeFrom(secp256k1, buf);\n    return PublicKey.fromPoint(point);\n  }\n  /** @deprecated */\n\n\n  function child(offset) {\n    console.error('Deprecated warning: PublicKey.child');\n    assert(Buffer.isBuffer(offset), \"Buffer required: offset\");\n    assert.equal(offset.length, 32, \"offset length\");\n    offset = Buffer.concat([toBuffer(), offset]);\n    offset = hash.sha256(offset);\n    var c = BigInteger.fromBuffer(offset);\n    if (c.compareTo(n) >= 0) throw new Error(\"Child offset went out of bounds, try again\");\n    var cG = G.multiply(c);\n    var Qprime = Q.add(cG);\n    if (secp256k1.isInfinity(Qprime)) throw new Error(\"Child offset derived to an invalid key, try again\");\n    return PublicKey.fromPoint(Qprime);\n  }\n\n  function toHex() {\n    return toBuffer().toString('hex');\n  }\n\n  return {\n    Q: Q,\n    toString: toString,\n    // toStringLegacy,\n    toUncompressed: toUncompressed,\n    toBuffer: toBuffer,\n    child: child,\n    toHex: toHex\n  };\n}\n/**\n  @param {string|Buffer|PublicKey|ecurve.Point} pubkey - public key\n  @param {string} [pubkey_prefix = 'EOS']\n*/\n\n\nPublicKey.isValid = function (pubkey) {\n  var pubkey_prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'EOS';\n\n  try {\n    PublicKey(pubkey, pubkey_prefix);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nPublicKey.fromBinary = function (bin) {\n  return PublicKey.fromBuffer(new Buffer(bin, 'binary'));\n};\n\nPublicKey.fromBuffer = function (buffer) {\n  return PublicKey(ecurve.Point.decodeFrom(secp256k1, buffer));\n};\n\nPublicKey.fromPoint = function (point) {\n  return PublicKey(point);\n};\n/**\n    @arg {string} public_key - like PUB_K1_base58pubkey..\n    @arg {string} [pubkey_prefix = 'EOS'] - public key prefix\n    @return PublicKey or `null` (invalid)\n*/\n\n\nPublicKey.fromString = function (public_key) {\n  var pubkey_prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'EOS';\n\n  try {\n    return PublicKey.fromStringOrThrow(public_key, pubkey_prefix);\n  } catch (e) {\n    return null;\n  }\n};\n/**\n    @arg {string} public_key - like PUB_K1_base58pubkey..\n    @arg {string} [pubkey_prefix = 'EOS'] - public key prefix\n\n    @throws {Error} if public key is invalid\n\n    @return PublicKey\n*/\n\n\nPublicKey.fromStringOrThrow = function (public_key) {\n  var pubkey_prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'EOS';\n  assert.equal((0, _typeof2[\"default\"])(public_key), 'string', 'public_key');\n  var match = public_key.match(/^PUB_([A-Za-z0-9]+)_([A-Za-z0-9]+)$/);\n\n  if (match === null) {\n    // legacy\n    var prefix_match = new RegExp(\"^\" + pubkey_prefix);\n\n    if (prefix_match.test(public_key)) {\n      public_key = public_key.substring(pubkey_prefix.length);\n    }\n\n    return PublicKey.fromBuffer(keyUtils.checkDecode(public_key));\n  }\n\n  assert(match.length === 3, 'Expecting public key like: PUB_K1_base58pubkey..');\n\n  var _match = (0, _slicedToArray2[\"default\"])(match, 3),\n      keyType = _match[1],\n      keyString = _match[2];\n\n  assert.equal(keyType, 'K1', 'K1 private key expected');\n  return PublicKey.fromBuffer(keyUtils.checkDecode(keyString, keyType));\n};\n\nPublicKey.fromHex = function (hex) {\n  return PublicKey.fromBuffer(new Buffer(hex, 'hex'));\n};\n\nPublicKey.fromStringHex = function (hex) {\n  return PublicKey.fromString(new Buffer(hex, 'hex'));\n};","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar ecurve = require('ecurve');\n\nvar Point = ecurve.Point;\nvar secp256k1 = ecurve.getCurveByName('secp256k1');\n\nvar BigInteger = require('bigi');\n\nvar assert = require('assert');\n\nvar hash = require('./hash');\n\nvar PublicKey = require('./key_public');\n\nvar keyUtils = require('./key_utils');\n\nvar createHash = require('create-hash');\n\nvar promiseAsync = require('./promise-async');\n\nvar G = secp256k1.G;\nvar n = secp256k1.n;\nmodule.exports = PrivateKey;\n/**\n  @typedef {string} wif - https://en.bitcoin.it/wiki/Wallet_import_format\n  @typedef {string} pubkey - EOSKey..\n  @typedef {ecurve.Point} Point\n*/\n\n/**\n  @param {BigInteger} d\n*/\n\nfunction PrivateKey(d) {\n  if (typeof d === 'string') {\n    return PrivateKey.fromString(d);\n  } else if (Buffer.isBuffer(d)) {\n    return PrivateKey.fromBuffer(d);\n  } else if ((0, _typeof2[\"default\"])(d) === 'object' && BigInteger.isBigInteger(d.d)) {\n    return PrivateKey(d.d);\n  }\n\n  if (!BigInteger.isBigInteger(d)) {\n    throw new TypeError('Invalid private key');\n  }\n  /** @return {string} private key like PVT_K1_base58privatekey.. */\n\n\n  function toString() {\n    // todo, use PVT_K1_\n    // return 'PVT_K1_' + keyUtils.checkEncode(toBuffer(), 'K1')\n    return toWif();\n  }\n  /**\n      @return  {wif}\n  */\n\n\n  function toWif() {\n    var private_key = toBuffer(); // checksum includes the version\n\n    private_key = Buffer.concat([new Buffer([0x80]), private_key]);\n    return keyUtils.checkEncode(private_key, 'sha256x2');\n  }\n\n  var public_key;\n  /**\n      @return {Point}\n  */\n\n  function toPublic() {\n    if (public_key) {\n      // cache\n      // S L O W in the browser\n      return public_key;\n    }\n\n    var Q = secp256k1.G.multiply(d);\n    return public_key = PublicKey.fromPoint(Q);\n  }\n\n  function toBuffer() {\n    return d.toBuffer(32);\n  }\n  /**\n    ECIES\n    @arg {string|Object} pubkey wif, PublicKey object\n    @return {Buffer} 64 byte shared secret\n  */\n\n\n  function getSharedSecret(public_key) {\n    public_key = PublicKey(public_key);\n    var KB = public_key.toUncompressed().toBuffer();\n    var KBP = Point.fromAffine(secp256k1, BigInteger.fromBuffer(KB.slice(1, 33)), // x\n    BigInteger.fromBuffer(KB.slice(33, 65)) // y\n    );\n    var r = toBuffer();\n    var P = KBP.multiply(BigInteger.fromBuffer(r));\n    var S = P.affineX.toBuffer({\n      size: 32\n    }); // SHA512 used in ECIES\n\n    return hash.sha512(S);\n  } // /** ECIES TODO unit test\n  //   @arg {string|Object} pubkey wif, PublicKey object\n  //   @return {Buffer} 64 byte shared secret\n  // */\n  // function getSharedSecret(public_key) {\n  //     public_key = PublicKey(public_key).toUncompressed()\n  //     var P = public_key.Q.multiply( d );\n  //     var S = P.affineX.toBuffer({size: 32});\n  //     // ECIES, adds an extra sha512\n  //     return hash.sha512(S);\n  // }\n\n  /**\n    @arg {string} name - child key name.\n    @return {PrivateKey}\n     @example activePrivate = masterPrivate.getChildKey('owner').getChildKey('active')\n    @example activePrivate.getChildKey('mycontract').getChildKey('myperm')\n  */\n\n\n  function getChildKey(name) {\n    // console.error('WARNING: getChildKey untested against eosd'); // no eosd impl yet\n    var index = createHash('sha256').update(toBuffer()).update(name).digest();\n    return PrivateKey(index);\n  }\n\n  function toHex() {\n    return toBuffer().toString('hex');\n  }\n\n  return {\n    d: d,\n    toWif: toWif,\n    toString: toString,\n    toPublic: toPublic,\n    toBuffer: toBuffer,\n    getSharedSecret: getSharedSecret,\n    getChildKey: getChildKey\n  };\n}\n/** @private */\n\n\nfunction parseKey(privateStr) {\n  assert.equal((0, _typeof2[\"default\"])(privateStr), 'string', 'privateStr');\n  var match = privateStr.match(/^PVT_([A-Za-z0-9]+)_([A-Za-z0-9]+)$/);\n\n  if (match === null) {\n    // legacy WIF - checksum includes the version\n    var versionKey = keyUtils.checkDecode(privateStr, 'sha256x2');\n    var version = versionKey.readUInt8(0);\n    assert.equal(0x80, version, \"Expected version \".concat(0x80, \", instead got \", version));\n\n    var _privateKey = PrivateKey.fromBuffer(versionKey.slice(1));\n\n    var _keyType = 'K1';\n    var format = 'WIF';\n    return {\n      privateKey: _privateKey,\n      format: format,\n      keyType: _keyType\n    };\n  }\n\n  assert(match.length === 3, 'Expecting private key like: PVT_K1_base58privateKey..');\n\n  var _match = (0, _slicedToArray2[\"default\"])(match, 3),\n      keyType = _match[1],\n      keyString = _match[2];\n\n  assert.equal(keyType, 'K1', 'K1 private key expected');\n  var privateKey = PrivateKey.fromBuffer(keyUtils.checkDecode(keyString, keyType));\n  return {\n    privateKey: privateKey,\n    format: 'PVT',\n    keyType: keyType\n  };\n}\n\nPrivateKey.fromHex = function (hex) {\n  return PrivateKey.fromBuffer(new Buffer(hex, 'hex'));\n};\n\nPrivateKey.fromBuffer = function (buf) {\n  if (!Buffer.isBuffer(buf)) {\n    throw new Error(\"Expecting parameter to be a Buffer type\");\n  }\n\n  if (buf.length === 33 && buf[32] === 1) {\n    // remove compression flag\n    buf = buf.slice(0, -1);\n  }\n\n  if (32 !== buf.length) {\n    throw new Error(\"Expecting 32 bytes, instead got \".concat(buf.length));\n  }\n\n  return PrivateKey(BigInteger.fromBuffer(buf));\n};\n/**\n    @arg {string} seed - any length string.  This is private, the same seed\n    produces the same private key every time.\n\n    @return {PrivateKey}\n*/\n\n\nPrivateKey.fromSeed = function (seed) {\n  // generate_private_key\n  if (!(typeof seed === 'string')) {\n    throw new Error('seed must be of type string');\n  }\n\n  return PrivateKey.fromBuffer(hash.sha256(seed));\n};\n/**\n  @arg {wif} key\n  @return {boolean} true if key is in the Wallet Import Format\n*/\n\n\nPrivateKey.isWif = function (text) {\n  try {\n    assert(parseKey(text).format === 'WIF');\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n  @arg {wif|Buffer|PrivateKey} key\n  @return {boolean} true if key is convertable to a private key object.\n*/\n\n\nPrivateKey.isValid = function (key) {\n  try {\n    PrivateKey(key);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n/** @deprecated */\n\n\nPrivateKey.fromWif = function (str) {\n  console.log('PrivateKey.fromWif is deprecated, please use PrivateKey.fromString');\n  return PrivateKey.fromString(str);\n};\n/**\n    @throws {AssertError|Error} parsing key\n    @arg {string} privateStr Eosio or Wallet Import Format (wif) -- a secret\n*/\n\n\nPrivateKey.fromString = function (privateStr) {\n  return parseKey(privateStr).privateKey;\n};\n/**\n  Create a new random private key.\n\n  Call initialize() first to run some self-checking code and gather some CPU\n  entropy.\n\n  @arg {number} [cpuEntropyBits = 0] - additional CPU entropy, this already\n  happens once so it should not be needed again.\n\n  @return {Promise<PrivateKey>} - random private key\n*/\n\n\nPrivateKey.randomKey = function () {\n  var cpuEntropyBits = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return PrivateKey.initialize().then(function () {\n    return PrivateKey.fromBuffer(keyUtils.random32ByteBuffer({\n      cpuEntropyBits: cpuEntropyBits\n    }));\n  });\n};\n/**\n  @return {Promise<PrivateKey>} for testing, does not require initialize().\n*/\n\n\nPrivateKey.unsafeRandomKey = function () {\n  return Promise.resolve(PrivateKey.fromBuffer(keyUtils.random32ByteBuffer({\n    safe: false\n  })));\n};\n\nvar initialized = false,\n    unitTested = false;\n/**\n  Run self-checking code and gather CPU entropy.\n\n  Initialization happens once even if called multiple times.\n\n  @return {Promise}\n*/\n\nfunction initialize() {\n  if (initialized) {\n    return;\n  }\n\n  unitTest();\n  keyUtils.addEntropy.apply(keyUtils, (0, _toConsumableArray2[\"default\"])(keyUtils.cpuEntropy()));\n  assert(keyUtils.entropyCount() >= 128, 'insufficient entropy');\n  initialized = true;\n}\n\nPrivateKey.initialize = promiseAsync(initialize);\n/**\n  Unit test basic private and public key functionality.\n\n  @throws {AssertError}\n*/\n\nfunction unitTest() {\n  var pvt = PrivateKey(hash.sha256(''));\n  var pvtError = 'key comparison test failed on a known private key';\n  assert.equal(pvt.toWif(), '5KYZdUEo39z3FPrtuX2QbbwGnNP5zTd7yyr2SC1j299sBCnWjss', pvtError);\n  assert.equal(pvt.toString(), '5KYZdUEo39z3FPrtuX2QbbwGnNP5zTd7yyr2SC1j299sBCnWjss', pvtError); // assert.equal(pvt.toString(), 'PVT_K1_2jH3nnhxhR3zPUcsKaWWZC9ZmZAnKm3GAnFD1xynGJE1Znuvjd', pvtError)\n\n  var pub = pvt.toPublic();\n  var pubError = 'pubkey string comparison test failed on a known public key';\n  assert.equal(pub.toString(), 'EOS859gxfnXyUriMgUeThh1fWv3oqcpLFyHa3TfFYC4PK2HqhToVM', pubError); // assert.equal(pub.toString(), 'PUB_K1_859gxfnXyUriMgUeThh1fWv3oqcpLFyHa3TfFYC4PK2Ht7beeX', pubError)\n  // assert.equal(pub.toStringLegacy(), 'EOS859gxfnXyUriMgUeThh1fWv3oqcpLFyHa3TfFYC4PK2HqhToVM', pubError)\n\n  doesNotThrow(function () {\n    return PrivateKey.fromString(pvt.toWif());\n  }, 'converting known wif from string');\n  doesNotThrow(function () {\n    return PrivateKey.fromString(pvt.toString());\n  }, 'converting known pvt from string');\n  doesNotThrow(function () {\n    return PublicKey.fromString(pub.toString());\n  }, 'converting known public key from string'); // doesNotThrow(() => PublicKey.fromString(pub.toStringLegacy()), 'converting known public key from string')\n\n  unitTested = true;\n}\n/** @private */\n\n\nvar doesNotThrow = function doesNotThrow(cb, msg) {\n  try {\n    cb();\n  } catch (error) {\n    error.message = \"\".concat(msg, \" ==> \").concat(error.message);\n    throw error;\n  }\n};","\"use strict\";\n\n/**\n  Convert a synchronous function into a asynchronous one (via setTimeout)\n  wrapping it in a promise.  This does not expect the function to have a\n  callback paramter.\n\n  @arg {function} func - non-callback function\n\n  @example promiseAsync(myfunction)\n*/\nmodule.exports = function (func) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return new Promise(function (resolve, reject) {\n      setTimeout(function () {\n        try {\n          resolve(func.apply(void 0, args));\n        } catch (err) {\n          reject(err);\n        }\n      });\n    });\n  };\n};","\"use strict\";\n\nvar randomBytes = require('randombytes');\n\nvar ByteBuffer = require('bytebuffer');\n\nvar crypto = require('browserify-aes');\n\nvar assert = require('assert');\n\nvar PublicKey = require('./key_public');\n\nvar PrivateKey = require('./key_private');\n\nvar hash = require('./hash');\n\nvar Long = ByteBuffer.Long;\nmodule.exports = {\n  encrypt: encrypt,\n  decrypt: decrypt\n};\n/**\n    Spec: http://localhost:3002/steem/@dantheman/how-to-encrypt-a-memo-when-transferring-steem\n\n    @throws {Error|TypeError} - \"Invalid Key, ...\"\n\n    @arg {PrivateKey} private_key - required and used for decryption\n    @arg {PublicKey} public_key - required and used to calcualte the shared secret\n    @arg {string} [nonce = uniqueNonce()] - assigned a random unique uint64\n\n    @return {object}\n    @property {string} nonce - random or unique uint64, provides entropy when re-using the same private/public keys.\n    @property {Buffer} message - Plain text message\n    @property {number} checksum - shared secret checksum\n*/\n\nfunction encrypt(private_key, public_key, message) {\n  var nonce = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : uniqueNonce();\n  return crypt(private_key, public_key, nonce, message);\n}\n/**\n    Spec: http://localhost:3002/steem/@dantheman/how-to-encrypt-a-memo-when-transferring-steem\n\n    @arg {PrivateKey} private_key - required and used for decryption\n    @arg {PublicKey} public_key - required and used to calcualte the shared secret\n    @arg {string} nonce - random or unique uint64, provides entropy when re-using the same private/public keys.\n    @arg {Buffer} message - Encrypted or plain text message\n    @arg {number} checksum - shared secret checksum\n\n    @throws {Error|TypeError} - \"Invalid Key, ...\"\n\n    @return {Buffer} - message\n*/\n\n\nfunction decrypt(private_key, public_key, nonce, message, checksum) {\n  return crypt(private_key, public_key, nonce, message, checksum).message;\n}\n/**\n    @arg {Buffer} message - Encrypted or plain text message (see checksum)\n    @arg {number} checksum - shared secret checksum (null to encrypt, non-null to decrypt)\n    @private\n*/\n\n\nfunction crypt(private_key, public_key, nonce, message, checksum) {\n  private_key = PrivateKey(private_key);\n  if (!private_key) throw new TypeError('private_key is required');\n  public_key = PublicKey(public_key);\n  if (!public_key) throw new TypeError('public_key is required');\n  nonce = toLongObj(nonce);\n  if (!nonce) throw new TypeError('nonce is required');\n\n  if (!Buffer.isBuffer(message)) {\n    if (typeof message !== 'string') throw new TypeError('message should be buffer or string');\n    message = new Buffer(message, 'binary');\n  }\n\n  if (checksum && typeof checksum !== 'number') throw new TypeError('checksum should be a number');\n  var S = private_key.getSharedSecret(public_key);\n  var ebuf = new ByteBuffer(ByteBuffer.DEFAULT_CAPACITY, ByteBuffer.LITTLE_ENDIAN);\n  ebuf.writeUint64(nonce);\n  ebuf.append(S.toString('binary'), 'binary');\n  ebuf = new Buffer(ebuf.copy(0, ebuf.offset).toBinary(), 'binary');\n  var encryption_key = hash.sha512(ebuf); // D E B U G\n  // console.log('crypt', {\n  //     priv_to_pub: private_key.toPublic().toString(),\n  //     pub: public_key.toString(),\n  //     nonce: nonce.toString(),\n  //     message: message.length,\n  //     checksum,\n  //     S: S.toString('hex'),\n  //     encryption_key: encryption_key.toString('hex'),\n  // })\n\n  var iv = encryption_key.slice(32, 48);\n  var key = encryption_key.slice(0, 32); // check is first 64 bit of sha256 hash treated as uint64_t truncated to 32 bits.\n\n  var check = hash.sha256(encryption_key);\n  check = check.slice(0, 4);\n  var cbuf = ByteBuffer.fromBinary(check.toString('binary'), ByteBuffer.DEFAULT_CAPACITY, ByteBuffer.LITTLE_ENDIAN);\n  check = cbuf.readUint32();\n\n  if (checksum) {\n    if (check !== checksum) throw new Error('Invalid key');\n    message = cryptoJsDecrypt(message, key, iv);\n  } else {\n    message = cryptoJsEncrypt(message, key, iv);\n  }\n\n  return {\n    nonce: nonce,\n    message: message,\n    checksum: check\n  };\n}\n/** This method does not use a checksum, the returned data must be validated some other way.\n\n    @arg {string|Buffer} message - ciphertext binary format\n    @arg {string<utf8>|Buffer} key - 256bit\n    @arg {string<utf8>|Buffer} iv - 128bit\n\n    @return {Buffer}\n*/\n\n\nfunction cryptoJsDecrypt(message, key, iv) {\n  assert(message, \"Missing cipher text\");\n  message = toBinaryBuffer(message);\n  var decipher = crypto.createDecipheriv('aes-256-cbc', key, iv); // decipher.setAutoPadding(true)\n\n  message = Buffer.concat([decipher.update(message), decipher[\"final\"]()]);\n  return message;\n}\n/** This method does not use a checksum, the returned data must be validated some other way.\n    @arg {string|Buffer} message - plaintext binary format\n    @arg {string<utf8>|Buffer} key - 256bit\n    @arg {string<utf8>|Buffer} iv - 128bit\n\n    @return {Buffer}\n*/\n\n\nfunction cryptoJsEncrypt(message, key, iv) {\n  assert(message, \"Missing plain text\");\n  message = toBinaryBuffer(message);\n  var cipher = crypto.createCipheriv('aes-256-cbc', key, iv); // cipher.setAutoPadding(true)\n\n  message = Buffer.concat([cipher.update(message), cipher[\"final\"]()]);\n  return message;\n}\n/** @return {string} unique 64 bit unsigned number string.  Being time based, this is careful to never choose the same nonce twice.  This value could be recorded in the blockchain for a long time.\n*/\n\n\nfunction uniqueNonce() {\n  if (unique_nonce_entropy === null) {\n    var b = new Uint8Array(randomBytes(2));\n    unique_nonce_entropy = parseInt(b[0] << 8 | b[1], 10);\n  }\n\n  var _long = Long.fromNumber(Date.now());\n\n  var entropy = ++unique_nonce_entropy % 0xFFFF; // console.log('uniqueNonce date\\t', ByteBuffer.allocate(8).writeUint64(long).toHex(0))\n  // console.log('uniqueNonce entropy\\t', ByteBuffer.allocate(8).writeUint64(Long.fromNumber(entropy)).toHex(0))\n\n  _long = _long.shiftLeft(16).or(Long.fromNumber(entropy)); // console.log('uniqueNonce final\\t', ByteBuffer.allocate(8).writeUint64(long).toHex(0))\n\n  return _long.toString();\n}\n\nvar unique_nonce_entropy = null; // for(let i=1; i < 10; i++) key.uniqueNonce()\n\nvar toLongObj = function toLongObj(o) {\n  return o ? Long.isLong(o) ? o : Long.fromString(o) : o;\n};\n\nvar toBinaryBuffer = function toBinaryBuffer(o) {\n  return o ? Buffer.isBuffer(o) ? o : new Buffer(o, 'binary') : o;\n};","\"use strict\";\n\nmodule.exports = function enforce(type, value) {\n  // Copied from https://github.com/bitcoinjs/bitcoinjs-lib\n  switch (type) {\n    case 'Array':\n      {\n        if (Array.isArray(value)) return;\n        break;\n      }\n\n    case 'Boolean':\n      {\n        if (typeof value === 'boolean') return;\n        break;\n      }\n\n    case 'Buffer':\n      {\n        if (Buffer.isBuffer(value)) return;\n        break;\n      }\n\n    case 'Number':\n      {\n        if (typeof value === 'number') return;\n        break;\n      }\n\n    case 'String':\n      {\n        if (typeof value === 'string') return;\n        break;\n      }\n\n    default:\n      {\n        if (getName(value.constructor) === getName(type)) return;\n      }\n  }\n\n  throw new TypeError('Expected ' + (getName(type) || type) + ', got ' + value);\n};\n\nfunction getName(fn) {\n  // Why not fn.name: https://kangax.github.io/compat-table/es6/#function_name_property\n  var match = fn.toString().match(/function (.*?)\\(/);\n  return match ? match[1] : null;\n}","\"use strict\";\n\nvar assert = require('assert'); // from https://github.com/bitcoinjs/bitcoinjs-lib\n\n\nvar enforceType = require('./enforce_types');\n\nvar BigInteger = require('bigi');\n\nfunction ECSignature(r, s) {\n  enforceType(BigInteger, r);\n  enforceType(BigInteger, s);\n\n  function toCompact(i, compressed) {\n    if (compressed) i += 4;\n    i += 27;\n    var buffer = new Buffer(65);\n    buffer.writeUInt8(i, 0);\n    r.toBuffer(32).copy(buffer, 1);\n    s.toBuffer(32).copy(buffer, 33);\n    return buffer;\n  }\n\n  function toDER() {\n    var rBa = r.toDERInteger();\n    var sBa = s.toDERInteger();\n    var sequence = []; // INTEGER\n\n    sequence.push(0x02, rBa.length);\n    sequence = sequence.concat(rBa); // INTEGER\n\n    sequence.push(0x02, sBa.length);\n    sequence = sequence.concat(sBa); // SEQUENCE\n\n    sequence.unshift(0x30, sequence.length);\n    return new Buffer(sequence);\n  }\n\n  function toScriptSignature(hashType) {\n    var hashTypeBuffer = new Buffer(1);\n    hashTypeBuffer.writeUInt8(hashType, 0);\n    return Buffer.concat([toDER(), hashTypeBuffer]);\n  }\n\n  return {\n    r: r,\n    s: s,\n    toCompact: toCompact,\n    toDER: toDER,\n    toScriptSignature: toScriptSignature\n  };\n} // Import operations\n\n\nECSignature.parseCompact = function (buffer) {\n  assert.equal(buffer.length, 65, 'Invalid signature length');\n  var i = buffer.readUInt8(0) - 27; // At most 3 bits\n\n  assert.equal(i, i & 7, 'Invalid signature parameter');\n  var compressed = !!(i & 4); // Recovery param only\n\n  i = i & 3;\n  var r = BigInteger.fromBuffer(buffer.slice(1, 33));\n  var s = BigInteger.fromBuffer(buffer.slice(33));\n  return {\n    compressed: compressed,\n    i: i,\n    signature: ECSignature(r, s)\n  };\n};\n\nECSignature.fromDER = function (buffer) {\n  assert.equal(buffer.readUInt8(0), 0x30, 'Not a DER sequence');\n  assert.equal(buffer.readUInt8(1), buffer.length - 2, 'Invalid sequence length');\n  assert.equal(buffer.readUInt8(2), 0x02, 'Expected a DER integer');\n  var rLen = buffer.readUInt8(3);\n  assert(rLen > 0, 'R length is zero');\n  var offset = 4 + rLen;\n  assert.equal(buffer.readUInt8(offset), 0x02, 'Expected a DER integer (2)');\n  var sLen = buffer.readUInt8(offset + 1);\n  assert(sLen > 0, 'S length is zero');\n  var rB = buffer.slice(4, offset);\n  var sB = buffer.slice(offset + 2);\n  offset += 2 + sLen;\n\n  if (rLen > 1 && rB.readUInt8(0) === 0x00) {\n    assert(rB.readUInt8(1) & 0x80, 'R value excessively padded');\n  }\n\n  if (sLen > 1 && sB.readUInt8(0) === 0x00) {\n    assert(sB.readUInt8(1) & 0x80, 'S value excessively padded');\n  }\n\n  assert.equal(offset, buffer.length, 'Invalid DER encoding');\n  var r = BigInteger.fromDERInteger(rB);\n  var s = BigInteger.fromDERInteger(sB);\n  assert(r.signum() >= 0, 'R value is negative');\n  assert(s.signum() >= 0, 'S value is negative');\n  return ECSignature(r, s);\n}; // FIXME: 0x00, 0x04, 0x80 are SIGHASH_* boundary constants, importing Transaction causes a circular dependency\n\n\nECSignature.parseScriptSignature = function (buffer) {\n  var hashType = buffer.readUInt8(buffer.length - 1);\n  var hashTypeMod = hashType & ~0x80;\n  assert(hashTypeMod > 0x00 && hashTypeMod < 0x04, 'Invalid hashType');\n  return {\n    signature: ECSignature.fromDER(buffer.slice(0, -1)),\n    hashType: hashType\n  };\n};\n\nmodule.exports = ECSignature;","\"use strict\";\n\nvar assert = require('assert'); // from github.com/bitcoinjs/bitcoinjs-lib from github.com/cryptocoinjs/ecdsa\n\n\nvar crypto = require('./hash');\n\nvar enforceType = require('./enforce_types');\n\nvar BigInteger = require('bigi');\n\nvar ECSignature = require('./ecsignature'); // https://tools.ietf.org/html/rfc6979#section-3.2\n\n\nfunction deterministicGenerateK(curve, hash, d, checkSig, nonce) {\n  enforceType('Buffer', hash);\n  enforceType(BigInteger, d);\n\n  if (nonce) {\n    hash = crypto.sha256(Buffer.concat([hash, new Buffer(nonce)]));\n  } // sanity check\n\n\n  assert.equal(hash.length, 32, 'Hash must be 256 bit');\n  var x = d.toBuffer(32);\n  var k = new Buffer(32);\n  var v = new Buffer(32); // Step B\n\n  v.fill(1); // Step C\n\n  k.fill(0); // Step D\n\n  k = crypto.HmacSHA256(Buffer.concat([v, new Buffer([0]), x, hash]), k); // Step E\n\n  v = crypto.HmacSHA256(v, k); // Step F\n\n  k = crypto.HmacSHA256(Buffer.concat([v, new Buffer([1]), x, hash]), k); // Step G\n\n  v = crypto.HmacSHA256(v, k); // Step H1/H2a, ignored as tlen === qlen (256 bit)\n  // Step H2b\n\n  v = crypto.HmacSHA256(v, k);\n  var T = BigInteger.fromBuffer(v); // Step H3, repeat until T is within the interval [1, n - 1]\n\n  while (T.signum() <= 0 || T.compareTo(curve.n) >= 0 || !checkSig(T)) {\n    k = crypto.HmacSHA256(Buffer.concat([v, new Buffer([0])]), k);\n    v = crypto.HmacSHA256(v, k); // Step H1/H2a, again, ignored as tlen === qlen (256 bit)\n    // Step H2b again\n\n    v = crypto.HmacSHA256(v, k);\n    T = BigInteger.fromBuffer(v);\n  }\n\n  return T;\n}\n\nfunction sign(curve, hash, d, nonce) {\n  var e = BigInteger.fromBuffer(hash);\n  var n = curve.n;\n  var G = curve.G;\n  var r, s;\n  var k = deterministicGenerateK(curve, hash, d, function (k) {\n    // find canonically valid signature\n    var Q = G.multiply(k);\n    if (curve.isInfinity(Q)) return false;\n    r = Q.affineX.mod(n);\n    if (r.signum() === 0) return false;\n    s = k.modInverse(n).multiply(e.add(d.multiply(r))).mod(n);\n    if (s.signum() === 0) return false;\n    return true;\n  }, nonce);\n  var N_OVER_TWO = n.shiftRight(1); // enforce low S values, see bip62: 'low s values in signatures'\n\n  if (s.compareTo(N_OVER_TWO) > 0) {\n    s = n.subtract(s);\n  }\n\n  return ECSignature(r, s);\n}\n\nfunction verifyRaw(curve, e, signature, Q) {\n  var n = curve.n;\n  var G = curve.G;\n  var r = signature.r;\n  var s = signature.s; // 1.4.1 Enforce r and s are both integers in the interval [1, n − 1]\n\n  if (r.signum() <= 0 || r.compareTo(n) >= 0) return false;\n  if (s.signum() <= 0 || s.compareTo(n) >= 0) return false; // c = s^-1 mod n\n\n  var c = s.modInverse(n); // 1.4.4 Compute u1 = es^−1 mod n\n  //               u2 = rs^−1 mod n\n\n  var u1 = e.multiply(c).mod(n);\n  var u2 = r.multiply(c).mod(n); // 1.4.5 Compute R = (xR, yR) = u1G + u2Q\n\n  var R = G.multiplyTwo(u1, Q, u2); // 1.4.5 (cont.) Enforce R is not at infinity\n\n  if (curve.isInfinity(R)) return false; // 1.4.6 Convert the field element R.x to an integer\n\n  var xR = R.affineX; // 1.4.7 Set v = xR mod n\n\n  var v = xR.mod(n); // 1.4.8 If v = r, output \"valid\", and if v != r, output \"invalid\"\n\n  return v.equals(r);\n}\n\nfunction verify(curve, hash, signature, Q) {\n  // 1.4.2 H = Hash(M), already done by the user\n  // 1.4.3 e = H\n  var e = BigInteger.fromBuffer(hash);\n  return verifyRaw(curve, e, signature, Q);\n}\n/**\n  * Recover a public key from a signature.\n  *\n  * See SEC 1: Elliptic Curve Cryptography, section 4.1.6, \"Public\n  * Key Recovery Operation\".\n  *\n  * http://www.secg.org/download/aid-780/sec1-v2.pdf\n  */\n\n\nfunction recoverPubKey(curve, e, signature, i) {\n  assert.strictEqual(i & 3, i, 'Recovery param is more than two bits');\n  var n = curve.n;\n  var G = curve.G;\n  var r = signature.r;\n  var s = signature.s;\n  assert(r.signum() > 0 && r.compareTo(n) < 0, 'Invalid r value');\n  assert(s.signum() > 0 && s.compareTo(n) < 0, 'Invalid s value'); // A set LSB signifies that the y-coordinate is odd\n\n  var isYOdd = i & 1; // The more significant bit specifies whether we should use the\n  // first or second candidate key.\n\n  var isSecondKey = i >> 1; // 1.1 Let x = r + jn\n\n  var x = isSecondKey ? r.add(n) : r;\n  var R = curve.pointFromX(isYOdd, x); // 1.4 Check that nR is at infinity\n\n  var nR = R.multiply(n);\n  assert(curve.isInfinity(nR), 'nR is not a valid curve point'); // Compute -e from e\n\n  var eNeg = e.negate().mod(n); // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n\n  var rInv = r.modInverse(n);\n  var Q = R.multiplyTwo(s, G, eNeg).multiply(rInv);\n  curve.validate(Q);\n  return Q;\n}\n/**\n  * Calculate pubkey extraction parameter.\n  *\n  * When extracting a pubkey from a signature, we have to\n  * distinguish four different cases. Rather than putting this\n  * burden on the verifier, Bitcoin includes a 2-bit value with the\n  * signature.\n  *\n  * This function simply tries all four cases and returns the value\n  * that resulted in a successful pubkey recovery.\n  */\n\n\nfunction calcPubKeyRecoveryParam(curve, e, signature, Q) {\n  for (var i = 0; i < 4; i++) {\n    var Qprime = recoverPubKey(curve, e, signature, i); // 1.6.2 Verify Q\n\n    if (Qprime.equals(Q)) {\n      return i;\n    }\n  }\n\n  throw new Error('Unable to find valid recovery factor');\n}\n\nmodule.exports = {\n  calcPubKeyRecoveryParam: calcPubKeyRecoveryParam,\n  deterministicGenerateK: deterministicGenerateK,\n  recoverPubKey: recoverPubKey,\n  sign: sign,\n  verify: verify,\n  verifyRaw: verifyRaw\n};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar ecdsa = require('./ecdsa');\n\nvar hash = require('./hash');\n\nvar curve = require('ecurve').getCurveByName('secp256k1');\n\nvar assert = require('assert');\n\nvar BigInteger = require('bigi');\n\nvar keyUtils = require('./key_utils');\n\nvar PublicKey = require('./key_public');\n\nvar PrivateKey = require('./key_private');\n\nmodule.exports = Signature;\n\nfunction Signature(r, s, i) {\n  assert.equal(r != null, true, 'Missing parameter');\n  assert.equal(s != null, true, 'Missing parameter');\n  assert.equal(i != null, true, 'Missing parameter');\n  /**\n      Verify signed data.\n       @arg {String|Buffer} data - full data\n      @arg {pubkey|PublicKey} pubkey - EOSKey..\n      @arg {String} [encoding = 'utf8'] - data encoding (if data is a string)\n       @return {boolean}\n  */\n\n  function verify(data, pubkey) {\n    var encoding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'utf8';\n\n    if (typeof data === 'string') {\n      data = Buffer.from(data, encoding);\n    }\n\n    assert(Buffer.isBuffer(data), 'data is a required String or Buffer');\n    data = hash.sha256(data);\n    return verifyHash(data, pubkey);\n  }\n  /**\n      Verify a buffer of exactally 32 bytes in size (sha256(text))\n       @arg {String|Buffer} dataSha256 - 32 byte buffer or string\n      @arg {String|PublicKey} pubkey - EOSKey..\n      @arg {String} [encoding = 'hex'] - dataSha256 encoding (if string)\n       @return {boolean}\n  */\n\n\n  function verifyHash(dataSha256, pubkey) {\n    var encoding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'hex';\n\n    if (typeof dataSha256 === 'string') {\n      dataSha256 = Buffer.from(dataSha256, encoding);\n    }\n\n    if (dataSha256.length !== 32 || !Buffer.isBuffer(dataSha256)) throw new Error(\"dataSha256: 32 bytes required\");\n    var publicKey = PublicKey(pubkey);\n    assert(publicKey, 'pubkey required');\n    return ecdsa.verify(curve, dataSha256, {\n      r: r,\n      s: s\n    }, publicKey.Q);\n  }\n\n  ;\n  /** @deprecated\n       Verify hex data by converting to a buffer then hashing.\n       @return {boolean}\n  */\n\n  function verifyHex(hex, pubkey) {\n    console.log('Deprecated: use verify(data, pubkey, \"hex\")');\n    var buf = Buffer.from(hex, 'hex');\n    return verify(buf, pubkey);\n  }\n\n  ;\n  /**\n      Recover the public key used to create this signature using full data.\n       @arg {String|Buffer} data - full data\n      @arg {String} [encoding = 'utf8'] - data encoding (if string)\n       @return {PublicKey}\n  */\n\n  function recover(data) {\n    var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'utf8';\n\n    if (typeof data === 'string') {\n      data = Buffer.from(data, encoding);\n    }\n\n    assert(Buffer.isBuffer(data), 'data is a required String or Buffer');\n    data = hash.sha256(data);\n    return recoverHash(data);\n  }\n\n  ;\n  /**\n      @arg {String|Buffer} dataSha256 - sha256 hash 32 byte buffer or hex string\n      @arg {String} [encoding = 'hex'] - dataSha256 encoding (if string)\n       @return {PublicKey}\n  */\n\n  function recoverHash(dataSha256) {\n    var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'hex';\n\n    if (typeof dataSha256 === 'string') {\n      dataSha256 = Buffer.from(dataSha256, encoding);\n    }\n\n    if (dataSha256.length !== 32 || !Buffer.isBuffer(dataSha256)) {\n      throw new Error(\"dataSha256: 32 byte String or buffer requred\");\n    }\n\n    var e = BigInteger.fromBuffer(dataSha256);\n    var i2 = i;\n    i2 -= 27;\n    i2 = i2 & 3;\n    var Q = ecdsa.recoverPubKey(curve, e, {\n      r: r,\n      s: s,\n      i: i\n    }, i2);\n    return PublicKey.fromPoint(Q);\n  }\n\n  ;\n\n  function toBuffer() {\n    var buf;\n    buf = new Buffer(65);\n    buf.writeUInt8(i, 0);\n    r.toBuffer(32).copy(buf, 1);\n    s.toBuffer(32).copy(buf, 33);\n    return buf;\n  }\n\n  ;\n\n  function toHex() {\n    return toBuffer().toString(\"hex\");\n  }\n\n  ;\n  var signatureCache;\n\n  function toString() {\n    if (signatureCache) {\n      return signatureCache;\n    }\n\n    signatureCache = 'SIG_K1_' + keyUtils.checkEncode(toBuffer(), 'K1');\n    return signatureCache;\n  }\n\n  return {\n    r: r,\n    s: s,\n    i: i,\n    toBuffer: toBuffer,\n    verify: verify,\n    verifyHash: verifyHash,\n    verifyHex: verifyHex,\n    // deprecated\n    recover: recover,\n    recoverHash: recoverHash,\n    toHex: toHex,\n    toString: toString,\n\n    /** @deprecated use verify (same arguments and return) */\n    verifyBuffer: function verifyBuffer() {\n      console.log('Deprecated: use signature.verify instead (same arguments)');\n      return verify.apply(void 0, arguments);\n    },\n\n    /** @deprecated use recover (same arguments and return) */\n    recoverPublicKey: function recoverPublicKey() {\n      console.log('Deprecated: use signature.recover instead (same arguments)');\n      return recover.apply(void 0, arguments);\n    },\n\n    /** @deprecated use recoverHash (same arguments and return) */\n    recoverPublicKeyFromBuffer: function recoverPublicKeyFromBuffer() {\n      console.log('Deprecated: use signature.recoverHash instead (same arguments)');\n      return recoverHash.apply(void 0, arguments);\n    }\n  };\n}\n/**\n    Hash and sign arbitrary data.\n\n    @arg {string|Buffer} data - full data\n    @arg {wif|PrivateKey} privateKey\n    @arg {String} [encoding = 'utf8'] - data encoding (if string)\n\n    @return {Signature}\n*/\n\n\nSignature.sign = function (data, privateKey) {\n  var encoding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'utf8';\n\n  if (typeof data === 'string') {\n    data = Buffer.from(data, encoding);\n  }\n\n  assert(Buffer.isBuffer(data), 'data is a required String or Buffer');\n  data = hash.sha256(data);\n  return Signature.signHash(data, privateKey);\n};\n/**\n    Sign a buffer of exactally 32 bytes in size (sha256(text))\n\n    @arg {string|Buffer} dataSha256 - 32 byte buffer or string\n    @arg {wif|PrivateKey} privateKey\n    @arg {String} [encoding = 'hex'] - dataSha256 encoding (if string)\n\n    @return {Signature}\n*/\n\n\nSignature.signHash = function (dataSha256, privateKey) {\n  var encoding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'hex';\n\n  if (typeof dataSha256 === 'string') {\n    dataSha256 = Buffer.from(dataSha256, encoding);\n  }\n\n  if (dataSha256.length !== 32 || !Buffer.isBuffer(dataSha256)) throw new Error(\"dataSha256: 32 byte buffer requred\");\n  privateKey = PrivateKey(privateKey);\n  assert(privateKey, 'privateKey required');\n  var der, e, ecsignature, i, lenR, lenS, nonce;\n  i = null;\n  nonce = 0;\n  e = BigInteger.fromBuffer(dataSha256);\n\n  while (true) {\n    ecsignature = ecdsa.sign(curve, dataSha256, privateKey.d, nonce++);\n    der = ecsignature.toDER();\n    lenR = der[3];\n    lenS = der[5 + lenR];\n\n    if (lenR === 32 && lenS === 32) {\n      i = ecdsa.calcPubKeyRecoveryParam(curve, e, ecsignature, privateKey.toPublic().Q);\n      i += 4; // compressed\n\n      i += 27; // compact  //  24 or 27 :( forcing odd-y 2nd key candidate)\n\n      break;\n    }\n\n    if (nonce % 10 === 0) {\n      console.log(\"WARN: \" + nonce + \" attempts to find canonical signature\");\n    }\n  }\n\n  return Signature(ecsignature.r, ecsignature.s, i);\n};\n\nSignature.fromBuffer = function (buf) {\n  var i, r, s;\n  assert(Buffer.isBuffer(buf), 'Buffer is required');\n  assert.equal(buf.length, 65, 'Invalid signature length');\n  i = buf.readUInt8(0);\n  assert.equal(i - 27, i - 27 & 7, 'Invalid signature parameter');\n  r = BigInteger.fromBuffer(buf.slice(1, 33));\n  s = BigInteger.fromBuffer(buf.slice(33));\n  return Signature(r, s, i);\n};\n\nSignature.fromHex = function (hex) {\n  return Signature.fromBuffer(Buffer.from(hex, \"hex\"));\n};\n/**\n    @arg {string} signature - like SIG_K1_base58signature..\n    @return {Signature} or `null` (invalid)\n*/\n\n\nSignature.fromString = function (signature) {\n  try {\n    return Signature.fromStringOrThrow(signature);\n  } catch (e) {\n    return null;\n  }\n};\n/**\n    @arg {string} signature - like SIG_K1_base58signature..\n    @throws {Error} invalid\n    @return {Signature}\n*/\n\n\nSignature.fromStringOrThrow = function (signature) {\n  assert.equal((0, _typeof2[\"default\"])(signature), 'string', 'signature');\n  var match = signature.match(/^SIG_([A-Za-z0-9]+)_([A-Za-z0-9]+)$/);\n  assert(match != null && match.length === 3, 'Expecting signature like: SIG_K1_base58signature..');\n\n  var _match = (0, _slicedToArray2[\"default\"])(match, 3),\n      keyType = _match[1],\n      keyString = _match[2];\n\n  assert.equal(keyType, 'K1', 'K1 signature expected');\n  return Signature.fromBuffer(keyUtils.checkDecode(keyString, keyType));\n};\n/**\n    @arg {String|Signature} o - hex string\n    @return {Signature}\n*/\n\n\nSignature.from = function (o) {\n  var signature = o ? o.r && o.s && o.i ? o : typeof o === 'string' && o.length === 130 ? Signature.fromHex(o) : typeof o === 'string' && o.length !== 130 ? Signature.fromStringOrThrow(o) : Buffer.isBuffer(o) ? Signature.fromBuffer(o) : null : o;\n  /*null or undefined*/\n\n  if (!signature) {\n    throw new TypeError('signature should be a hex string or buffer');\n  }\n\n  return signature;\n};","\"use strict\";\n\nvar Aes = require(\"./aes\");\n\nvar PrivateKey = require(\"./key_private\");\n\nvar PublicKey = require(\"./key_public\");\n\nvar Signature = require(\"./signature\");\n\nvar key_utils = require(\"./key_utils\");\n\nvar hash = require(\"./hash\");\n/**\n    [Wallet Import Format](https://en.bitcoin.it/wiki/Wallet_import_format)\n    @typedef {string} wif\n*/\n\n/**\n    EOSKey..\n    @typedef {string} pubkey\n*/\n\n/** @namespace */\n\n\nvar ecc = {\n  /**\n    Initialize by running some self-checking code.  This should take a\n    second to gather additional CPU entropy used during private key\n    generation.\n     Initialization happens once even if called multiple times.\n     @return {Promise}\n  */\n  initialize: PrivateKey.initialize,\n\n  /**\n    Does not pause to gather CPU entropy.\n    @return {Promise<PrivateKey>} test key\n  */\n  unsafeRandomKey: function unsafeRandomKey() {\n    return PrivateKey.unsafeRandomKey().then(function (key) {\n      return key.toString();\n    });\n  },\n\n  /**\n      @arg {number} [cpuEntropyBits = 0] gather additional entropy\n      from a CPU mining algorithm.  This will already happen once by\n      default.\n       @return {Promise<wif>}\n       @example\n  ecc.randomKey().then(privateKey => {\n  console.log('Private Key:\\t', privateKey) // wif\n  console.log('Public Key:\\t', ecc.privateToPublic(privateKey)) // EOSkey...\n  })\n  */\n  randomKey: function randomKey(cpuEntropyBits) {\n    return PrivateKey.randomKey(cpuEntropyBits).then(function (key) {\n      return key.toString();\n    });\n  },\n\n  /**\n       @arg {string} seed - any length string.  This is private.  The same\n      seed produces the same private key every time.  At least 128 random\n      bits should be used to produce a good private key.\n      @return {wif}\n       @example ecc.seedPrivate('secret') === wif\n  */\n  seedPrivate: function seedPrivate(seed) {\n    return PrivateKey.fromSeed(seed).toString();\n  },\n\n  /**\n      @arg {wif} wif\n      @arg {string} [pubkey_prefix = 'EOS'] - public key prefix\n       @return {pubkey}\n       @example ecc.privateToPublic(wif) === pubkey\n  */\n  privateToPublic: function privateToPublic(wif) {\n    var pubkey_prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'EOS';\n    return PrivateKey(wif).toPublic().toString(pubkey_prefix);\n  },\n\n  /**\n      @arg {pubkey} pubkey - like EOSKey..\n      @arg {string} [pubkey_prefix = 'EOS']\n       @return {boolean} valid\n       @example ecc.isValidPublic(pubkey) === true\n  */\n  isValidPublic: function isValidPublic(pubkey) {\n    var pubkey_prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'EOS';\n    return PublicKey.isValid(pubkey, pubkey_prefix);\n  },\n\n  /**\n      @arg {wif} wif\n      @return {boolean} valid\n       @example ecc.isValidPrivate(wif) === true\n  */\n  isValidPrivate: function isValidPrivate(wif) {\n    return PrivateKey.isValid(wif);\n  },\n\n  /**\n      Create a signature using data or a hash.\n       @arg {string|Buffer} data\n      @arg {wif|PrivateKey} privateKey\n      @arg {String} [encoding = 'utf8'] - data encoding (if string)\n       @return {string} string signature\n       @example ecc.sign('I am alive', wif)\n  */\n  sign: function sign(data, privateKey) {\n    var encoding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'utf8';\n\n    if (encoding === true) {\n      throw new TypeError('API changed, use signHash(..) instead');\n    } else {\n      if (encoding === false) {\n        console.log('Warning: ecc.sign hashData parameter was removed');\n      }\n    }\n\n    return Signature.sign(data, privateKey, encoding).toString();\n  },\n\n  /**\n      @arg {String|Buffer} dataSha256 - sha256 hash 32 byte buffer or string\n      @arg {wif|PrivateKey} privateKey\n      @arg {String} [encoding = 'hex'] - dataSha256 encoding (if string)\n       @return {string} string signature\n  */\n  signHash: function signHash(dataSha256, privateKey) {\n    var encoding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'hex';\n    return Signature.signHash(dataSha256, privateKey, encoding).toString();\n  },\n\n  /**\n      Verify signed data.\n       @arg {string|Buffer} signature - buffer or hex string\n      @arg {string|Buffer} data\n      @arg {pubkey|PublicKey} pubkey\n      @arg {boolean} [hashData = true] - sha256 hash data before verify\n      @return {boolean}\n       @example ecc.verify(signature, 'I am alive', pubkey) === true\n  */\n  verify: function verify(signature, data, pubkey) {\n    var encoding = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'utf8';\n\n    if (encoding === true) {\n      throw new TypeError('API changed, use verifyHash(..) instead');\n    } else {\n      if (encoding === false) {\n        console.log('Warning: ecc.verify hashData parameter was removed');\n      }\n    }\n\n    signature = Signature.from(signature);\n    return signature.verify(data, pubkey, encoding);\n  },\n  verifyHash: function verifyHash(signature, dataSha256, pubkey) {\n    var encoding = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'hex';\n    signature = Signature.from(signature);\n    return signature.verifyHash(dataSha256, pubkey, encoding);\n  },\n\n  /**\n      Recover the public key used to create the signature.\n       @arg {String|Buffer} signature (EOSbase58sig.., Hex, Buffer)\n      @arg {String|Buffer} data - full data\n      @arg {String} [encoding = 'utf8'] - data encoding (if data is a string)\n       @return {pubkey}\n       @example ecc.recover(signature, 'I am alive') === pubkey\n  */\n  recover: function recover(signature, data) {\n    var encoding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'utf8';\n\n    if (encoding === true) {\n      throw new TypeError('API changed, use recoverHash(signature, data) instead');\n    } else {\n      if (encoding === false) {\n        console.log('Warning: ecc.recover hashData parameter was removed');\n      }\n    }\n\n    signature = Signature.from(signature);\n    return signature.recover(data, encoding).toString();\n  },\n\n  /**\n      @arg {String|Buffer} signature (EOSbase58sig.., Hex, Buffer)\n      @arg {String|Buffer} dataSha256 - sha256 hash 32 byte buffer or hex string\n      @arg {String} [encoding = 'hex'] - dataSha256 encoding (if dataSha256 is a string)\n       @return {PublicKey}\n  */\n  recoverHash: function recoverHash(signature, dataSha256) {\n    var encoding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'hex';\n    signature = Signature.from(signature);\n    return signature.recoverHash(dataSha256, encoding).toString();\n  },\n\n  /** @arg {string|Buffer} data - always binary, you may need Buffer.from(data, 'hex')\n      @arg {string} [encoding = 'hex'] - result encoding 'hex', 'binary' or 'base64'\n      @return {string|Buffer} - Buffer when encoding is null, or string\n       @example ecc.sha256('hashme') === '02208b..'\n      @example ecc.sha256(Buffer.from('02208b', 'hex')) === '29a23..'\n  */\n  sha256: function sha256(data) {\n    var resultEncoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'hex';\n    return hash.sha256(data, resultEncoding);\n  }\n};\nmodule.exports = ecc;","\"use strict\";\n\nvar Aes = require(\"./aes\");\n\nvar PrivateKey = require(\"./key_private\");\n\nvar PublicKey = require(\"./key_public\");\n\nvar Signature = require(\"./signature\");\n\nvar key_utils = require(\"./key_utils\");\n\nmodule.exports = {\n  Aes: Aes,\n  PrivateKey: PrivateKey,\n  PublicKey: PublicKey,\n  Signature: Signature,\n  key_utils: key_utils\n};","\"use strict\";\n\nvar commonApi = require('./api_common');\n\nvar objectApi = require('./api_object');\n\nvar ecc = Object.assign({}, commonApi, objectApi);\nmodule.exports = ecc;","// https://github.com/maxogden/websocket-stream/blob/48dc3ddf943e5ada668c31ccd94e9186f02fafbd/ws-fallback.js\n\nvar ws = null\n\nif (typeof WebSocket !== 'undefined') {\n  ws = WebSocket\n} else if (typeof MozWebSocket !== 'undefined') {\n  ws = MozWebSocket\n} else if (typeof global !== 'undefined') {\n  ws = global.WebSocket || global.MozWebSocket\n} else if (typeof window !== 'undefined') {\n  ws = window.WebSocket || window.MozWebSocket\n} else if (typeof self !== 'undefined') {\n  ws = self.WebSocket || self.MozWebSocket\n}\n\nmodule.exports = ws\n","'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils   = require('../utils/common');\nvar trees   = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n","// String encode/decode helpers\n'use strict';\n\n\nvar utils = require('./common');\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nvar STR_APPLY_OK = true;\nvar STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new utils.Buf8(256);\nfor (var q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nexports.string2buf = function (str) {\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new utils.Buf8(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper (used in 2 places)\nfunction buf2binstring(buf, len) {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\n      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\n    }\n  }\n\n  var result = '';\n  for (var i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n}\n\n\n// Convert byte array to binary string\nexports.buf2binstring = function (buf) {\n  return buf2binstring(buf, buf.length);\n};\n\n\n// Convert binary string (typed, when possible)\nexports.binstring2buf = function (str) {\n  var buf = new utils.Buf8(str.length);\n  for (var i = 0, len = buf.length; i < len; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n};\n\n\n// convert array to string\nexports.buf2string = function (buf, max) {\n  var i, out, c, c_len;\n  var len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  var utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border = function (buf, max) {\n  var pos;\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","'use strict';\n\n\nvar zlib_deflate = require('./zlib/deflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\n\nvar toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nvar Z_NO_FLUSH      = 0;\nvar Z_FINISH        = 4;\n\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_SYNC_FLUSH    = 2;\n\nvar Z_DEFAULT_COMPRESSION = -1;\n\nvar Z_DEFAULT_STRATEGY    = 0;\n\nvar Z_DEFLATED  = 8;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array|Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\n * push a chunk with explicit flush (call [[Deflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  if (!(this instanceof Deflate)) return new Deflate(options);\n\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    var dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the compression context.\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * array format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var status, _mode;\n\n  if (this.ended) { return false; }\n\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */\n\n    if (status !== Z_STREAM_END && status !== Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {\n      if (this.options.to === 'string') {\n        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));\n      } else {\n        this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n      }\n    }\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\n\n  // Finalize on the last chunk.\n  if (_mode === Z_FINISH) {\n    status = zlib_deflate.deflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === Z_SYNC_FLUSH) {\n    this.onEnd(Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  var deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nexports.Deflate = Deflate;\nexports.deflate = deflate;\nexports.deflateRaw = deflateRaw;\nexports.gzip = gzip;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils         = require('../utils/common');\nvar adler32       = require('./adler32');\nvar crc32         = require('./crc32');\nvar inflate_fast  = require('./inffast');\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              utils.arraySet(\n                state.head.extra,\n                input,\n                next,\n                // extra field is limited to 65536 bytes\n                // - no need for additional size check\n                copy,\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          utils.arraySet(output, input, next, copy, put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n","'use strict';\n\n\nvar zlib_inflate = require('./zlib/inflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar c            = require('./zlib/constants');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\nvar GZheader     = require('./zlib/gzheader');\n\nvar toString = Object.prototype.toString;\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  if (!(this instanceof Inflate)) return new Inflate(options);\n\n  this.options = utils.assign({\n    chunkSize: 16384,\n    windowBits: 0,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== c.Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== c.Z_OK) {\n        throw new Error(msg[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var dictionary = this.options.dictionary;\n  var status, _mode;\n  var next_out_utf8, tail, utf8str;\n\n  // Flag to properly process Z_BUF_ERROR on testing inflate call\n  // when we check that all output data was flushed.\n  var allowBufError = false;\n\n  if (this.ended) { return false; }\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // Only binary strings can be decompressed on practice\n    strm.input = strings.binstring2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */\n\n    if (status === c.Z_NEED_DICT && dictionary) {\n      status = zlib_inflate.inflateSetDictionary(this.strm, dictionary);\n    }\n\n    if (status === c.Z_BUF_ERROR && allowBufError === true) {\n      status = c.Z_OK;\n      allowBufError = false;\n    }\n\n    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {\n\n        if (this.options.to === 'string') {\n\n          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          tail = strm.next_out - next_out_utf8;\n          utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n        }\n      }\n    }\n\n    // When no more input data, we should check that internal inflate buffers\n    // are flushed. The only way to do it when avail_out = 0 - run one more\n    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n    // Here we set flag to process this error properly.\n    //\n    // NOTE. Deflate does not return error in this case and does not needs such\n    // logic.\n    if (strm.avail_in === 0 && strm.avail_out === 0) {\n      allowBufError = true;\n    }\n\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);\n\n  if (status === c.Z_STREAM_END) {\n    _mode = c.Z_FINISH;\n  }\n\n  // Finalize on the last chunk.\n  if (_mode === c.Z_FINISH) {\n    status = zlib_inflate.inflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === c.Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === c.Z_SYNC_FLUSH) {\n    this.onEnd(c.Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === c.Z_OK) {\n    if (this.options.to === 'string') {\n      // Glue & convert here, until we teach pako to send\n      // utf8 aligned strings to onData\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  var inflator = new Inflate(options);\n\n  inflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) { throw inflator.msg || msg[inflator.err]; }\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nexports.Inflate = Inflate;\nexports.inflate = inflate;\nexports.inflateRaw = inflateRaw;\nexports.ungzip  = inflate;\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","/**\n * Error that is thrown if a [[LinkTransport]] cancels a request.\n * @internal\n */\nexport class CancelError extends Error {\n    constructor(reason) {\n        super(`User canceled request ${reason ? '(' + reason + ')' : ''}`);\n        this.code = 'E_CANCEL';\n    }\n}\n/**\n * Error that is thrown if an identity request fails to verify.\n * @internal\n */\nexport class IdentityError extends Error {\n    constructor(reason) {\n        super(`Unable to verify identity ${reason ? '(' + reason + ')' : ''}`);\n        this.code = 'E_IDENTITY';\n    }\n}\n/**\n * Error originating from a [[LinkSession]].\n * @internal\n */\nexport class SessionError extends Error {\n    constructor(reason, code) {\n        super(reason);\n        this.code = code;\n    }\n}\n//# sourceMappingURL=errors.js.map","/** @internal */\nexport const defaults = {\n    chainId: 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906',\n    rpc: 'https://eos.greymass.com',\n    service: 'https://cb.anchor.link',\n};\n//# sourceMappingURL=link-options.js.map","import { Numeric, Serialize } from 'eosjs';\nimport * as ecc from 'eosjs-ecc';\nimport makeFetch from 'fetch-ponyfill';\nimport linkAbi from './link-abi-data';\n/** @internal */\nexport const fetch = makeFetch().fetch;\n/** @internal */\nconst types = Serialize.getTypesFromAbi(Serialize.createInitialTypes(), linkAbi);\n/**\n * Helper to ABI encode value.\n * @internal\n */\nexport function abiEncode(value, typeName) {\n    let type = types.get(typeName);\n    if (!type) {\n        throw new Error(`No such type: ${typeName}`);\n    }\n    let buf = new Serialize.SerialBuffer();\n    type.serialize(buf, value);\n    return buf.asUint8Array();\n}\n/**\n * Helper to ABI decode data.\n * @internal\n */\nexport function abiDecode(data, typeName) {\n    let type = types.get(typeName);\n    if (!type) {\n        throw new Error(`No such type: ${typeName}`);\n    }\n    if (typeof data === 'string') {\n        data = Serialize.hexToUint8Array(data);\n    }\n    else if (!(data instanceof Uint8Array)) {\n        data = new Uint8Array(data);\n    }\n    let buf = new Serialize.SerialBuffer({\n        array: data,\n    });\n    return type.deserialize(buf);\n}\n/**\n * Encrypt a message using AES and shared secret derived from given keys.\n * @internal\n */\nexport function sealMessage(message, privateKey, publicKey) {\n    const res = ecc.Aes.encrypt(privateKey, publicKey, message);\n    const data = {\n        from: ecc.privateToPublic(privateKey),\n        nonce: res.nonce.toString(),\n        ciphertext: res.message,\n        checksum: res.checksum,\n    };\n    return abiEncode(data, 'sealed_message');\n}\n/**\n * Ensure public key is in new PUB_ format.\n * @internal\n */\nexport function normalizePublicKey(key) {\n    if (key.startsWith('PUB_')) {\n        return key;\n    }\n    return Numeric.publicKeyToString(Numeric.stringToPublicKey('EOS' + key.substr(-50)));\n}\n/**\n * Return true if given public keys are equal.\n * @internal\n */\nexport function publicKeyEqual(keyA, keyB) {\n    return normalizePublicKey(keyA) === normalizePublicKey(keyB);\n}\n/**\n * Generate a random private key.\n * Uses browser crypto if available, otherwise falls back to slow eosjs-ecc.\n * @internal\n */\nexport async function generatePrivateKey() {\n    if (typeof window !== 'undefined' && window.crypto) {\n        const data = new Uint32Array(32);\n        window.crypto.getRandomValues(data);\n        return ecc.PrivateKey.fromBuffer(Buffer.from(data)).toString();\n    }\n    else {\n        return await ecc.randomKey();\n    }\n}\n//# sourceMappingURL=utils.js.map","(function (self) {\n  'use strict';\n\n  function fetchPonyfill(options) {\n    var Promise = options && options.Promise || self.Promise;\n    var XMLHttpRequest = options && options.XMLHttpRequest || self.XMLHttpRequest;\n    var global = self;\n\n    return (function () {\n      var self = Object.create(global, {\n        fetch: {\n          value: undefined,\n          writable: true\n        }\n      });\n\n      (function(self) {\n        'use strict';\n\n        if (self.fetch) {\n          return\n        }\n\n        var support = {\n          searchParams: 'URLSearchParams' in self,\n          iterable: 'Symbol' in self && 'iterator' in Symbol,\n          blob: 'FileReader' in self && 'Blob' in self && (function() {\n            try {\n              new Blob()\n              return true\n            } catch(e) {\n              return false\n            }\n          })(),\n          formData: 'FormData' in self,\n          arrayBuffer: 'ArrayBuffer' in self\n        }\n\n        if (support.arrayBuffer) {\n          var viewClasses = [\n            '[object Int8Array]',\n            '[object Uint8Array]',\n            '[object Uint8ClampedArray]',\n            '[object Int16Array]',\n            '[object Uint16Array]',\n            '[object Int32Array]',\n            '[object Uint32Array]',\n            '[object Float32Array]',\n            '[object Float64Array]'\n          ]\n\n          var isDataView = function(obj) {\n            return obj && DataView.prototype.isPrototypeOf(obj)\n          }\n\n          var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n            return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n          }\n        }\n\n        function normalizeName(name) {\n          if (typeof name !== 'string') {\n            name = String(name)\n          }\n          if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n            throw new TypeError('Invalid character in header field name')\n          }\n          return name.toLowerCase()\n        }\n\n        function normalizeValue(value) {\n          if (typeof value !== 'string') {\n            value = String(value)\n          }\n          return value\n        }\n\n        // Build a destructive iterator for the value list\n        function iteratorFor(items) {\n          var iterator = {\n            next: function() {\n              var value = items.shift()\n              return {done: value === undefined, value: value}\n            }\n          }\n\n          if (support.iterable) {\n            iterator[Symbol.iterator] = function() {\n              return iterator\n            }\n          }\n\n          return iterator\n        }\n\n        function Headers(headers) {\n          this.map = {}\n\n          if (headers instanceof Headers) {\n            headers.forEach(function(value, name) {\n              this.append(name, value)\n            }, this)\n          } else if (Array.isArray(headers)) {\n            headers.forEach(function(header) {\n              this.append(header[0], header[1])\n            }, this)\n          } else if (headers) {\n            Object.getOwnPropertyNames(headers).forEach(function(name) {\n              this.append(name, headers[name])\n            }, this)\n          }\n        }\n\n        Headers.prototype.append = function(name, value) {\n          name = normalizeName(name)\n          value = normalizeValue(value)\n          var oldValue = this.map[name]\n          this.map[name] = oldValue ? oldValue+','+value : value\n        }\n\n        Headers.prototype['delete'] = function(name) {\n          delete this.map[normalizeName(name)]\n        }\n\n        Headers.prototype.get = function(name) {\n          name = normalizeName(name)\n          return this.has(name) ? this.map[name] : null\n        }\n\n        Headers.prototype.has = function(name) {\n          return this.map.hasOwnProperty(normalizeName(name))\n        }\n\n        Headers.prototype.set = function(name, value) {\n          this.map[normalizeName(name)] = normalizeValue(value)\n        }\n\n        Headers.prototype.forEach = function(callback, thisArg) {\n          for (var name in this.map) {\n            if (this.map.hasOwnProperty(name)) {\n              callback.call(thisArg, this.map[name], name, this)\n            }\n          }\n        }\n\n        Headers.prototype.keys = function() {\n          var items = []\n          this.forEach(function(value, name) { items.push(name) })\n          return iteratorFor(items)\n        }\n\n        Headers.prototype.values = function() {\n          var items = []\n          this.forEach(function(value) { items.push(value) })\n          return iteratorFor(items)\n        }\n\n        Headers.prototype.entries = function() {\n          var items = []\n          this.forEach(function(value, name) { items.push([name, value]) })\n          return iteratorFor(items)\n        }\n\n        if (support.iterable) {\n          Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n        }\n\n        function consumed(body) {\n          if (body.bodyUsed) {\n            return Promise.reject(new TypeError('Already read'))\n          }\n          body.bodyUsed = true\n        }\n\n        function fileReaderReady(reader) {\n          return new Promise(function(resolve, reject) {\n            reader.onload = function() {\n              resolve(reader.result)\n            }\n            reader.onerror = function() {\n              reject(reader.error)\n            }\n          })\n        }\n\n        function readBlobAsArrayBuffer(blob) {\n          var reader = new FileReader()\n          var promise = fileReaderReady(reader)\n          reader.readAsArrayBuffer(blob)\n          return promise\n        }\n\n        function readBlobAsText(blob) {\n          var reader = new FileReader()\n          var promise = fileReaderReady(reader)\n          reader.readAsText(blob)\n          return promise\n        }\n\n        function readArrayBufferAsText(buf) {\n          var view = new Uint8Array(buf)\n          var chars = new Array(view.length)\n\n          for (var i = 0; i < view.length; i++) {\n            chars[i] = String.fromCharCode(view[i])\n          }\n          return chars.join('')\n        }\n\n        function bufferClone(buf) {\n          if (buf.slice) {\n            return buf.slice(0)\n          } else {\n            var view = new Uint8Array(buf.byteLength)\n            view.set(new Uint8Array(buf))\n            return view.buffer\n          }\n        }\n\n        function Body() {\n          this.bodyUsed = false\n\n          this._initBody = function(body) {\n            this._bodyInit = body\n            if (!body) {\n              this._bodyText = ''\n            } else if (typeof body === 'string') {\n              this._bodyText = body\n            } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n              this._bodyBlob = body\n            } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n              this._bodyFormData = body\n            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n              this._bodyText = body.toString()\n            } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n              this._bodyArrayBuffer = bufferClone(body.buffer)\n              // IE 10-11 can't handle a DataView body.\n              this._bodyInit = new Blob([this._bodyArrayBuffer])\n            } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n              this._bodyArrayBuffer = bufferClone(body)\n            } else {\n              throw new Error('unsupported BodyInit type')\n            }\n\n            if (!this.headers.get('content-type')) {\n              if (typeof body === 'string') {\n                this.headers.set('content-type', 'text/plain;charset=UTF-8')\n              } else if (this._bodyBlob && this._bodyBlob.type) {\n                this.headers.set('content-type', this._bodyBlob.type)\n              } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n                this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n              }\n            }\n          }\n\n          if (support.blob) {\n            this.blob = function() {\n              var rejected = consumed(this)\n              if (rejected) {\n                return rejected\n              }\n\n              if (this._bodyBlob) {\n                return Promise.resolve(this._bodyBlob)\n              } else if (this._bodyArrayBuffer) {\n                return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n              } else if (this._bodyFormData) {\n                throw new Error('could not read FormData body as blob')\n              } else {\n                return Promise.resolve(new Blob([this._bodyText]))\n              }\n            }\n\n            this.arrayBuffer = function() {\n              if (this._bodyArrayBuffer) {\n                return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n              } else {\n                return this.blob().then(readBlobAsArrayBuffer)\n              }\n            }\n          }\n\n          this.text = function() {\n            var rejected = consumed(this)\n            if (rejected) {\n              return rejected\n            }\n\n            if (this._bodyBlob) {\n              return readBlobAsText(this._bodyBlob)\n            } else if (this._bodyArrayBuffer) {\n              return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n            } else if (this._bodyFormData) {\n              throw new Error('could not read FormData body as text')\n            } else {\n              return Promise.resolve(this._bodyText)\n            }\n          }\n\n          if (support.formData) {\n            this.formData = function() {\n              return this.text().then(decode)\n            }\n          }\n\n          this.json = function() {\n            return this.text().then(JSON.parse)\n          }\n\n          return this\n        }\n\n        // HTTP methods whose capitalization should be normalized\n        var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n        function normalizeMethod(method) {\n          var upcased = method.toUpperCase()\n          return (methods.indexOf(upcased) > -1) ? upcased : method\n        }\n\n        function Request(input, options) {\n          options = options || {}\n          var body = options.body\n\n          if (input instanceof Request) {\n            if (input.bodyUsed) {\n              throw new TypeError('Already read')\n            }\n            this.url = input.url\n            this.credentials = input.credentials\n            if (!options.headers) {\n              this.headers = new Headers(input.headers)\n            }\n            this.method = input.method\n            this.mode = input.mode\n            if (!body && input._bodyInit != null) {\n              body = input._bodyInit\n              input.bodyUsed = true\n            }\n          } else {\n            this.url = String(input)\n          }\n\n          this.credentials = options.credentials || this.credentials || 'omit'\n          if (options.headers || !this.headers) {\n            this.headers = new Headers(options.headers)\n          }\n          this.method = normalizeMethod(options.method || this.method || 'GET')\n          this.mode = options.mode || this.mode || null\n          this.referrer = null\n\n          if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n            throw new TypeError('Body not allowed for GET or HEAD requests')\n          }\n          this._initBody(body)\n        }\n\n        Request.prototype.clone = function() {\n          return new Request(this, { body: this._bodyInit })\n        }\n\n        function decode(body) {\n          var form = new FormData()\n          body.trim().split('&').forEach(function(bytes) {\n            if (bytes) {\n              var split = bytes.split('=')\n              var name = split.shift().replace(/\\+/g, ' ')\n              var value = split.join('=').replace(/\\+/g, ' ')\n              form.append(decodeURIComponent(name), decodeURIComponent(value))\n            }\n          })\n          return form\n        }\n\n        function parseHeaders(rawHeaders) {\n          var headers = new Headers()\n          // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n          // https://tools.ietf.org/html/rfc7230#section-3.2\n          var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n          preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n            var parts = line.split(':')\n            var key = parts.shift().trim()\n            if (key) {\n              var value = parts.join(':').trim()\n              headers.append(key, value)\n            }\n          })\n          return headers\n        }\n\n        Body.call(Request.prototype)\n\n        function Response(bodyInit, options) {\n          if (!options) {\n            options = {}\n          }\n\n          this.type = 'default'\n          this.status = options.status === undefined ? 200 : options.status\n          this.ok = this.status >= 200 && this.status < 300\n          this.statusText = 'statusText' in options ? options.statusText : 'OK'\n          this.headers = new Headers(options.headers)\n          this.url = options.url || ''\n          this._initBody(bodyInit)\n        }\n\n        Body.call(Response.prototype)\n\n        Response.prototype.clone = function() {\n          return new Response(this._bodyInit, {\n            status: this.status,\n            statusText: this.statusText,\n            headers: new Headers(this.headers),\n            url: this.url\n          })\n        }\n\n        Response.error = function() {\n          var response = new Response(null, {status: 0, statusText: ''})\n          response.type = 'error'\n          return response\n        }\n\n        var redirectStatuses = [301, 302, 303, 307, 308]\n\n        Response.redirect = function(url, status) {\n          if (redirectStatuses.indexOf(status) === -1) {\n            throw new RangeError('Invalid status code')\n          }\n\n          return new Response(null, {status: status, headers: {location: url}})\n        }\n\n        self.Headers = Headers\n        self.Request = Request\n        self.Response = Response\n\n        self.fetch = function(input, init) {\n          return new Promise(function(resolve, reject) {\n            var request = new Request(input, init)\n            var xhr = new XMLHttpRequest()\n\n            xhr.onload = function() {\n              var options = {\n                status: xhr.status,\n                statusText: xhr.statusText,\n                headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n              }\n              options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n              var body = 'response' in xhr ? xhr.response : xhr.responseText\n              resolve(new Response(body, options))\n            }\n\n            xhr.onerror = function() {\n              reject(new TypeError('Network request failed'))\n            }\n\n            xhr.ontimeout = function() {\n              reject(new TypeError('Network request failed'))\n            }\n\n            xhr.open(request.method, request.url, true)\n\n            if (request.credentials === 'include') {\n              xhr.withCredentials = true\n            } else if (request.credentials === 'omit') {\n              xhr.withCredentials = false\n            }\n\n            if ('responseType' in xhr && support.blob) {\n              xhr.responseType = 'blob'\n            }\n\n            request.headers.forEach(function(value, name) {\n              xhr.setRequestHeader(name, value)\n            })\n\n            xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n          })\n        }\n        self.fetch.polyfill = true\n      })(typeof self !== 'undefined' ? self : this);\n\n\n      return {\n        fetch: self.fetch,\n        Headers: self.Headers,\n        Request: self.Request,\n        Response: self.Response\n      };\n    }());\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return fetchPonyfill;\n    });\n  } else if (typeof exports === 'object') {\n    module.exports = fetchPonyfill;\n  } else {\n    self.fetchPonyfill = fetchPonyfill;\n  }\n}(typeof self !== 'undefined' ? self : typeof global !== 'undefined' ? global : this));\n\n","export default {\n    version: 'eosio::abi/1.1',\n    types: [],\n    structs: [\n        {\n            name: 'sealed_message',\n            base: '',\n            fields: [\n                {\n                    name: 'from',\n                    type: 'public_key',\n                },\n                {\n                    name: 'nonce',\n                    type: 'uint64',\n                },\n                {\n                    name: 'ciphertext',\n                    type: 'bytes',\n                },\n                {\n                    name: 'checksum',\n                    type: 'uint32',\n                },\n            ],\n        },\n        {\n            name: 'link_create',\n            base: '',\n            fields: [\n                {\n                    name: 'session_name',\n                    type: 'name',\n                },\n                {\n                    name: 'request_key',\n                    type: 'public_key',\n                },\n            ],\n        },\n        {\n            name: 'link_info',\n            base: '',\n            fields: [\n                {\n                    name: 'expiration',\n                    type: 'time_point_sec',\n                },\n            ],\n        },\n    ],\n    actions: [],\n    ricardian_clauses: [],\n    error_messages: [],\n    tables: [],\n    abi_extensions: [],\n};\n//# sourceMappingURL=link-abi-data.js.map","import { SessionError } from './errors';\nimport { abiEncode, fetch, sealMessage } from './utils';\n/**\n * Type describing a link session that can create a eosjs compatible\n * signature provider and transact for a specific auth.\n */\nexport class LinkSession {\n    /**\n     * Convenience, remove this session from associated [[Link]] storage if set.\n     * Equivalent to:\n     * ```ts\n     * session.link.removeSession(session.identifier, session.auth)\n     * ```\n     */\n    async remove() {\n        if (this.link.storage) {\n            await this.link.removeSession(this.identifier, this.auth);\n        }\n    }\n    /** Restore a previously serialized session. */\n    static restore(link, data) {\n        switch (data.type) {\n            case 'channel':\n                return new LinkChannelSession(link, data.data, data.metadata);\n            case 'fallback':\n                return new LinkFallbackSession(link, data.data, data.metadata);\n            default:\n                throw new Error('Unable to restore, session data invalid');\n        }\n    }\n}\n/**\n * Link session that pushes requests over a channel.\n * @internal\n */\nexport class LinkChannelSession extends LinkSession {\n    constructor(link, data, metadata) {\n        super();\n        this.type = 'channel';\n        this.timeout = 2 * 60 * 1000; // ms\n        this.link = link;\n        this.auth = data.auth;\n        this.publicKey = data.publicKey;\n        this.channel = data.channel;\n        this.identifier = data.identifier;\n        this.encrypt = (request) => {\n            return sealMessage(request.encode(true, false), data.requestKey, data.channel.key);\n        };\n        this.metadata = {\n            ...(metadata || {}),\n            timeout: this.timeout,\n            name: this.channel.name,\n        };\n        this.serialize = () => ({\n            type: 'channel',\n            data,\n            metadata: this.metadata,\n        });\n    }\n    onSuccess(request, result) {\n        if (this.link.transport.onSuccess) {\n            this.link.transport.onSuccess(request, result);\n        }\n    }\n    onFailure(request, error) {\n        if (this.link.transport.onFailure) {\n            this.link.transport.onFailure(request, error);\n        }\n    }\n    onRequest(request, cancel) {\n        const info = {\n            expiration: new Date(Date.now() + this.timeout).toISOString().slice(0, -1),\n        };\n        if (this.link.transport.onSessionRequest) {\n            this.link.transport.onSessionRequest(this, request, cancel);\n        }\n        setTimeout(() => {\n            cancel(new SessionError('Wallet did not respond in time', 'E_TIMEOUT'));\n        }, this.timeout + 500);\n        request.data.info.push({\n            key: 'link',\n            value: abiEncode(info, 'link_info'),\n        });\n        fetch(this.channel.url, {\n            method: 'POST',\n            headers: {\n                'X-Buoy-Wait': (this.timeout / 1000).toFixed(0),\n            },\n            body: this.encrypt(request),\n        })\n            .then((response) => {\n            if (response.status !== 200) {\n                cancel(new SessionError('Unable to push message', 'E_DELIVERY'));\n            }\n            else {\n                // request delivered\n            }\n        })\n            .catch((error) => {\n            cancel(new SessionError(`Unable to reach link service (${error.message || String(error)})`, 'E_DELIVERY'));\n        });\n    }\n    prepare(request) {\n        if (this.link.transport.prepare) {\n            return this.link.transport.prepare(request, this);\n        }\n        return Promise.resolve(request);\n    }\n    showLoading() {\n        if (this.link.transport.showLoading) {\n            return this.link.transport.showLoading();\n        }\n    }\n    makeSignatureProvider() {\n        return this.link.makeSignatureProvider([this.publicKey], this);\n    }\n    makeAuthorityProvider() {\n        return this.link.makeAuthorityProvider();\n    }\n    transact(args, options) {\n        return this.link.transact(args, options, this);\n    }\n}\n/**\n * Link session that sends every request over the transport.\n * @internal\n */\nexport class LinkFallbackSession extends LinkSession {\n    constructor(link, data, metadata) {\n        super();\n        this.type = 'fallback';\n        this.link = link;\n        this.auth = data.auth;\n        this.publicKey = data.publicKey;\n        this.metadata = metadata || {};\n        this.identifier = data.identifier;\n        this.serialize = () => ({\n            type: this.type,\n            data,\n            metadata: this.metadata,\n        });\n    }\n    onSuccess(request, result) {\n        if (this.link.transport.onSuccess) {\n            this.link.transport.onSuccess(request, result);\n        }\n    }\n    onFailure(request, error) {\n        if (this.link.transport.onFailure) {\n            this.link.transport.onFailure(request, error);\n        }\n    }\n    onRequest(request, cancel) {\n        if (this.link.transport.onSessionRequest) {\n            this.link.transport.onSessionRequest(this, request, cancel);\n        }\n        else {\n            this.link.transport.onRequest(request, cancel);\n        }\n    }\n    prepare(request) {\n        if (this.link.transport.prepare) {\n            return this.link.transport.prepare(request, this);\n        }\n        return Promise.resolve(request);\n    }\n    showLoading() {\n        if (this.link.transport.showLoading) {\n            return this.link.transport.showLoading();\n        }\n    }\n    makeSignatureProvider() {\n        return this.link.makeSignatureProvider([this.publicKey], this);\n    }\n    makeAuthorityProvider() {\n        return this.link.makeAuthorityProvider();\n    }\n    transact(args, options) {\n        return this.link.transact(args, options, this);\n    }\n}\n//# sourceMappingURL=link-session.js.map","import * as esr from 'eosio-signing-request';\nimport { JsonRpc } from 'eosjs';\nimport * as ecc from 'eosjs-ecc';\nimport WebSocket from 'isomorphic-ws';\nimport zlib from 'pako';\nimport { v4 as uuid } from 'uuid';\nimport { CancelError, IdentityError } from './errors';\nimport { defaults } from './link-options';\nimport { LinkChannelSession, LinkFallbackSession, LinkSession } from './link-session';\nimport { abiEncode, fetch, generatePrivateKey, normalizePublicKey, publicKeyEqual } from './utils';\n/**\n * Main class, also exposed as the default export of the library.\n *\n * Example:\n *\n * ```ts\n * import AnchorLink from 'anchor-link'\n * import ConsoleTransport from 'anchor-link-console-transport'\n *\n * const link = new AnchorLink({\n *     transport: new ConsoleTransport()\n * })\n *\n * const result = await link.transact({actions: myActions})\n * ```\n */\nexport class Link {\n    /** Create a new link instance. */\n    constructor(options) {\n        this.abiCache = new Map();\n        this.pendingAbis = new Map();\n        if (typeof options !== 'object') {\n            throw new TypeError('Missing options object');\n        }\n        if (!options.transport) {\n            throw new TypeError('options.transport is required, see https://github.com/greymass/anchor-link#transports');\n        }\n        if (options.rpc === undefined || typeof options.rpc === 'string') {\n            this.rpc = new JsonRpc(options.rpc || defaults.rpc, { fetch: fetch });\n        }\n        else {\n            this.rpc = options.rpc;\n        }\n        if (options.chainId) {\n            this.chainId =\n                typeof options.chainId === 'number'\n                    ? esr.nameToId(options.chainId)\n                    : options.chainId;\n        }\n        else {\n            this.chainId = defaults.chainId;\n        }\n        this.serviceAddress = (options.service || defaults.service).trim().replace(/\\/$/, '');\n        this.transport = options.transport;\n        if (options.storage !== null) {\n            this.storage = options.storage || this.transport.storage;\n        }\n        this.requestOptions = {\n            abiProvider: this,\n            textDecoder: options.textDecoder || new TextDecoder(),\n            textEncoder: options.textEncoder || new TextEncoder(),\n            zlib,\n        };\n    }\n    /**\n     * Fetch the ABI for given account, cached.\n     * @internal\n     */\n    async getAbi(account) {\n        let rv = this.abiCache.get(account);\n        if (!rv) {\n            let getAbi = this.pendingAbis.get(account);\n            if (!getAbi) {\n                getAbi = this.rpc.get_abi(account);\n                this.pendingAbis.set(account, getAbi);\n            }\n            rv = (await getAbi).abi;\n            this.pendingAbis.delete(account);\n            if (rv) {\n                this.abiCache.set(account, rv);\n            }\n        }\n        return rv;\n    }\n    /**\n     * Create a new unique buoy callback url.\n     * @internal\n     */\n    createCallbackUrl() {\n        return `${this.serviceAddress}/${uuid()}`;\n    }\n    /**\n     * Create a SigningRequest instance configured for this link.\n     * @internal\n     */\n    async createRequest(args, transport) {\n        const t = transport || this.transport;\n        // generate unique callback url\n        let request = await esr.SigningRequest.create({\n            ...args,\n            chainId: this.chainId,\n            broadcast: false,\n            callback: {\n                url: this.createCallbackUrl(),\n                background: true,\n            },\n        }, this.requestOptions);\n        if (t.prepare) {\n            request = await t.prepare(request);\n        }\n        return request;\n    }\n    /**\n     * Send a SigningRequest instance using this link.\n     * @internal\n     */\n    async sendRequest(request, transport, broadcast = false) {\n        const t = transport || this.transport;\n        try {\n            const linkUrl = request.data.callback;\n            if (!linkUrl.startsWith(this.serviceAddress)) {\n                throw new Error('Request must have a link callback');\n            }\n            if (request.data.flags !== 2) {\n                throw new Error('Invalid request flags');\n            }\n            // wait for callback or user cancel\n            const ctx = {};\n            const socket = waitForCallback(linkUrl, ctx).then((data) => {\n                if (typeof data.rejected === 'string') {\n                    throw new CancelError(`Rejected by wallet: ${data.rejected}`);\n                }\n                return data;\n            });\n            const cancel = new Promise((resolve, reject) => {\n                t.onRequest(request, (reason) => {\n                    if (ctx.cancel) {\n                        ctx.cancel();\n                    }\n                    if (typeof reason === 'string') {\n                        reject(new CancelError(reason));\n                    }\n                    else {\n                        reject(reason);\n                    }\n                });\n            });\n            const payload = await Promise.race([socket, cancel]);\n            const signer = {\n                actor: payload.sa,\n                permission: payload.sp,\n            };\n            const signatures = Object.keys(payload)\n                .filter((key) => key.startsWith('sig') && key !== 'sig0')\n                .map((key) => payload[key]);\n            // recreate transaction from request response\n            const resolved = await esr.ResolvedSigningRequest.fromPayload(payload, this.requestOptions);\n            const info = resolved.request.getInfo();\n            if (info['fuel_sig']) {\n                signatures.unshift(info['fuel_sig']);\n            }\n            const { serializedTransaction, transaction } = resolved;\n            const result = {\n                request: resolved.request,\n                serializedTransaction,\n                transaction,\n                signatures,\n                payload,\n                signer,\n            };\n            if (broadcast) {\n                const res = await this.rpc.push_transaction({\n                    signatures: result.signatures,\n                    serializedTransaction: result.serializedTransaction,\n                });\n                result.processed = res.processed;\n            }\n            if (t.onSuccess) {\n                t.onSuccess(request, result);\n            }\n            return result;\n        }\n        catch (error) {\n            if (t.onFailure) {\n                t.onFailure(request, error);\n            }\n            throw error;\n        }\n    }\n    /**\n     * Sign and optionally broadcast a EOSIO transaction, action or actions.\n     *\n     * Example:\n     *\n     * ```ts\n     * let result = await myLink.transact({transaction: myTx})\n     * ```\n     *\n     * @param args The action, actions or transaction to use.\n     * @param options Options for this transact call.\n     * @param transport Transport override, for internal use.\n     */\n    async transact(args, options, transport) {\n        const t = transport || this.transport;\n        const broadcast = options ? options.broadcast !== false : true;\n        // Initialize the loading state of the transport\n        if (t && t.showLoading) {\n            t.showLoading();\n        }\n        // eosjs transact compat: upgrade to transaction if args have any header fields\n        let anyArgs = args;\n        if (args.actions &&\n            (anyArgs.expiration ||\n                anyArgs.ref_block_num ||\n                anyArgs.ref_block_prefix ||\n                anyArgs.max_net_usage_words ||\n                anyArgs.max_cpu_usage_ms ||\n                anyArgs.delay_sec)) {\n            args = {\n                transaction: {\n                    expiration: '1970-01-01T00:00:00',\n                    ref_block_num: 0,\n                    ref_block_prefix: 0,\n                    max_net_usage_words: 0,\n                    max_cpu_usage_ms: 0,\n                    delay_sec: 0,\n                    ...anyArgs,\n                },\n            };\n        }\n        const request = await this.createRequest(args, t);\n        const result = await this.sendRequest(request, t, broadcast);\n        return result;\n    }\n    /**\n     * Send an identity request and verify the identity proof.\n     * @param requestPermission Optional request permission if the request is for a specific account or permission.\n     * @param info Metadata to add to the request.\n     * @note This is for advanced use-cases, you probably want to use [[Link.login]] instead.\n     */\n    async identify(requestPermission, info) {\n        const request = await this.createRequest({\n            identity: { permission: requestPermission || null },\n            info,\n        });\n        const res = await this.sendRequest(request);\n        if (!res.request.isIdentity()) {\n            throw new IdentityError(`Unexpected response`);\n        }\n        const message = Buffer.concat([\n            Buffer.from(request.getChainId(), 'hex'),\n            Buffer.from(res.serializedTransaction),\n            Buffer.alloc(32),\n        ]);\n        const { signer } = res;\n        const signerKey = ecc.recover(res.signatures[0], message);\n        const account = await this.rpc.get_account(signer.actor);\n        if (!account) {\n            throw new IdentityError(`Signature from unknown account: ${signer.actor}`);\n        }\n        const permission = account.permissions.find(({ perm_name }) => perm_name === signer.permission);\n        if (!permission) {\n            throw new IdentityError(`${signer.actor} signed for unknown permission: ${signer.permission}`);\n        }\n        const auth = permission.required_auth;\n        const keyAuth = auth.keys.find(({ key }) => publicKeyEqual(key, signerKey));\n        if (!keyAuth) {\n            throw new IdentityError(`${formatAuth(signer)} has no key matching id signature`);\n        }\n        if (auth.threshold > keyAuth.weight) {\n            throw new IdentityError(`${formatAuth(signer)} signature does not reach auth threshold`);\n        }\n        if (requestPermission) {\n            if ((requestPermission.actor !== esr.PlaceholderName &&\n                requestPermission.actor !== signer.actor) ||\n                (requestPermission.permission !== esr.PlaceholderPermission &&\n                    requestPermission.permission !== signer.permission)) {\n                throw new IdentityError(`Unexpected identity proof from ${formatAuth(signer)}, expected ${formatAuth(requestPermission)} `);\n            }\n        }\n        return {\n            ...res,\n            account,\n            signerKey,\n        };\n    }\n    /**\n     * Login and create a persistent session.\n     * @param identifier The session identifier, an EOSIO name (`[a-z1-5]{1,12}`).\n     *                   Should be set to the contract account if applicable.\n     */\n    async login(identifier) {\n        const privateKey = await generatePrivateKey();\n        const requestKey = ecc.privateToPublic(privateKey);\n        const createInfo = {\n            session_name: identifier,\n            request_key: requestKey,\n        };\n        const res = await this.identify(undefined, {\n            link: abiEncode(createInfo, 'link_create'),\n        });\n        const metadata = { sameDevice: res.request.getRawInfo()['return_path'] !== undefined };\n        let session;\n        if (res.payload.link_ch && res.payload.link_key && res.payload.link_name) {\n            session = new LinkChannelSession(this, {\n                identifier,\n                auth: res.signer,\n                publicKey: res.signerKey,\n                channel: {\n                    url: res.payload.link_ch,\n                    key: res.payload.link_key,\n                    name: res.payload.link_name,\n                },\n                requestKey: privateKey,\n            }, metadata);\n        }\n        else {\n            session = new LinkFallbackSession(this, {\n                identifier,\n                auth: res.signer,\n                publicKey: res.signerKey,\n            }, metadata);\n        }\n        if (this.storage) {\n            await this.storeSession(identifier, session);\n        }\n        return {\n            ...res,\n            session,\n        };\n    }\n    /**\n     * Restore previous session, see [[Link.login]] to create a new session.\n     * @param identifier The session identifier, should be same as what was used when creating the session with [[Link.login]].\n     * @param auth A specific session auth to restore, if omitted the most recently used session will be restored.\n     * @returns A [[LinkSession]] instance or null if no session can be found.\n     * @throws If no [[LinkStorage]] adapter is configured or there was an error retrieving the session data.\n     **/\n    async restoreSession(identifier, auth) {\n        if (!this.storage) {\n            throw new Error('Unable to restore session: No storage adapter configured');\n        }\n        let key;\n        if (auth) {\n            key = this.sessionKey(identifier, formatAuth(auth));\n        }\n        else {\n            let latest = (await this.listSessions(identifier))[0];\n            if (!latest) {\n                return null;\n            }\n            key = this.sessionKey(identifier, formatAuth(latest));\n        }\n        let data = await this.storage.read(key);\n        if (!data) {\n            return null;\n        }\n        let sessionData;\n        try {\n            sessionData = JSON.parse(data);\n        }\n        catch (error) {\n            throw new Error(`Unable to restore session: Stored JSON invalid (${error.message || String(error)})`);\n        }\n        const session = LinkSession.restore(this, sessionData);\n        if (auth) {\n            // update latest used\n            await this.touchSession(identifier, auth);\n        }\n        return session;\n    }\n    /**\n     * List stored session auths for given identifier.\n     * The most recently used session is at the top (index 0).\n     * @throws If no [[LinkStorage]] adapter is configured or there was an error retrieving the session list.\n     **/\n    async listSessions(identifier) {\n        if (!this.storage) {\n            throw new Error('Unable to list sessions: No storage adapter configured');\n        }\n        let key = this.sessionKey(identifier, 'list');\n        let list;\n        try {\n            list = JSON.parse((await this.storage.read(key)) || '[]');\n        }\n        catch (error) {\n            throw new Error(`Unable to list sessions: Stored JSON invalid (${error.message || String(error)})`);\n        }\n        return list;\n    }\n    /**\n     * Remove stored session for given identifier and auth.\n     * @throws If no [[LinkStorage]] adapter is configured or there was an error removing the session data.\n     */\n    async removeSession(identifier, auth) {\n        if (!this.storage) {\n            throw new Error('Unable to remove session: No storage adapter configured');\n        }\n        let key = this.sessionKey(identifier, formatAuth(auth));\n        await this.storage.remove(key);\n        await this.touchSession(identifier, auth, true);\n    }\n    /**\n     * Remove all stored sessions for given identifier.\n     * @throws If no [[LinkStorage]] adapter is configured or there was an error removing the session data.\n     */\n    async clearSessions(identifier) {\n        if (!this.storage) {\n            throw new Error('Unable to clear sessions: No storage adapter configured');\n        }\n        for (const auth of await this.listSessions(identifier)) {\n            await this.removeSession(identifier, auth);\n        }\n    }\n    /**\n     * Create an eosjs compatible signature provider using this link.\n     * @param availableKeys Keys the created provider will claim to be able to sign for.\n     * @param transport (internal) Transport override for this call.\n     * @note We don't know what keys are available so those have to be provided,\n     *       to avoid this use [[LinkSession.makeSignatureProvider]] instead. Sessions can be created with [[Link.login]].\n     */\n    makeSignatureProvider(availableKeys, transport) {\n        return {\n            getAvailableKeys: async () => availableKeys,\n            sign: async (args) => {\n                const t = transport || this.transport;\n                let request = esr.SigningRequest.fromTransaction(args.chainId, args.serializedTransaction, this.requestOptions);\n                request.setCallback(this.createCallbackUrl(), true);\n                request.setBroadcast(false);\n                if (t.prepare) {\n                    request = await t.prepare(request);\n                }\n                const { serializedTransaction, signatures, } = await this.sendRequest(request, t);\n                return {\n                    ...args,\n                    serializedTransaction,\n                    signatures,\n                };\n            },\n        };\n    }\n    /**\n     * Create an eosjs authority provider using this link.\n     * @note Uses the configured RPC Node's `/v1/chain/get_required_keys` API to resolve keys.\n     */\n    makeAuthorityProvider() {\n        const { rpc } = this;\n        return {\n            async getRequiredKeys(args) {\n                const { availableKeys, transaction } = args;\n                const result = await rpc.fetch('/v1/chain/get_required_keys', {\n                    transaction,\n                    available_keys: availableKeys.map(normalizePublicKey),\n                });\n                return result.required_keys.map(normalizePublicKey);\n            },\n        };\n    }\n    /** Makes sure session is in storage list of sessions and moves it to top (most recently used). */\n    async touchSession(identifier, auth, remove = false) {\n        let auths = await this.listSessions(identifier);\n        let formattedAuth = formatAuth(auth);\n        let existing = auths.findIndex((a) => formatAuth(a) === formattedAuth);\n        if (existing >= 0) {\n            auths.splice(existing, 1);\n        }\n        if (remove === false) {\n            auths.unshift(auth);\n        }\n        let key = this.sessionKey(identifier, 'list');\n        await this.storage.write(key, JSON.stringify(auths));\n    }\n    /** Makes sure session is in storage list of sessions and moves it to top (most recently used). */\n    async storeSession(identifier, session) {\n        let key = this.sessionKey(identifier, formatAuth(session.auth));\n        let data = JSON.stringify(session.serialize());\n        await this.storage.write(key, data);\n        await this.touchSession(identifier, session.auth);\n    }\n    /** Session storage key for identifier and suffix. */\n    sessionKey(identifier, suffix) {\n        return [this.chainId, identifier, suffix].join('-');\n    }\n}\n/**\n * Connect to a WebSocket channel and wait for a message.\n * @internal\n */\nfunction waitForCallback(url, ctx) {\n    return new Promise((resolve, reject) => {\n        let active = true;\n        let retries = 0;\n        const socketUrl = url.replace(/^http/, 'ws');\n        const handleResponse = (response) => {\n            try {\n                resolve(JSON.parse(response));\n            }\n            catch (error) {\n                error.message = 'Unable to parse callback JSON: ' + error.message;\n                reject(error);\n            }\n        };\n        const connect = () => {\n            const socket = new WebSocket(socketUrl);\n            ctx.cancel = () => {\n                active = false;\n                if (socket.readyState === WebSocket.OPEN ||\n                    socket.readyState === WebSocket.CONNECTING) {\n                    socket.close();\n                }\n            };\n            socket.onmessage = (event) => {\n                active = false;\n                if (socket.readyState === WebSocket.OPEN) {\n                    socket.close();\n                }\n                if (typeof Blob !== 'undefined' && event.data instanceof Blob) {\n                    const reader = new FileReader();\n                    reader.onload = () => {\n                        handleResponse(reader.result);\n                    };\n                    reader.onerror = (error) => {\n                        reject(error);\n                    };\n                    reader.readAsText(event.data);\n                }\n                else {\n                    if (typeof event.data === 'string') {\n                        handleResponse(event.data);\n                    }\n                    else {\n                        handleResponse(event.data.toString());\n                    }\n                }\n            };\n            socket.onopen = () => {\n                retries = 0;\n            };\n            socket.onerror = (error) => { };\n            socket.onclose = (close) => {\n                if (active) {\n                    setTimeout(connect, backoff(retries++));\n                }\n            };\n        };\n        connect();\n    });\n}\n/**\n * Exponential backoff function that caps off at 10s after 10 tries.\n * https://i.imgur.com/IrUDcJp.png\n * @internal\n */\nfunction backoff(tries) {\n    return Math.min(Math.pow(tries * 10, 2), 10 * 1000);\n}\n/**\n * Format a EOSIO permission level in the format `actor@permission` taking placeholders into consideration.\n * @internal\n */\nfunction formatAuth(auth) {\n    let { actor, permission } = auth;\n    if (actor === esr.PlaceholderName) {\n        actor = '<any>';\n    }\n    if (permission === esr.PlaceholderName || permission === esr.PlaceholderPermission) {\n        permission = '<any>';\n    }\n    return `${actor}@${permission}`;\n}\n//# sourceMappingURL=link.js.map","// can-promise has a crash in some versions of react native that dont have\n// standard global objects\n// https://github.com/soldair/node-qrcode/issues/157\n\nmodule.exports = function () {\n  return typeof Promise === 'function' && Promise.prototype && Promise.prototype.then\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/**\n * Implementation of a subset of node.js Buffer methods for the browser.\n * Based on https://github.com/feross/buffer\n */\n\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar isArray = require('isarray')\n\nfunction typedArraySupport () {\n  // Can typed array instances be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nvar K_MAX_LENGTH = Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n\nfunction Buffer (arg, offset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, offset, length)\n  }\n\n  if (typeof arg === 'number') {\n    return allocUnsafe(this, arg)\n  }\n\n  return from(this, arg, offset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n\n  // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true,\n      enumerable: false,\n      writable: false\n    })\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\nfunction createBuffer (that, length) {\n  var buf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    buf = new Uint8Array(length)\n    buf.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    buf = that\n    if (buf === null) {\n      buf = new Buffer(length)\n    }\n    buf.length = length\n  }\n\n  return buf\n}\n\nfunction allocUnsafe (that, size) {\n  var buf = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      buf[i] = 0\n    }\n  }\n\n  return buf\n}\n\nfunction fromString (that, string) {\n  var length = byteLength(string) | 0\n  var buf = createBuffer(that, length)\n\n  var actual = buf.write(string)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    buf.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    buf = fromArrayLike(that, buf)\n  }\n\n  return buf\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(that, len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction byteLength (string) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  return utf8ToBytes(string).length\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction from (that, value, offset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, offset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, offset)\n  }\n\n  return fromObject(that, value)\n}\n\nBuffer.prototype.write = function write (string, offset, length) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n    } else {\n      length = undefined\n    }\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  return utf8Write(this, string, offset, length)\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    // Return an augmented `Uint8Array` instance\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\nBuffer.prototype.fill = function fill (val, start, end) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : new Buffer(val)\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return createBuffer(null, 0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = allocUnsafe(null, length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nBuffer.byteLength = byteLength\n\nBuffer.prototype._isBuffer = true\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nmodule.exports.alloc = function (size) {\n  var buffer = new Buffer(size)\n  buffer.fill(0)\n  return buffer\n}\n\nmodule.exports.from = function (data) {\n  return new Buffer(data)\n}\n","var toSJISFunction\nvar CODEWORDS_COUNT = [\n  0, // Not used\n  26, 44, 70, 100, 134, 172, 196, 242, 292, 346,\n  404, 466, 532, 581, 655, 733, 815, 901, 991, 1085,\n  1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185,\n  2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706\n]\n\n/**\n * Returns the QR Code size for the specified version\n *\n * @param  {Number} version QR Code version\n * @return {Number}         size of QR code\n */\nexports.getSymbolSize = function getSymbolSize (version) {\n  if (!version) throw new Error('\"version\" cannot be null or undefined')\n  if (version < 1 || version > 40) throw new Error('\"version\" should be in range from 1 to 40')\n  return version * 4 + 17\n}\n\n/**\n * Returns the total number of codewords used to store data and EC information.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Data length in bits\n */\nexports.getSymbolTotalCodewords = function getSymbolTotalCodewords (version) {\n  return CODEWORDS_COUNT[version]\n}\n\n/**\n * Encode data with Bose-Chaudhuri-Hocquenghem\n *\n * @param  {Number} data Value to encode\n * @return {Number}      Encoded value\n */\nexports.getBCHDigit = function (data) {\n  var digit = 0\n\n  while (data !== 0) {\n    digit++\n    data >>>= 1\n  }\n\n  return digit\n}\n\nexports.setToSJISFunction = function setToSJISFunction (f) {\n  if (typeof f !== 'function') {\n    throw new Error('\"toSJISFunc\" is not a valid function.')\n  }\n\n  toSJISFunction = f\n}\n\nexports.isKanjiModeEnabled = function () {\n  return typeof toSJISFunction !== 'undefined'\n}\n\nexports.toSJIS = function toSJIS (kanji) {\n  return toSJISFunction(kanji)\n}\n","exports.L = { bit: 1 }\nexports.M = { bit: 0 }\nexports.Q = { bit: 3 }\nexports.H = { bit: 2 }\n\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  var lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'l':\n    case 'low':\n      return exports.L\n\n    case 'm':\n    case 'medium':\n      return exports.M\n\n    case 'q':\n    case 'quartile':\n      return exports.Q\n\n    case 'h':\n    case 'high':\n      return exports.H\n\n    default:\n      throw new Error('Unknown EC Level: ' + string)\n  }\n}\n\nexports.isValid = function isValid (level) {\n  return level && typeof level.bit !== 'undefined' &&\n    level.bit >= 0 && level.bit < 4\n}\n\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n","function BitBuffer () {\n  this.buffer = []\n  this.length = 0\n}\n\nBitBuffer.prototype = {\n\n  get: function (index) {\n    var bufIndex = Math.floor(index / 8)\n    return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) === 1\n  },\n\n  put: function (num, length) {\n    for (var i = 0; i < length; i++) {\n      this.putBit(((num >>> (length - i - 1)) & 1) === 1)\n    }\n  },\n\n  getLengthInBits: function () {\n    return this.length\n  },\n\n  putBit: function (bit) {\n    var bufIndex = Math.floor(this.length / 8)\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0)\n    }\n\n    if (bit) {\n      this.buffer[bufIndex] |= (0x80 >>> (this.length % 8))\n    }\n\n    this.length++\n  }\n}\n\nmodule.exports = BitBuffer\n","var BufferUtil = require('../utils/buffer')\n\n/**\n * Helper class to handle QR Code symbol modules\n *\n * @param {Number} size Symbol size\n */\nfunction BitMatrix (size) {\n  if (!size || size < 1) {\n    throw new Error('BitMatrix size must be defined and greater than 0')\n  }\n\n  this.size = size\n  this.data = BufferUtil.alloc(size * size)\n  this.reservedBit = BufferUtil.alloc(size * size)\n}\n\n/**\n * Set bit value at specified location\n * If reserved flag is set, this bit will be ignored during masking process\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n * @param {Boolean} reserved\n */\nBitMatrix.prototype.set = function (row, col, value, reserved) {\n  var index = row * this.size + col\n  this.data[index] = value\n  if (reserved) this.reservedBit[index] = true\n}\n\n/**\n * Returns bit value at specified location\n *\n * @param  {Number}  row\n * @param  {Number}  col\n * @return {Boolean}\n */\nBitMatrix.prototype.get = function (row, col) {\n  return this.data[row * this.size + col]\n}\n\n/**\n * Applies xor operator at specified location\n * (used during masking process)\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n */\nBitMatrix.prototype.xor = function (row, col, value) {\n  this.data[row * this.size + col] ^= value\n}\n\n/**\n * Check if bit at specified location is reserved\n *\n * @param {Number}   row\n * @param {Number}   col\n * @return {Boolean}\n */\nBitMatrix.prototype.isReserved = function (row, col) {\n  return this.reservedBit[row * this.size + col]\n}\n\nmodule.exports = BitMatrix\n","/**\n * Alignment pattern are fixed reference pattern in defined positions\n * in a matrix symbology, which enables the decode software to re-synchronise\n * the coordinate mapping of the image modules in the event of moderate amounts\n * of distortion of the image.\n *\n * Alignment patterns are present only in QR Code symbols of version 2 or larger\n * and their number depends on the symbol version.\n */\n\nvar getSymbolSize = require('./utils').getSymbolSize\n\n/**\n * Calculate the row/column coordinates of the center module of each alignment pattern\n * for the specified QR Code version.\n *\n * The alignment patterns are positioned symmetrically on either side of the diagonal\n * running from the top left corner of the symbol to the bottom right corner.\n *\n * Since positions are simmetrical only half of the coordinates are returned.\n * Each item of the array will represent in turn the x and y coordinate.\n * @see {@link getPositions}\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinate\n */\nexports.getRowColCoords = function getRowColCoords (version) {\n  if (version === 1) return []\n\n  var posCount = Math.floor(version / 7) + 2\n  var size = getSymbolSize(version)\n  var intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2\n  var positions = [size - 7] // Last coord is always (size - 7)\n\n  for (var i = 1; i < posCount - 1; i++) {\n    positions[i] = positions[i - 1] - intervals\n  }\n\n  positions.push(6) // First coord is always 6\n\n  return positions.reverse()\n}\n\n/**\n * Returns an array containing the positions of each alignment pattern.\n * Each array's element represent the center point of the pattern as (x, y) coordinates\n *\n * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\n * and filtering out the items that overlaps with finder pattern\n *\n * @example\n * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\n * The alignment patterns, therefore, are to be centered on (row, column)\n * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\n * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\n * and are not therefore used for alignment patterns.\n *\n * var pos = getPositions(7)\n * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  var coords = []\n  var pos = exports.getRowColCoords(version)\n  var posLength = pos.length\n\n  for (var i = 0; i < posLength; i++) {\n    for (var j = 0; j < posLength; j++) {\n      // Skip if position is occupied by finder patterns\n      if ((i === 0 && j === 0) ||             // top-left\n          (i === 0 && j === posLength - 1) || // bottom-left\n          (i === posLength - 1 && j === 0)) { // top-right\n        continue\n      }\n\n      coords.push([pos[i], pos[j]])\n    }\n  }\n\n  return coords\n}\n","var getSymbolSize = require('./utils').getSymbolSize\nvar FINDER_PATTERN_SIZE = 7\n\n/**\n * Returns an array containing the positions of each finder pattern.\n * Each array's element represent the top-left point of the pattern as (x, y) coordinates\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  var size = getSymbolSize(version)\n\n  return [\n    // top-left\n    [0, 0],\n    // top-right\n    [size - FINDER_PATTERN_SIZE, 0],\n    // bottom-left\n    [0, size - FINDER_PATTERN_SIZE]\n  ]\n}\n","/**\n * Data mask pattern reference\n * @type {Object}\n */\nexports.Patterns = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7\n}\n\n/**\n * Weighted penalty scores for the undesirable features\n * @type {Object}\n */\nvar PenaltyScores = {\n  N1: 3,\n  N2: 3,\n  N3: 40,\n  N4: 10\n}\n\n/**\n * Check if mask pattern value is valid\n *\n * @param  {Number}  mask    Mask pattern\n * @return {Boolean}         true if valid, false otherwise\n */\nexports.isValid = function isValid (mask) {\n  return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7\n}\n\n/**\n * Returns mask pattern from a value.\n * If value is not valid, returns undefined\n *\n * @param  {Number|String} value        Mask pattern value\n * @return {Number}                     Valid mask pattern or undefined\n */\nexports.from = function from (value) {\n  return exports.isValid(value) ? parseInt(value, 10) : undefined\n}\n\n/**\n* Find adjacent modules in row/column with the same color\n* and assign a penalty value.\n*\n* Points: N1 + i\n* i is the amount by which the number of adjacent modules of the same color exceeds 5\n*/\nexports.getPenaltyN1 = function getPenaltyN1 (data) {\n  var size = data.size\n  var points = 0\n  var sameCountCol = 0\n  var sameCountRow = 0\n  var lastCol = null\n  var lastRow = null\n\n  for (var row = 0; row < size; row++) {\n    sameCountCol = sameCountRow = 0\n    lastCol = lastRow = null\n\n    for (var col = 0; col < size; col++) {\n      var module = data.get(row, col)\n      if (module === lastCol) {\n        sameCountCol++\n      } else {\n        if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n        lastCol = module\n        sameCountCol = 1\n      }\n\n      module = data.get(col, row)\n      if (module === lastRow) {\n        sameCountRow++\n      } else {\n        if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n        lastRow = module\n        sameCountRow = 1\n      }\n    }\n\n    if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n    if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n  }\n\n  return points\n}\n\n/**\n * Find 2x2 blocks with the same color and assign a penalty value\n *\n * Points: N2 * (m - 1) * (n - 1)\n */\nexports.getPenaltyN2 = function getPenaltyN2 (data) {\n  var size = data.size\n  var points = 0\n\n  for (var row = 0; row < size - 1; row++) {\n    for (var col = 0; col < size - 1; col++) {\n      var last = data.get(row, col) +\n        data.get(row, col + 1) +\n        data.get(row + 1, col) +\n        data.get(row + 1, col + 1)\n\n      if (last === 4 || last === 0) points++\n    }\n  }\n\n  return points * PenaltyScores.N2\n}\n\n/**\n * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\n * preceded or followed by light area 4 modules wide\n *\n * Points: N3 * number of pattern found\n */\nexports.getPenaltyN3 = function getPenaltyN3 (data) {\n  var size = data.size\n  var points = 0\n  var bitsCol = 0\n  var bitsRow = 0\n\n  for (var row = 0; row < size; row++) {\n    bitsCol = bitsRow = 0\n    for (var col = 0; col < size; col++) {\n      bitsCol = ((bitsCol << 1) & 0x7FF) | data.get(row, col)\n      if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D)) points++\n\n      bitsRow = ((bitsRow << 1) & 0x7FF) | data.get(col, row)\n      if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D)) points++\n    }\n  }\n\n  return points * PenaltyScores.N3\n}\n\n/**\n * Calculate proportion of dark modules in entire symbol\n *\n * Points: N4 * k\n *\n * k is the rating of the deviation of the proportion of dark modules\n * in the symbol from 50% in steps of 5%\n */\nexports.getPenaltyN4 = function getPenaltyN4 (data) {\n  var darkCount = 0\n  var modulesCount = data.data.length\n\n  for (var i = 0; i < modulesCount; i++) darkCount += data.data[i]\n\n  var k = Math.abs(Math.ceil((darkCount * 100 / modulesCount) / 5) - 10)\n\n  return k * PenaltyScores.N4\n}\n\n/**\n * Return mask value at given position\n *\n * @param  {Number} maskPattern Pattern reference value\n * @param  {Number} i           Row\n * @param  {Number} j           Column\n * @return {Boolean}            Mask value\n */\nfunction getMaskAt (maskPattern, i, j) {\n  switch (maskPattern) {\n    case exports.Patterns.PATTERN000: return (i + j) % 2 === 0\n    case exports.Patterns.PATTERN001: return i % 2 === 0\n    case exports.Patterns.PATTERN010: return j % 3 === 0\n    case exports.Patterns.PATTERN011: return (i + j) % 3 === 0\n    case exports.Patterns.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0\n    case exports.Patterns.PATTERN101: return (i * j) % 2 + (i * j) % 3 === 0\n    case exports.Patterns.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 === 0\n    case exports.Patterns.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 === 0\n\n    default: throw new Error('bad maskPattern:' + maskPattern)\n  }\n}\n\n/**\n * Apply a mask pattern to a BitMatrix\n *\n * @param  {Number}    pattern Pattern reference number\n * @param  {BitMatrix} data    BitMatrix data\n */\nexports.applyMask = function applyMask (pattern, data) {\n  var size = data.size\n\n  for (var col = 0; col < size; col++) {\n    for (var row = 0; row < size; row++) {\n      if (data.isReserved(row, col)) continue\n      data.xor(row, col, getMaskAt(pattern, row, col))\n    }\n  }\n}\n\n/**\n * Returns the best mask pattern for data\n *\n * @param  {BitMatrix} data\n * @return {Number} Mask pattern reference number\n */\nexports.getBestMask = function getBestMask (data, setupFormatFunc) {\n  var numPatterns = Object.keys(exports.Patterns).length\n  var bestPattern = 0\n  var lowerPenalty = Infinity\n\n  for (var p = 0; p < numPatterns; p++) {\n    setupFormatFunc(p)\n    exports.applyMask(p, data)\n\n    // Calculate penalty\n    var penalty =\n      exports.getPenaltyN1(data) +\n      exports.getPenaltyN2(data) +\n      exports.getPenaltyN3(data) +\n      exports.getPenaltyN4(data)\n\n    // Undo previously applied mask\n    exports.applyMask(p, data)\n\n    if (penalty < lowerPenalty) {\n      lowerPenalty = penalty\n      bestPattern = p\n    }\n  }\n\n  return bestPattern\n}\n","var ECLevel = require('./error-correction-level')\r\n\r\nvar EC_BLOCKS_TABLE = [\r\n// L  M  Q  H\r\n  1, 1, 1, 1,\r\n  1, 1, 1, 1,\r\n  1, 1, 2, 2,\r\n  1, 2, 2, 4,\r\n  1, 2, 4, 4,\r\n  2, 4, 4, 4,\r\n  2, 4, 6, 5,\r\n  2, 4, 6, 6,\r\n  2, 5, 8, 8,\r\n  4, 5, 8, 8,\r\n  4, 5, 8, 11,\r\n  4, 8, 10, 11,\r\n  4, 9, 12, 16,\r\n  4, 9, 16, 16,\r\n  6, 10, 12, 18,\r\n  6, 10, 17, 16,\r\n  6, 11, 16, 19,\r\n  6, 13, 18, 21,\r\n  7, 14, 21, 25,\r\n  8, 16, 20, 25,\r\n  8, 17, 23, 25,\r\n  9, 17, 23, 34,\r\n  9, 18, 25, 30,\r\n  10, 20, 27, 32,\r\n  12, 21, 29, 35,\r\n  12, 23, 34, 37,\r\n  12, 25, 34, 40,\r\n  13, 26, 35, 42,\r\n  14, 28, 38, 45,\r\n  15, 29, 40, 48,\r\n  16, 31, 43, 51,\r\n  17, 33, 45, 54,\r\n  18, 35, 48, 57,\r\n  19, 37, 51, 60,\r\n  19, 38, 53, 63,\r\n  20, 40, 56, 66,\r\n  21, 43, 59, 70,\r\n  22, 45, 62, 74,\r\n  24, 47, 65, 77,\r\n  25, 49, 68, 81\r\n]\r\n\r\nvar EC_CODEWORDS_TABLE = [\r\n// L  M  Q  H\r\n  7, 10, 13, 17,\r\n  10, 16, 22, 28,\r\n  15, 26, 36, 44,\r\n  20, 36, 52, 64,\r\n  26, 48, 72, 88,\r\n  36, 64, 96, 112,\r\n  40, 72, 108, 130,\r\n  48, 88, 132, 156,\r\n  60, 110, 160, 192,\r\n  72, 130, 192, 224,\r\n  80, 150, 224, 264,\r\n  96, 176, 260, 308,\r\n  104, 198, 288, 352,\r\n  120, 216, 320, 384,\r\n  132, 240, 360, 432,\r\n  144, 280, 408, 480,\r\n  168, 308, 448, 532,\r\n  180, 338, 504, 588,\r\n  196, 364, 546, 650,\r\n  224, 416, 600, 700,\r\n  224, 442, 644, 750,\r\n  252, 476, 690, 816,\r\n  270, 504, 750, 900,\r\n  300, 560, 810, 960,\r\n  312, 588, 870, 1050,\r\n  336, 644, 952, 1110,\r\n  360, 700, 1020, 1200,\r\n  390, 728, 1050, 1260,\r\n  420, 784, 1140, 1350,\r\n  450, 812, 1200, 1440,\r\n  480, 868, 1290, 1530,\r\n  510, 924, 1350, 1620,\r\n  540, 980, 1440, 1710,\r\n  570, 1036, 1530, 1800,\r\n  570, 1064, 1590, 1890,\r\n  600, 1120, 1680, 1980,\r\n  630, 1204, 1770, 2100,\r\n  660, 1260, 1860, 2220,\r\n  720, 1316, 1950, 2310,\r\n  750, 1372, 2040, 2430\r\n]\r\n\r\n/**\r\n * Returns the number of error correction block that the QR Code should contain\r\n * for the specified version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction blocks\r\n */\r\nexports.getBlocksCount = function getBlocksCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the number of error correction codewords to use for the specified\r\n * version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction codewords\r\n */\r\nexports.getTotalCodewordsCount = function getTotalCodewordsCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n","var BufferUtil = require('../utils/buffer')\n\nvar EXP_TABLE = BufferUtil.alloc(512)\nvar LOG_TABLE = BufferUtil.alloc(256)\n/**\n * Precompute the log and anti-log tables for faster computation later\n *\n * For each possible value in the galois field 2^8, we will pre-compute\n * the logarithm and anti-logarithm (exponential) of this value\n *\n * ref {@link https://en.wikiversity.org/wiki/Reed%E2%80%93Solomon_codes_for_coders#Introduction_to_mathematical_fields}\n */\n;(function initTables () {\n  var x = 1\n  for (var i = 0; i < 255; i++) {\n    EXP_TABLE[i] = x\n    LOG_TABLE[x] = i\n\n    x <<= 1 // multiply by 2\n\n    // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\n    // This means that when a number is 256 or larger, it should be XORed with 0x11D.\n    if (x & 0x100) { // similar to x >= 256, but a lot faster (because 0x100 == 256)\n      x ^= 0x11D\n    }\n  }\n\n  // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\n  // stay inside the bounds (because we will mainly use this table for the multiplication of\n  // two GF numbers, no more).\n  // @see {@link mul}\n  for (i = 255; i < 512; i++) {\n    EXP_TABLE[i] = EXP_TABLE[i - 255]\n  }\n}())\n\n/**\n * Returns log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.log = function log (n) {\n  if (n < 1) throw new Error('log(' + n + ')')\n  return LOG_TABLE[n]\n}\n\n/**\n * Returns anti-log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.exp = function exp (n) {\n  return EXP_TABLE[n]\n}\n\n/**\n * Multiplies two number inside Galois Field\n *\n * @param  {Number} x\n * @param  {Number} y\n * @return {Number}\n */\nexports.mul = function mul (x, y) {\n  if (x === 0 || y === 0) return 0\n\n  // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized\n  // @see {@link initTables}\n  return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]]\n}\n","var BufferUtil = require('../utils/buffer')\nvar GF = require('./galois-field')\n\n/**\n * Multiplies two polynomials inside Galois Field\n *\n * @param  {Buffer} p1 Polynomial\n * @param  {Buffer} p2 Polynomial\n * @return {Buffer}    Product of p1 and p2\n */\nexports.mul = function mul (p1, p2) {\n  var coeff = BufferUtil.alloc(p1.length + p2.length - 1)\n\n  for (var i = 0; i < p1.length; i++) {\n    for (var j = 0; j < p2.length; j++) {\n      coeff[i + j] ^= GF.mul(p1[i], p2[j])\n    }\n  }\n\n  return coeff\n}\n\n/**\n * Calculate the remainder of polynomials division\n *\n * @param  {Buffer} divident Polynomial\n * @param  {Buffer} divisor  Polynomial\n * @return {Buffer}          Remainder\n */\nexports.mod = function mod (divident, divisor) {\n  var result = BufferUtil.from(divident)\n\n  while ((result.length - divisor.length) >= 0) {\n    var coeff = result[0]\n\n    for (var i = 0; i < divisor.length; i++) {\n      result[i] ^= GF.mul(divisor[i], coeff)\n    }\n\n    // remove all zeros from buffer head\n    var offset = 0\n    while (offset < result.length && result[offset] === 0) offset++\n    result = result.slice(offset)\n  }\n\n  return result\n}\n\n/**\n * Generate an irreducible generator polynomial of specified degree\n * (used by Reed-Solomon encoder)\n *\n * @param  {Number} degree Degree of the generator polynomial\n * @return {Buffer}        Buffer containing polynomial coefficients\n */\nexports.generateECPolynomial = function generateECPolynomial (degree) {\n  var poly = BufferUtil.from([1])\n  for (var i = 0; i < degree; i++) {\n    poly = exports.mul(poly, [1, GF.exp(i)])\n  }\n\n  return poly\n}\n","var BufferUtil = require('../utils/buffer')\nvar Polynomial = require('./polynomial')\nvar Buffer = require('buffer').Buffer\n\nfunction ReedSolomonEncoder (degree) {\n  this.genPoly = undefined\n  this.degree = degree\n\n  if (this.degree) this.initialize(this.degree)\n}\n\n/**\n * Initialize the encoder.\n * The input param should correspond to the number of error correction codewords.\n *\n * @param  {Number} degree\n */\nReedSolomonEncoder.prototype.initialize = function initialize (degree) {\n  // create an irreducible generator polynomial\n  this.degree = degree\n  this.genPoly = Polynomial.generateECPolynomial(this.degree)\n}\n\n/**\n * Encodes a chunk of data\n *\n * @param  {Buffer} data Buffer containing input data\n * @return {Buffer}      Buffer containing encoded data\n */\nReedSolomonEncoder.prototype.encode = function encode (data) {\n  if (!this.genPoly) {\n    throw new Error('Encoder not initialized')\n  }\n\n  // Calculate EC for this data block\n  // extends data size to data+genPoly size\n  var pad = BufferUtil.alloc(this.degree)\n  var paddedData = Buffer.concat([data, pad], data.length + this.degree)\n\n  // The error correction codewords are the remainder after dividing the data codewords\n  // by a generator polynomial\n  var remainder = Polynomial.mod(paddedData, this.genPoly)\n\n  // return EC data blocks (last n byte, where n is the degree of genPoly)\n  // If coefficients number in remainder are less than genPoly degree,\n  // pad with 0s to the left to reach the needed number of coefficients\n  var start = this.degree - remainder.length\n  if (start > 0) {\n    var buff = BufferUtil.alloc(this.degree)\n    remainder.copy(buff, start)\n\n    return buff\n  }\n\n  return remainder\n}\n\nmodule.exports = ReedSolomonEncoder\n","var numeric = '[0-9]+'\nvar alphanumeric = '[A-Z $%*+\\\\-./:]+'\nvar kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' +\n  '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' +\n  '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' +\n  '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+'\nkanji = kanji.replace(/u/g, '\\\\u')\n\nvar byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + kanji + ')(?:.|[\\r\\n]))+'\n\nexports.KANJI = new RegExp(kanji, 'g')\nexports.BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g')\nexports.BYTE = new RegExp(byte, 'g')\nexports.NUMERIC = new RegExp(numeric, 'g')\nexports.ALPHANUMERIC = new RegExp(alphanumeric, 'g')\n\nvar TEST_KANJI = new RegExp('^' + kanji + '$')\nvar TEST_NUMERIC = new RegExp('^' + numeric + '$')\nvar TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$')\n\nexports.testKanji = function testKanji (str) {\n  return TEST_KANJI.test(str)\n}\n\nexports.testNumeric = function testNumeric (str) {\n  return TEST_NUMERIC.test(str)\n}\n\nexports.testAlphanumeric = function testAlphanumeric (str) {\n  return TEST_ALPHANUMERIC.test(str)\n}\n","var VersionCheck = require('./version-check')\nvar Regex = require('./regex')\n\n/**\n * Numeric mode encodes data from the decimal digit set (0 - 9)\n * (byte values 30HEX to 39HEX).\n * Normally, 3 data characters are represented by 10 bits.\n *\n * @type {Object}\n */\nexports.NUMERIC = {\n  id: 'Numeric',\n  bit: 1 << 0,\n  ccBits: [10, 12, 14]\n}\n\n/**\n * Alphanumeric mode encodes data from a set of 45 characters,\n * i.e. 10 numeric digits (0 - 9),\n *      26 alphabetic characters (A - Z),\n *   and 9 symbols (SP, $, %, *, +, -, ., /, :).\n * Normally, two input characters are represented by 11 bits.\n *\n * @type {Object}\n */\nexports.ALPHANUMERIC = {\n  id: 'Alphanumeric',\n  bit: 1 << 1,\n  ccBits: [9, 11, 13]\n}\n\n/**\n * In byte mode, data is encoded at 8 bits per character.\n *\n * @type {Object}\n */\nexports.BYTE = {\n  id: 'Byte',\n  bit: 1 << 2,\n  ccBits: [8, 16, 16]\n}\n\n/**\n * The Kanji mode efficiently encodes Kanji characters in accordance with\n * the Shift JIS system based on JIS X 0208.\n * The Shift JIS values are shifted from the JIS X 0208 values.\n * JIS X 0208 gives details of the shift coded representation.\n * Each two-byte character value is compacted to a 13-bit binary codeword.\n *\n * @type {Object}\n */\nexports.KANJI = {\n  id: 'Kanji',\n  bit: 1 << 3,\n  ccBits: [8, 10, 12]\n}\n\n/**\n * Mixed mode will contain a sequences of data in a combination of any of\n * the modes described above\n *\n * @type {Object}\n */\nexports.MIXED = {\n  bit: -1\n}\n\n/**\n * Returns the number of bits needed to store the data length\n * according to QR Code specifications.\n *\n * @param  {Mode}   mode    Data mode\n * @param  {Number} version QR Code version\n * @return {Number}         Number of bits\n */\nexports.getCharCountIndicator = function getCharCountIndicator (mode, version) {\n  if (!mode.ccBits) throw new Error('Invalid mode: ' + mode)\n\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid version: ' + version)\n  }\n\n  if (version >= 1 && version < 10) return mode.ccBits[0]\n  else if (version < 27) return mode.ccBits[1]\n  return mode.ccBits[2]\n}\n\n/**\n * Returns the most efficient mode to store the specified data\n *\n * @param  {String} dataStr Input data string\n * @return {Mode}           Best mode\n */\nexports.getBestModeForData = function getBestModeForData (dataStr) {\n  if (Regex.testNumeric(dataStr)) return exports.NUMERIC\n  else if (Regex.testAlphanumeric(dataStr)) return exports.ALPHANUMERIC\n  else if (Regex.testKanji(dataStr)) return exports.KANJI\n  else return exports.BYTE\n}\n\n/**\n * Return mode name as string\n *\n * @param {Mode} mode Mode object\n * @returns {String}  Mode name\n */\nexports.toString = function toString (mode) {\n  if (mode && mode.id) return mode.id\n  throw new Error('Invalid mode')\n}\n\n/**\n * Check if input param is a valid mode object\n *\n * @param   {Mode}    mode Mode object\n * @returns {Boolean} True if valid mode, false otherwise\n */\nexports.isValid = function isValid (mode) {\n  return mode && mode.bit && mode.ccBits\n}\n\n/**\n * Get mode object from its name\n *\n * @param   {String} string Mode name\n * @returns {Mode}          Mode object\n */\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  var lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'numeric':\n      return exports.NUMERIC\n    case 'alphanumeric':\n      return exports.ALPHANUMERIC\n    case 'kanji':\n      return exports.KANJI\n    case 'byte':\n      return exports.BYTE\n    default:\n      throw new Error('Unknown mode: ' + string)\n  }\n}\n\n/**\n * Returns mode from a value.\n * If value is not a valid mode, returns defaultValue\n *\n * @param  {Mode|String} value        Encoding mode\n * @param  {Mode}        defaultValue Fallback value\n * @return {Mode}                     Encoding mode\n */\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n","var Utils = require('./utils')\nvar ECCode = require('./error-correction-code')\nvar ECLevel = require('./error-correction-level')\nvar Mode = require('./mode')\nvar VersionCheck = require('./version-check')\nvar isArray = require('isarray')\n\n// Generator polynomial used to encode version information\nvar G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0)\nvar G18_BCH = Utils.getBCHDigit(G18)\n\nfunction getBestVersionForDataLength (mode, length, errorCorrectionLevel) {\n  for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\nfunction getReservedBitsCount (mode, version) {\n  // Character count indicator + mode indicator bits\n  return Mode.getCharCountIndicator(mode, version) + 4\n}\n\nfunction getTotalBitsFromDataArray (segments, version) {\n  var totalBits = 0\n\n  segments.forEach(function (data) {\n    var reservedBits = getReservedBitsCount(data.mode, version)\n    totalBits += reservedBits + data.getBitsLength()\n  })\n\n  return totalBits\n}\n\nfunction getBestVersionForMixedData (segments, errorCorrectionLevel) {\n  for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    var length = getTotalBitsFromDataArray(segments, currentVersion)\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, Mode.MIXED)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\n/**\n * Returns version number from a value.\n * If value is not a valid version, returns defaultValue\n *\n * @param  {Number|String} value        QR Code version\n * @param  {Number}        defaultValue Fallback value\n * @return {Number}                     QR Code version number\n */\nexports.from = function from (value, defaultValue) {\n  if (VersionCheck.isValid(value)) {\n    return parseInt(value, 10)\n  }\n\n  return defaultValue\n}\n\n/**\n * Returns how much data can be stored with the specified QR code version\n * and error correction level\n *\n * @param  {Number} version              QR Code version (1-40)\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Mode}   mode                 Data mode\n * @return {Number}                      Quantity of storable data\n */\nexports.getCapacity = function getCapacity (version, errorCorrectionLevel, mode) {\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  // Use Byte mode as default\n  if (typeof mode === 'undefined') mode = Mode.BYTE\n\n  // Total codewords for this QR code version (Data + Error correction)\n  var totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  var ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  if (mode === Mode.MIXED) return dataTotalCodewordsBits\n\n  var usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version)\n\n  // Return max number of storable codewords\n  switch (mode) {\n    case Mode.NUMERIC:\n      return Math.floor((usableBits / 10) * 3)\n\n    case Mode.ALPHANUMERIC:\n      return Math.floor((usableBits / 11) * 2)\n\n    case Mode.KANJI:\n      return Math.floor(usableBits / 13)\n\n    case Mode.BYTE:\n    default:\n      return Math.floor(usableBits / 8)\n  }\n}\n\n/**\n * Returns the minimum version needed to contain the amount of data\n *\n * @param  {Segment} data                    Segment of data\n * @param  {Number} [errorCorrectionLevel=H] Error correction level\n * @param  {Mode} mode                       Data mode\n * @return {Number}                          QR Code version\n */\nexports.getBestVersionForData = function getBestVersionForData (data, errorCorrectionLevel) {\n  var seg\n\n  var ecl = ECLevel.from(errorCorrectionLevel, ECLevel.M)\n\n  if (isArray(data)) {\n    if (data.length > 1) {\n      return getBestVersionForMixedData(data, ecl)\n    }\n\n    if (data.length === 0) {\n      return 1\n    }\n\n    seg = data[0]\n  } else {\n    seg = data\n  }\n\n  return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl)\n}\n\n/**\n * Returns version information with relative error correction bits\n *\n * The version information is included in QR Code symbols of version 7 or larger.\n * It consists of an 18-bit sequence containing 6 data bits,\n * with 12 error correction bits calculated using the (18, 6) Golay code.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Encoded version info bits\n */\nexports.getEncodedBits = function getEncodedBits (version) {\n  if (!VersionCheck.isValid(version) || version < 7) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  var d = version << 12\n\n  while (Utils.getBCHDigit(d) - G18_BCH >= 0) {\n    d ^= (G18 << (Utils.getBCHDigit(d) - G18_BCH))\n  }\n\n  return (version << 12) | d\n}\n","var Utils = require('./utils')\n\nvar G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0)\nvar G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1)\nvar G15_BCH = Utils.getBCHDigit(G15)\n\n/**\n * Returns format information with relative error correction bits\n *\n * The format information is a 15-bit sequence containing 5 data bits,\n * with 10 error correction bits calculated using the (15, 5) BCH code.\n *\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Number} mask                 Mask pattern\n * @return {Number}                      Encoded format information bits\n */\nexports.getEncodedBits = function getEncodedBits (errorCorrectionLevel, mask) {\n  var data = ((errorCorrectionLevel.bit << 3) | mask)\n  var d = data << 10\n\n  while (Utils.getBCHDigit(d) - G15_BCH >= 0) {\n    d ^= (G15 << (Utils.getBCHDigit(d) - G15_BCH))\n  }\n\n  // xor final data with mask pattern in order to ensure that\n  // no combination of Error Correction Level and data mask pattern\n  // will result in an all-zero data string\n  return ((data << 10) | d) ^ G15_MASK\n}\n","var Mode = require('./mode')\n\nfunction NumericData (data) {\n  this.mode = Mode.NUMERIC\n  this.data = data.toString()\n}\n\nNumericData.getBitsLength = function getBitsLength (length) {\n  return 10 * Math.floor(length / 3) + ((length % 3) ? ((length % 3) * 3 + 1) : 0)\n}\n\nNumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nNumericData.prototype.getBitsLength = function getBitsLength () {\n  return NumericData.getBitsLength(this.data.length)\n}\n\nNumericData.prototype.write = function write (bitBuffer) {\n  var i, group, value\n\n  // The input data string is divided into groups of three digits,\n  // and each group is converted to its 10-bit binary equivalent.\n  for (i = 0; i + 3 <= this.data.length; i += 3) {\n    group = this.data.substr(i, 3)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, 10)\n  }\n\n  // If the number of input digits is not an exact multiple of three,\n  // the final one or two digits are converted to 4 or 7 bits respectively.\n  var remainingNum = this.data.length - i\n  if (remainingNum > 0) {\n    group = this.data.substr(i)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, remainingNum * 3 + 1)\n  }\n}\n\nmodule.exports = NumericData\n","var Mode = require('./mode')\n\n/**\n * Array of characters available in alphanumeric mode\n *\n * As per QR Code specification, to each character\n * is assigned a value from 0 to 44 which in this case coincides\n * with the array index\n *\n * @type {Array}\n */\nvar ALPHA_NUM_CHARS = [\n  '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n  'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n  'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n  ' ', '$', '%', '*', '+', '-', '.', '/', ':'\n]\n\nfunction AlphanumericData (data) {\n  this.mode = Mode.ALPHANUMERIC\n  this.data = data\n}\n\nAlphanumericData.getBitsLength = function getBitsLength (length) {\n  return 11 * Math.floor(length / 2) + 6 * (length % 2)\n}\n\nAlphanumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nAlphanumericData.prototype.getBitsLength = function getBitsLength () {\n  return AlphanumericData.getBitsLength(this.data.length)\n}\n\nAlphanumericData.prototype.write = function write (bitBuffer) {\n  var i\n\n  // Input data characters are divided into groups of two characters\n  // and encoded as 11-bit binary codes.\n  for (i = 0; i + 2 <= this.data.length; i += 2) {\n    // The character value of the first character is multiplied by 45\n    var value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45\n\n    // The character value of the second digit is added to the product\n    value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1])\n\n    // The sum is then stored as 11-bit binary number\n    bitBuffer.put(value, 11)\n  }\n\n  // If the number of input data characters is not a multiple of two,\n  // the character value of the final character is encoded as a 6-bit binary number.\n  if (this.data.length % 2) {\n    bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6)\n  }\n}\n\nmodule.exports = AlphanumericData\n","var BufferUtil = require('../utils/buffer')\nvar Mode = require('./mode')\n\nfunction ByteData (data) {\n  this.mode = Mode.BYTE\n  this.data = BufferUtil.from(data)\n}\n\nByteData.getBitsLength = function getBitsLength (length) {\n  return length * 8\n}\n\nByteData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nByteData.prototype.getBitsLength = function getBitsLength () {\n  return ByteData.getBitsLength(this.data.length)\n}\n\nByteData.prototype.write = function (bitBuffer) {\n  for (var i = 0, l = this.data.length; i < l; i++) {\n    bitBuffer.put(this.data[i], 8)\n  }\n}\n\nmodule.exports = ByteData\n","var Mode = require('./mode')\nvar Utils = require('./utils')\n\nfunction KanjiData (data) {\n  this.mode = Mode.KANJI\n  this.data = data\n}\n\nKanjiData.getBitsLength = function getBitsLength (length) {\n  return length * 13\n}\n\nKanjiData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nKanjiData.prototype.getBitsLength = function getBitsLength () {\n  return KanjiData.getBitsLength(this.data.length)\n}\n\nKanjiData.prototype.write = function (bitBuffer) {\n  var i\n\n  // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n  // These byte values are shifted from the JIS X 0208 values.\n  // JIS X 0208 gives details of the shift coded representation.\n  for (i = 0; i < this.data.length; i++) {\n    var value = Utils.toSJIS(this.data[i])\n\n    // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n    if (value >= 0x8140 && value <= 0x9FFC) {\n      // Subtract 0x8140 from Shift JIS value\n      value -= 0x8140\n\n    // For characters with Shift JIS values from 0xE040 to 0xEBBF\n    } else if (value >= 0xE040 && value <= 0xEBBF) {\n      // Subtract 0xC140 from Shift JIS value\n      value -= 0xC140\n    } else {\n      throw new Error(\n        'Invalid SJIS character: ' + this.data[i] + '\\n' +\n        'Make sure your charset is UTF-8')\n    }\n\n    // Multiply most significant byte of result by 0xC0\n    // and add least significant byte to product\n    value = (((value >>> 8) & 0xff) * 0xC0) + (value & 0xff)\n\n    // Convert result to a 13-bit binary string\n    bitBuffer.put(value, 13)\n  }\n}\n\nmodule.exports = KanjiData\n","'use strict';\n\n/******************************************************************************\n * Created 2008-08-19.\n *\n * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\n *\n * Copyright (C) 2008\n *   Wyatt Baldwin <self@wyattbaldwin.com>\n *   All rights reserved\n *\n * Licensed under the MIT license.\n *\n *   http://www.opensource.org/licenses/mit-license.php\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *****************************************************************************/\nvar dijkstra = {\n  single_source_shortest_paths: function(graph, s, d) {\n    // Predecessor map for each node that has been encountered.\n    // node ID => predecessor node ID\n    var predecessors = {};\n\n    // Costs of shortest paths from s to all nodes encountered.\n    // node ID => cost\n    var costs = {};\n    costs[s] = 0;\n\n    // Costs of shortest paths from s to all nodes encountered; differs from\n    // `costs` in that it provides easy access to the node that currently has\n    // the known shortest path from s.\n    // XXX: Do we actually need both `costs` and `open`?\n    var open = dijkstra.PriorityQueue.make();\n    open.push(s, 0);\n\n    var closest,\n        u, v,\n        cost_of_s_to_u,\n        adjacent_nodes,\n        cost_of_e,\n        cost_of_s_to_u_plus_cost_of_e,\n        cost_of_s_to_v,\n        first_visit;\n    while (!open.empty()) {\n      // In the nodes remaining in graph that have a known cost from s,\n      // find the node, u, that currently has the shortest path from s.\n      closest = open.pop();\n      u = closest.value;\n      cost_of_s_to_u = closest.cost;\n\n      // Get nodes adjacent to u...\n      adjacent_nodes = graph[u] || {};\n\n      // ...and explore the edges that connect u to those nodes, updating\n      // the cost of the shortest paths to any or all of those nodes as\n      // necessary. v is the node across the current edge from u.\n      for (v in adjacent_nodes) {\n        if (adjacent_nodes.hasOwnProperty(v)) {\n          // Get the cost of the edge running from u to v.\n          cost_of_e = adjacent_nodes[v];\n\n          // Cost of s to u plus the cost of u to v across e--this is *a*\n          // cost from s to v that may or may not be less than the current\n          // known cost to v.\n          cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\n\n          // If we haven't visited v yet OR if the current known cost from s to\n          // v is greater than the new cost we just found (cost of s to u plus\n          // cost of u to v across e), update v's cost in the cost list and\n          // update v's predecessor in the predecessor list (it's now u).\n          cost_of_s_to_v = costs[v];\n          first_visit = (typeof costs[v] === 'undefined');\n          if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\n            costs[v] = cost_of_s_to_u_plus_cost_of_e;\n            open.push(v, cost_of_s_to_u_plus_cost_of_e);\n            predecessors[v] = u;\n          }\n        }\n      }\n    }\n\n    if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {\n      var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\n      throw new Error(msg);\n    }\n\n    return predecessors;\n  },\n\n  extract_shortest_path_from_predecessor_list: function(predecessors, d) {\n    var nodes = [];\n    var u = d;\n    var predecessor;\n    while (u) {\n      nodes.push(u);\n      predecessor = predecessors[u];\n      u = predecessors[u];\n    }\n    nodes.reverse();\n    return nodes;\n  },\n\n  find_path: function(graph, s, d) {\n    var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\n    return dijkstra.extract_shortest_path_from_predecessor_list(\n      predecessors, d);\n  },\n\n  /**\n   * A very naive priority queue implementation.\n   */\n  PriorityQueue: {\n    make: function (opts) {\n      var T = dijkstra.PriorityQueue,\n          t = {},\n          key;\n      opts = opts || {};\n      for (key in T) {\n        if (T.hasOwnProperty(key)) {\n          t[key] = T[key];\n        }\n      }\n      t.queue = [];\n      t.sorter = opts.sorter || T.default_sorter;\n      return t;\n    },\n\n    default_sorter: function (a, b) {\n      return a.cost - b.cost;\n    },\n\n    /**\n     * Add a new item to the queue and ensure the highest priority element\n     * is at the front of the queue.\n     */\n    push: function (value, cost) {\n      var item = {value: value, cost: cost};\n      this.queue.push(item);\n      this.queue.sort(this.sorter);\n    },\n\n    /**\n     * Return the highest priority element in the queue.\n     */\n    pop: function () {\n      return this.queue.shift();\n    },\n\n    empty: function () {\n      return this.queue.length === 0;\n    }\n  }\n};\n\n\n// node.js module exports\nif (typeof module !== 'undefined') {\n  module.exports = dijkstra;\n}\n","var Mode = require('./mode')\nvar NumericData = require('./numeric-data')\nvar AlphanumericData = require('./alphanumeric-data')\nvar ByteData = require('./byte-data')\nvar KanjiData = require('./kanji-data')\nvar Regex = require('./regex')\nvar Utils = require('./utils')\nvar dijkstra = require('dijkstrajs')\n\n/**\n * Returns UTF8 byte length\n *\n * @param  {String} str Input string\n * @return {Number}     Number of byte\n */\nfunction getStringByteLength (str) {\n  return unescape(encodeURIComponent(str)).length\n}\n\n/**\n * Get a list of segments of the specified mode\n * from a string\n *\n * @param  {Mode}   mode Segment mode\n * @param  {String} str  String to process\n * @return {Array}       Array of object with segments data\n */\nfunction getSegments (regex, mode, str) {\n  var segments = []\n  var result\n\n  while ((result = regex.exec(str)) !== null) {\n    segments.push({\n      data: result[0],\n      index: result.index,\n      mode: mode,\n      length: result[0].length\n    })\n  }\n\n  return segments\n}\n\n/**\n * Extracts a series of segments with the appropriate\n * modes from a string\n *\n * @param  {String} dataStr Input string\n * @return {Array}          Array of object with segments data\n */\nfunction getSegmentsFromString (dataStr) {\n  var numSegs = getSegments(Regex.NUMERIC, Mode.NUMERIC, dataStr)\n  var alphaNumSegs = getSegments(Regex.ALPHANUMERIC, Mode.ALPHANUMERIC, dataStr)\n  var byteSegs\n  var kanjiSegs\n\n  if (Utils.isKanjiModeEnabled()) {\n    byteSegs = getSegments(Regex.BYTE, Mode.BYTE, dataStr)\n    kanjiSegs = getSegments(Regex.KANJI, Mode.KANJI, dataStr)\n  } else {\n    byteSegs = getSegments(Regex.BYTE_KANJI, Mode.BYTE, dataStr)\n    kanjiSegs = []\n  }\n\n  var segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs)\n\n  return segs\n    .sort(function (s1, s2) {\n      return s1.index - s2.index\n    })\n    .map(function (obj) {\n      return {\n        data: obj.data,\n        mode: obj.mode,\n        length: obj.length\n      }\n    })\n}\n\n/**\n * Returns how many bits are needed to encode a string of\n * specified length with the specified mode\n *\n * @param  {Number} length String length\n * @param  {Mode} mode     Segment mode\n * @return {Number}        Bit length\n */\nfunction getSegmentBitsLength (length, mode) {\n  switch (mode) {\n    case Mode.NUMERIC:\n      return NumericData.getBitsLength(length)\n    case Mode.ALPHANUMERIC:\n      return AlphanumericData.getBitsLength(length)\n    case Mode.KANJI:\n      return KanjiData.getBitsLength(length)\n    case Mode.BYTE:\n      return ByteData.getBitsLength(length)\n  }\n}\n\n/**\n * Merges adjacent segments which have the same mode\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction mergeSegments (segs) {\n  return segs.reduce(function (acc, curr) {\n    var prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null\n    if (prevSeg && prevSeg.mode === curr.mode) {\n      acc[acc.length - 1].data += curr.data\n      return acc\n    }\n\n    acc.push(curr)\n    return acc\n  }, [])\n}\n\n/**\n * Generates a list of all possible nodes combination which\n * will be used to build a segments graph.\n *\n * Nodes are divided by groups. Each group will contain a list of all the modes\n * in which is possible to encode the given text.\n *\n * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.\n * The group for '12345' will contain then 3 objects, one for each\n * possible encoding mode.\n *\n * Each node represents a possible segment.\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction buildNodes (segs) {\n  var nodes = []\n  for (var i = 0; i < segs.length; i++) {\n    var seg = segs[i]\n\n    switch (seg.mode) {\n      case Mode.NUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.ALPHANUMERIC, length: seg.length },\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.ALPHANUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.KANJI:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n        break\n      case Mode.BYTE:\n        nodes.push([\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n    }\n  }\n\n  return nodes\n}\n\n/**\n * Builds a graph from a list of nodes.\n * All segments in each node group will be connected with all the segments of\n * the next group and so on.\n *\n * At each connection will be assigned a weight depending on the\n * segment's byte length.\n *\n * @param  {Array} nodes    Array of object with segments data\n * @param  {Number} version QR Code version\n * @return {Object}         Graph of all possible segments\n */\nfunction buildGraph (nodes, version) {\n  var table = {}\n  var graph = {'start': {}}\n  var prevNodeIds = ['start']\n\n  for (var i = 0; i < nodes.length; i++) {\n    var nodeGroup = nodes[i]\n    var currentNodeIds = []\n\n    for (var j = 0; j < nodeGroup.length; j++) {\n      var node = nodeGroup[j]\n      var key = '' + i + j\n\n      currentNodeIds.push(key)\n      table[key] = { node: node, lastCount: 0 }\n      graph[key] = {}\n\n      for (var n = 0; n < prevNodeIds.length; n++) {\n        var prevNodeId = prevNodeIds[n]\n\n        if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {\n          graph[prevNodeId][key] =\n            getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) -\n            getSegmentBitsLength(table[prevNodeId].lastCount, node.mode)\n\n          table[prevNodeId].lastCount += node.length\n        } else {\n          if (table[prevNodeId]) table[prevNodeId].lastCount = node.length\n\n          graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) +\n            4 + Mode.getCharCountIndicator(node.mode, version) // switch cost\n        }\n      }\n    }\n\n    prevNodeIds = currentNodeIds\n  }\n\n  for (n = 0; n < prevNodeIds.length; n++) {\n    graph[prevNodeIds[n]]['end'] = 0\n  }\n\n  return { map: graph, table: table }\n}\n\n/**\n * Builds a segment from a specified data and mode.\n * If a mode is not specified, the more suitable will be used.\n *\n * @param  {String} data             Input data\n * @param  {Mode | String} modesHint Data mode\n * @return {Segment}                 Segment\n */\nfunction buildSingleSegment (data, modesHint) {\n  var mode\n  var bestMode = Mode.getBestModeForData(data)\n\n  mode = Mode.from(modesHint, bestMode)\n\n  // Make sure data can be encoded\n  if (mode !== Mode.BYTE && mode.bit < bestMode.bit) {\n    throw new Error('\"' + data + '\"' +\n      ' cannot be encoded with mode ' + Mode.toString(mode) +\n      '.\\n Suggested mode is: ' + Mode.toString(bestMode))\n  }\n\n  // Use Mode.BYTE if Kanji support is disabled\n  if (mode === Mode.KANJI && !Utils.isKanjiModeEnabled()) {\n    mode = Mode.BYTE\n  }\n\n  switch (mode) {\n    case Mode.NUMERIC:\n      return new NumericData(data)\n\n    case Mode.ALPHANUMERIC:\n      return new AlphanumericData(data)\n\n    case Mode.KANJI:\n      return new KanjiData(data)\n\n    case Mode.BYTE:\n      return new ByteData(data)\n  }\n}\n\n/**\n * Builds a list of segments from an array.\n * Array can contain Strings or Objects with segment's info.\n *\n * For each item which is a string, will be generated a segment with the given\n * string and the more appropriate encoding mode.\n *\n * For each item which is an object, will be generated a segment with the given\n * data and mode.\n * Objects must contain at least the property \"data\".\n * If property \"mode\" is not present, the more suitable mode will be used.\n *\n * @param  {Array} array Array of objects with segments data\n * @return {Array}       Array of Segments\n */\nexports.fromArray = function fromArray (array) {\n  return array.reduce(function (acc, seg) {\n    if (typeof seg === 'string') {\n      acc.push(buildSingleSegment(seg, null))\n    } else if (seg.data) {\n      acc.push(buildSingleSegment(seg.data, seg.mode))\n    }\n\n    return acc\n  }, [])\n}\n\n/**\n * Builds an optimized sequence of segments from a string,\n * which will produce the shortest possible bitstream.\n *\n * @param  {String} data    Input string\n * @param  {Number} version QR Code version\n * @return {Array}          Array of segments\n */\nexports.fromString = function fromString (data, version) {\n  var segs = getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n\n  var nodes = buildNodes(segs)\n  var graph = buildGraph(nodes, version)\n  var path = dijkstra.find_path(graph.map, 'start', 'end')\n\n  var optimizedSegs = []\n  for (var i = 1; i < path.length - 1; i++) {\n    optimizedSegs.push(graph.table[path[i]].node)\n  }\n\n  return exports.fromArray(mergeSegments(optimizedSegs))\n}\n\n/**\n * Splits a string in various segments with the modes which\n * best represent their content.\n * The produced segments are far from being optimized.\n * The output of this function is only used to estimate a QR Code version\n * which may contain the data.\n *\n * @param  {string} data Input string\n * @return {Array}       Array of segments\n */\nexports.rawSplit = function rawSplit (data) {\n  return exports.fromArray(\n    getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n  )\n}\n","var BufferUtil = require('../utils/buffer')\nvar Utils = require('./utils')\nvar ECLevel = require('./error-correction-level')\nvar BitBuffer = require('./bit-buffer')\nvar BitMatrix = require('./bit-matrix')\nvar AlignmentPattern = require('./alignment-pattern')\nvar FinderPattern = require('./finder-pattern')\nvar MaskPattern = require('./mask-pattern')\nvar ECCode = require('./error-correction-code')\nvar ReedSolomonEncoder = require('./reed-solomon-encoder')\nvar Version = require('./version')\nvar FormatInfo = require('./format-info')\nvar Mode = require('./mode')\nvar Segments = require('./segments')\nvar isArray = require('isarray')\n\n/**\n * QRCode for JavaScript\n *\n * modified by Ryan Day for nodejs support\n * Copyright (c) 2011 Ryan Day\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n*/\n\n/**\n * Add finder patterns bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupFinderPattern (matrix, version) {\n  var size = matrix.size\n  var pos = FinderPattern.getPositions(version)\n\n  for (var i = 0; i < pos.length; i++) {\n    var row = pos[i][0]\n    var col = pos[i][1]\n\n    for (var r = -1; r <= 7; r++) {\n      if (row + r <= -1 || size <= row + r) continue\n\n      for (var c = -1; c <= 7; c++) {\n        if (col + c <= -1 || size <= col + c) continue\n\n        if ((r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\n          (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\n          (r >= 2 && r <= 4 && c >= 2 && c <= 4)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add timing pattern bits to matrix\n *\n * Note: this function must be called before {@link setupAlignmentPattern}\n *\n * @param  {BitMatrix} matrix Modules matrix\n */\nfunction setupTimingPattern (matrix) {\n  var size = matrix.size\n\n  for (var r = 8; r < size - 8; r++) {\n    var value = r % 2 === 0\n    matrix.set(r, 6, value, true)\n    matrix.set(6, r, value, true)\n  }\n}\n\n/**\n * Add alignment patterns bits to matrix\n *\n * Note: this function must be called after {@link setupTimingPattern}\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupAlignmentPattern (matrix, version) {\n  var pos = AlignmentPattern.getPositions(version)\n\n  for (var i = 0; i < pos.length; i++) {\n    var row = pos[i][0]\n    var col = pos[i][1]\n\n    for (var r = -2; r <= 2; r++) {\n      for (var c = -2; c <= 2; c++) {\n        if (r === -2 || r === 2 || c === -2 || c === 2 ||\n          (r === 0 && c === 0)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add version info bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupVersionInfo (matrix, version) {\n  var size = matrix.size\n  var bits = Version.getEncodedBits(version)\n  var row, col, mod\n\n  for (var i = 0; i < 18; i++) {\n    row = Math.floor(i / 3)\n    col = i % 3 + size - 8 - 3\n    mod = ((bits >> i) & 1) === 1\n\n    matrix.set(row, col, mod, true)\n    matrix.set(col, row, mod, true)\n  }\n}\n\n/**\n * Add format info bits to matrix\n *\n * @param  {BitMatrix} matrix               Modules matrix\n * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level\n * @param  {Number}    maskPattern          Mask pattern reference value\n */\nfunction setupFormatInfo (matrix, errorCorrectionLevel, maskPattern) {\n  var size = matrix.size\n  var bits = FormatInfo.getEncodedBits(errorCorrectionLevel, maskPattern)\n  var i, mod\n\n  for (i = 0; i < 15; i++) {\n    mod = ((bits >> i) & 1) === 1\n\n    // vertical\n    if (i < 6) {\n      matrix.set(i, 8, mod, true)\n    } else if (i < 8) {\n      matrix.set(i + 1, 8, mod, true)\n    } else {\n      matrix.set(size - 15 + i, 8, mod, true)\n    }\n\n    // horizontal\n    if (i < 8) {\n      matrix.set(8, size - i - 1, mod, true)\n    } else if (i < 9) {\n      matrix.set(8, 15 - i - 1 + 1, mod, true)\n    } else {\n      matrix.set(8, 15 - i - 1, mod, true)\n    }\n  }\n\n  // fixed module\n  matrix.set(size - 8, 8, 1, true)\n}\n\n/**\n * Add encoded data bits to matrix\n *\n * @param  {BitMatrix} matrix Modules matrix\n * @param  {Buffer}    data   Data codewords\n */\nfunction setupData (matrix, data) {\n  var size = matrix.size\n  var inc = -1\n  var row = size - 1\n  var bitIndex = 7\n  var byteIndex = 0\n\n  for (var col = size - 1; col > 0; col -= 2) {\n    if (col === 6) col--\n\n    while (true) {\n      for (var c = 0; c < 2; c++) {\n        if (!matrix.isReserved(row, col - c)) {\n          var dark = false\n\n          if (byteIndex < data.length) {\n            dark = (((data[byteIndex] >>> bitIndex) & 1) === 1)\n          }\n\n          matrix.set(row, col - c, dark)\n          bitIndex--\n\n          if (bitIndex === -1) {\n            byteIndex++\n            bitIndex = 7\n          }\n        }\n      }\n\n      row += inc\n\n      if (row < 0 || size <= row) {\n        row -= inc\n        inc = -inc\n        break\n      }\n    }\n  }\n}\n\n/**\n * Create encoded codewords from data input\n *\n * @param  {Number}   version              QR Code version\n * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level\n * @param  {ByteData} data                 Data input\n * @return {Buffer}                        Buffer containing encoded codewords\n */\nfunction createData (version, errorCorrectionLevel, segments) {\n  // Prepare data buffer\n  var buffer = new BitBuffer()\n\n  segments.forEach(function (data) {\n    // prefix data with mode indicator (4 bits)\n    buffer.put(data.mode.bit, 4)\n\n    // Prefix data with character count indicator.\n    // The character count indicator is a string of bits that represents the\n    // number of characters that are being encoded.\n    // The character count indicator must be placed after the mode indicator\n    // and must be a certain number of bits long, depending on the QR version\n    // and data mode\n    // @see {@link Mode.getCharCountIndicator}.\n    buffer.put(data.getLength(), Mode.getCharCountIndicator(data.mode, version))\n\n    // add binary data sequence to buffer\n    data.write(buffer)\n  })\n\n  // Calculate required number of bits\n  var totalCodewords = Utils.getSymbolTotalCodewords(version)\n  var ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n  var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  // Add a terminator.\n  // If the bit string is shorter than the total number of required bits,\n  // a terminator of up to four 0s must be added to the right side of the string.\n  // If the bit string is more than four bits shorter than the required number of bits,\n  // add four 0s to the end.\n  if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {\n    buffer.put(0, 4)\n  }\n\n  // If the bit string is fewer than four bits shorter, add only the number of 0s that\n  // are needed to reach the required number of bits.\n\n  // After adding the terminator, if the number of bits in the string is not a multiple of 8,\n  // pad the string on the right with 0s to make the string's length a multiple of 8.\n  while (buffer.getLengthInBits() % 8 !== 0) {\n    buffer.putBit(0)\n  }\n\n  // Add pad bytes if the string is still shorter than the total number of required bits.\n  // Extend the buffer to fill the data capacity of the symbol corresponding to\n  // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)\n  // and 00010001 (0x11) alternately.\n  var remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8\n  for (var i = 0; i < remainingByte; i++) {\n    buffer.put(i % 2 ? 0x11 : 0xEC, 8)\n  }\n\n  return createCodewords(buffer, version, errorCorrectionLevel)\n}\n\n/**\n * Encode input data with Reed-Solomon and return codewords with\n * relative error correction bits\n *\n * @param  {BitBuffer} bitBuffer            Data to encode\n * @param  {Number}    version              QR Code version\n * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level\n * @return {Buffer}                         Buffer containing encoded codewords\n */\nfunction createCodewords (bitBuffer, version, errorCorrectionLevel) {\n  // Total codewords for this QR code version (Data + Error correction)\n  var totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  var ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  var dataTotalCodewords = totalCodewords - ecTotalCodewords\n\n  // Total number of blocks\n  var ecTotalBlocks = ECCode.getBlocksCount(version, errorCorrectionLevel)\n\n  // Calculate how many blocks each group should contain\n  var blocksInGroup2 = totalCodewords % ecTotalBlocks\n  var blocksInGroup1 = ecTotalBlocks - blocksInGroup2\n\n  var totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks)\n\n  var dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks)\n  var dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1\n\n  // Number of EC codewords is the same for both groups\n  var ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1\n\n  // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount\n  var rs = new ReedSolomonEncoder(ecCount)\n\n  var offset = 0\n  var dcData = new Array(ecTotalBlocks)\n  var ecData = new Array(ecTotalBlocks)\n  var maxDataSize = 0\n  var buffer = BufferUtil.from(bitBuffer.buffer)\n\n  // Divide the buffer into the required number of blocks\n  for (var b = 0; b < ecTotalBlocks; b++) {\n    var dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2\n\n    // extract a block of data from buffer\n    dcData[b] = buffer.slice(offset, offset + dataSize)\n\n    // Calculate EC codewords for this data block\n    ecData[b] = rs.encode(dcData[b])\n\n    offset += dataSize\n    maxDataSize = Math.max(maxDataSize, dataSize)\n  }\n\n  // Create final data\n  // Interleave the data and error correction codewords from each block\n  var data = BufferUtil.alloc(totalCodewords)\n  var index = 0\n  var i, r\n\n  // Add data codewords\n  for (i = 0; i < maxDataSize; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      if (i < dcData[r].length) {\n        data[index++] = dcData[r][i]\n      }\n    }\n  }\n\n  // Apped EC codewords\n  for (i = 0; i < ecCount; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      data[index++] = ecData[r][i]\n    }\n  }\n\n  return data\n}\n\n/**\n * Build QR Code symbol\n *\n * @param  {String} data                 Input string\n * @param  {Number} version              QR Code version\n * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level\n * @param  {MaskPattern} maskPattern     Mask pattern\n * @return {Object}                      Object containing symbol data\n */\nfunction createSymbol (data, version, errorCorrectionLevel, maskPattern) {\n  var segments\n\n  if (isArray(data)) {\n    segments = Segments.fromArray(data)\n  } else if (typeof data === 'string') {\n    var estimatedVersion = version\n\n    if (!estimatedVersion) {\n      var rawSegments = Segments.rawSplit(data)\n\n      // Estimate best version that can contain raw splitted segments\n      estimatedVersion = Version.getBestVersionForData(rawSegments,\n        errorCorrectionLevel)\n    }\n\n    // Build optimized segments\n    // If estimated version is undefined, try with the highest version\n    segments = Segments.fromString(data, estimatedVersion || 40)\n  } else {\n    throw new Error('Invalid data')\n  }\n\n  // Get the min version that can contain data\n  var bestVersion = Version.getBestVersionForData(segments,\n      errorCorrectionLevel)\n\n  // If no version is found, data cannot be stored\n  if (!bestVersion) {\n    throw new Error('The amount of data is too big to be stored in a QR Code')\n  }\n\n  // If not specified, use min version as default\n  if (!version) {\n    version = bestVersion\n\n  // Check if the specified version can contain the data\n  } else if (version < bestVersion) {\n    throw new Error('\\n' +\n      'The chosen QR Code version cannot contain this amount of data.\\n' +\n      'Minimum version required to store current data is: ' + bestVersion + '.\\n'\n    )\n  }\n\n  var dataBits = createData(version, errorCorrectionLevel, segments)\n\n  // Allocate matrix buffer\n  var moduleCount = Utils.getSymbolSize(version)\n  var modules = new BitMatrix(moduleCount)\n\n  // Add function modules\n  setupFinderPattern(modules, version)\n  setupTimingPattern(modules)\n  setupAlignmentPattern(modules, version)\n\n  // Add temporary dummy bits for format info just to set them as reserved.\n  // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}\n  // since the masking operation must be performed only on the encoding region.\n  // These blocks will be replaced with correct values later in code.\n  setupFormatInfo(modules, errorCorrectionLevel, 0)\n\n  if (version >= 7) {\n    setupVersionInfo(modules, version)\n  }\n\n  // Add data codewords\n  setupData(modules, dataBits)\n\n  if (isNaN(maskPattern)) {\n    // Find best mask pattern\n    maskPattern = MaskPattern.getBestMask(modules,\n      setupFormatInfo.bind(null, modules, errorCorrectionLevel))\n  }\n\n  // Apply mask pattern\n  MaskPattern.applyMask(maskPattern, modules)\n\n  // Replace format info bits with correct values\n  setupFormatInfo(modules, errorCorrectionLevel, maskPattern)\n\n  return {\n    modules: modules,\n    version: version,\n    errorCorrectionLevel: errorCorrectionLevel,\n    maskPattern: maskPattern,\n    segments: segments\n  }\n}\n\n/**\n * QR Code\n *\n * @param {String | Array} data                 Input data\n * @param {Object} options                      Optional configurations\n * @param {Number} options.version              QR Code version\n * @param {String} options.errorCorrectionLevel Error correction level\n * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis\n */\nexports.create = function create (data, options) {\n  if (typeof data === 'undefined' || data === '') {\n    throw new Error('No input text')\n  }\n\n  var errorCorrectionLevel = ECLevel.M\n  var version\n  var mask\n\n  if (typeof options !== 'undefined') {\n    // Use higher error correction level as default\n    errorCorrectionLevel = ECLevel.from(options.errorCorrectionLevel, ECLevel.M)\n    version = Version.from(options.version)\n    mask = MaskPattern.from(options.maskPattern)\n\n    if (options.toSJISFunc) {\n      Utils.setToSJISFunction(options.toSJISFunc)\n    }\n  }\n\n  return createSymbol(data, version, errorCorrectionLevel, mask)\n}\n","function hex2rgba (hex) {\n  if (typeof hex === 'number') {\n    hex = hex.toString()\n  }\n\n  if (typeof hex !== 'string') {\n    throw new Error('Color should be defined as hex string')\n  }\n\n  var hexCode = hex.slice().replace('#', '').split('')\n  if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n    throw new Error('Invalid hex color: ' + hex)\n  }\n\n  // Convert from short to long form (fff -> ffffff)\n  if (hexCode.length === 3 || hexCode.length === 4) {\n    hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n      return [c, c]\n    }))\n  }\n\n  // Add default alpha value\n  if (hexCode.length === 6) hexCode.push('F', 'F')\n\n  var hexValue = parseInt(hexCode.join(''), 16)\n\n  return {\n    r: (hexValue >> 24) & 255,\n    g: (hexValue >> 16) & 255,\n    b: (hexValue >> 8) & 255,\n    a: hexValue & 255,\n    hex: '#' + hexCode.slice(0, 6).join('')\n  }\n}\n\nexports.getOptions = function getOptions (options) {\n  if (!options) options = {}\n  if (!options.color) options.color = {}\n\n  var margin = typeof options.margin === 'undefined' ||\n    options.margin === null ||\n    options.margin < 0 ? 4 : options.margin\n\n  var width = options.width && options.width >= 21 ? options.width : undefined\n  var scale = options.scale || 4\n\n  return {\n    width: width,\n    scale: width ? 4 : scale,\n    margin: margin,\n    color: {\n      dark: hex2rgba(options.color.dark || '#000000ff'),\n      light: hex2rgba(options.color.light || '#ffffffff')\n    },\n    type: options.type,\n    rendererOpts: options.rendererOpts || {}\n  }\n}\n\nexports.getScale = function getScale (qrSize, opts) {\n  return opts.width && opts.width >= qrSize + opts.margin * 2\n    ? opts.width / (qrSize + opts.margin * 2)\n    : opts.scale\n}\n\nexports.getImageWidth = function getImageWidth (qrSize, opts) {\n  var scale = exports.getScale(qrSize, opts)\n  return Math.floor((qrSize + opts.margin * 2) * scale)\n}\n\nexports.qrToImageData = function qrToImageData (imgData, qr, opts) {\n  var size = qr.modules.size\n  var data = qr.modules.data\n  var scale = exports.getScale(size, opts)\n  var symbolSize = Math.floor((size + opts.margin * 2) * scale)\n  var scaledMargin = opts.margin * scale\n  var palette = [opts.color.light, opts.color.dark]\n\n  for (var i = 0; i < symbolSize; i++) {\n    for (var j = 0; j < symbolSize; j++) {\n      var posDst = (i * symbolSize + j) * 4\n      var pxColor = opts.color.light\n\n      if (i >= scaledMargin && j >= scaledMargin &&\n        i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n        var iSrc = Math.floor((i - scaledMargin) / scale)\n        var jSrc = Math.floor((j - scaledMargin) / scale)\n        pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0]\n      }\n\n      imgData[posDst++] = pxColor.r\n      imgData[posDst++] = pxColor.g\n      imgData[posDst++] = pxColor.b\n      imgData[posDst] = pxColor.a\n    }\n  }\n}\n","var Utils = require('./utils')\n\nfunction clearCanvas (ctx, canvas, size) {\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n  if (!canvas.style) canvas.style = {}\n  canvas.height = size\n  canvas.width = size\n  canvas.style.height = size + 'px'\n  canvas.style.width = size + 'px'\n}\n\nfunction getCanvasElement () {\n  try {\n    return document.createElement('canvas')\n  } catch (e) {\n    throw new Error('You need to specify a canvas element')\n  }\n}\n\nexports.render = function render (qrData, canvas, options) {\n  var opts = options\n  var canvasEl = canvas\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!canvas) {\n    canvasEl = getCanvasElement()\n  }\n\n  opts = Utils.getOptions(opts)\n  var size = Utils.getImageWidth(qrData.modules.size, opts)\n\n  var ctx = canvasEl.getContext('2d')\n  var image = ctx.createImageData(size, size)\n  Utils.qrToImageData(image.data, qrData, opts)\n\n  clearCanvas(ctx, canvasEl, size)\n  ctx.putImageData(image, 0, 0)\n\n  return canvasEl\n}\n\nexports.renderToDataURL = function renderToDataURL (qrData, canvas, options) {\n  var opts = options\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!opts) opts = {}\n\n  var canvasEl = exports.render(qrData, canvas, opts)\n\n  var type = opts.type || 'image/png'\n  var rendererOpts = opts.rendererOpts || {}\n\n  return canvasEl.toDataURL(type, rendererOpts.quality)\n}\n","var Utils = require('./utils')\n\nfunction getColorAttrib (color, attrib) {\n  var alpha = color.a / 255\n  var str = attrib + '=\"' + color.hex + '\"'\n\n  return alpha < 1\n    ? str + ' ' + attrib + '-opacity=\"' + alpha.toFixed(2).slice(1) + '\"'\n    : str\n}\n\nfunction svgCmd (cmd, x, y) {\n  var str = cmd + x\n  if (typeof y !== 'undefined') str += ' ' + y\n\n  return str\n}\n\nfunction qrToPath (data, size, margin) {\n  var path = ''\n  var moveBy = 0\n  var newRow = false\n  var lineLength = 0\n\n  for (var i = 0; i < data.length; i++) {\n    var col = Math.floor(i % size)\n    var row = Math.floor(i / size)\n\n    if (!col && !newRow) newRow = true\n\n    if (data[i]) {\n      lineLength++\n\n      if (!(i > 0 && col > 0 && data[i - 1])) {\n        path += newRow\n          ? svgCmd('M', col + margin, 0.5 + row + margin)\n          : svgCmd('m', moveBy, 0)\n\n        moveBy = 0\n        newRow = false\n      }\n\n      if (!(col + 1 < size && data[i + 1])) {\n        path += svgCmd('h', lineLength)\n        lineLength = 0\n      }\n    } else {\n      moveBy++\n    }\n  }\n\n  return path\n}\n\nexports.render = function render (qrData, options, cb) {\n  var opts = Utils.getOptions(options)\n  var size = qrData.modules.size\n  var data = qrData.modules.data\n  var qrcodesize = size + opts.margin * 2\n\n  var bg = !opts.color.light.a\n    ? ''\n    : '<path ' + getColorAttrib(opts.color.light, 'fill') +\n      ' d=\"M0 0h' + qrcodesize + 'v' + qrcodesize + 'H0z\"/>'\n\n  var path =\n    '<path ' + getColorAttrib(opts.color.dark, 'stroke') +\n    ' d=\"' + qrToPath(data, size, opts.margin) + '\"/>'\n\n  var viewBox = 'viewBox=\"' + '0 0 ' + qrcodesize + ' ' + qrcodesize + '\"'\n\n  var width = !opts.width ? '' : 'width=\"' + opts.width + '\" height=\"' + opts.width + '\" '\n\n  var svgTag = '<svg xmlns=\"http://www.w3.org/2000/svg\" ' + width + viewBox + ' shape-rendering=\"crispEdges\">' + bg + path + '</svg>\\n'\n\n  if (typeof cb === 'function') {\n    cb(null, svgTag)\n  }\n\n  return svgTag\n}\n","\nvar canPromise = require('./can-promise')\n\nvar QRCode = require('./core/qrcode')\nvar CanvasRenderer = require('./renderer/canvas')\nvar SvgRenderer = require('./renderer/svg-tag.js')\n\nfunction renderCanvas (renderFunc, canvas, text, opts, cb) {\n  var args = [].slice.call(arguments, 1)\n  var argsNum = args.length\n  var isLastArgCb = typeof args[argsNum - 1] === 'function'\n\n  if (!isLastArgCb && !canPromise()) {\n    throw new Error('Callback required as last argument')\n  }\n\n  if (isLastArgCb) {\n    if (argsNum < 2) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 2) {\n      cb = text\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 3) {\n      if (canvas.getContext && typeof cb === 'undefined') {\n        cb = opts\n        opts = undefined\n      } else {\n        cb = opts\n        opts = text\n        text = canvas\n        canvas = undefined\n      }\n    }\n  } else {\n    if (argsNum < 1) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 1) {\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 2 && !canvas.getContext) {\n      opts = text\n      text = canvas\n      canvas = undefined\n    }\n\n    return new Promise(function (resolve, reject) {\n      try {\n        var data = QRCode.create(text, opts)\n        resolve(renderFunc(data, canvas, opts))\n      } catch (e) {\n        reject(e)\n      }\n    })\n  }\n\n  try {\n    var data = QRCode.create(text, opts)\n    cb(null, renderFunc(data, canvas, opts))\n  } catch (e) {\n    cb(e)\n  }\n}\n\nexports.create = QRCode.create\nexports.toCanvas = renderCanvas.bind(null, CanvasRenderer.render)\nexports.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL)\n\n// only svg for now.\nexports.toString = renderCanvas.bind(null, function (data, _, opts) {\n  return SvgRenderer.render(data, opts)\n})\n","import * as qrcode from 'qrcode';\nimport styleText from './styles';\nclass Storage {\n    constructor(keyPrefix) {\n        this.keyPrefix = keyPrefix;\n    }\n    async write(key, data) {\n        localStorage.setItem(this.storageKey(key), data);\n    }\n    async read(key) {\n        return localStorage.getItem(this.storageKey(key));\n    }\n    async remove(key) {\n        localStorage.removeItem(this.storageKey(key));\n    }\n    storageKey(key) {\n        return `${this.keyPrefix}-${key}`;\n    }\n}\nexport default class BrowserTransport {\n    constructor(options = {}) {\n        this.options = options;\n        this.classPrefix = options.classPrefix || 'proton-link';\n        this.injectStyles = !(options.injectStyles === false);\n        this.requestStatus = !(options.requestStatus === false);\n        this.storage = new Storage(options.storagePrefix || 'proton-link');\n        this.requestAccount = options.requestAccount || '';\n    }\n    closeModal() {\n        this.hide();\n        if (this.activeCancel) {\n            this.activeRequest = undefined;\n            this.activeCancel('Modal closed');\n            this.activeCancel = undefined;\n        }\n    }\n    setupElements() {\n        if (this.injectStyles && !this.styleEl) {\n            this.styleEl = document.createElement('style');\n            this.styleEl.type = 'text/css';\n            const css = styleText.replace(/%prefix%/g, this.classPrefix);\n            this.styleEl.appendChild(document.createTextNode(css));\n            document.head.appendChild(this.styleEl);\n        }\n        if (!this.containerEl) {\n            this.containerEl = this.createEl();\n            this.containerEl.className = this.classPrefix;\n            this.containerEl.onclick = (event) => {\n                if (event.target === this.containerEl) {\n                    event.stopPropagation();\n                    this.closeModal();\n                }\n            };\n            document.body.appendChild(this.containerEl);\n        }\n        if (!this.requestEl) {\n            let wrapper = this.createEl({ class: 'inner' });\n            let closeButton = this.createEl({ class: 'close' });\n            closeButton.onclick = (event) => {\n                event.stopPropagation();\n                this.closeModal();\n            };\n            this.requestEl = this.createEl({ class: 'request' });\n            wrapper.appendChild(this.requestEl);\n            wrapper.appendChild(closeButton);\n            this.containerEl.appendChild(wrapper);\n        }\n    }\n    createEl(attrs) {\n        if (!attrs)\n            attrs = {};\n        const el = document.createElement(attrs.tag || 'div');\n        if (attrs) {\n            for (const attr of Object.keys(attrs)) {\n                const value = attrs[attr];\n                switch (attr) {\n                    case 'src':\n                        el.setAttribute(attr, value);\n                        break;\n                    case 'tag':\n                        break;\n                    case 'text':\n                        el.appendChild(document.createTextNode(value));\n                        break;\n                    case 'class':\n                        el.className = `${this.classPrefix}-${value}`;\n                        break;\n                    default:\n                        el.setAttribute(attr, value);\n                }\n            }\n        }\n        return el;\n    }\n    hide() {\n        if (this.containerEl) {\n            this.containerEl.classList.remove(`${this.classPrefix}-active`);\n        }\n        this.clearTimers();\n    }\n    show() {\n        if (this.containerEl) {\n            this.containerEl.classList.add(`${this.classPrefix}-active`);\n        }\n    }\n    async displayRequest(request) {\n        this.setupElements();\n        let sameDeviceRequest = request.clone();\n        sameDeviceRequest.setInfoKey('same_device', true);\n        sameDeviceRequest.setInfoKey('return_path', returnUrl());\n        if (this.requestAccount.length > 0) {\n            sameDeviceRequest.setInfoKey('req_account', this.requestAccount);\n        }\n        let crossDeviceUri = request.encode(true, false);\n        const isIdentity = request.isIdentity();\n        const title = isIdentity ? 'Login with Proton' : 'Sign with Proton';\n        const subtitle = 'Scan the QR-code with your Proton Wallet';\n        const qrEl = this.createEl({ class: 'qr' });\n        try {\n            qrEl.innerHTML = await qrcode.toString(crossDeviceUri, {\n                margin: 0,\n                errorCorrectionLevel: 'L',\n            });\n        }\n        catch (error) {\n            console.warn('Unable to generate QR code', error);\n        }\n        const linkEl = this.createEl({ class: 'uri' });\n        const iframe = this.createEl({\n            class: 'wskeepalive',\n            src: 'about:blank',\n            tag: 'iframe',\n        });\n        linkEl.appendChild(iframe);\n        const infoEl = this.createEl({ class: 'info' });\n        const infoTitle = this.createEl({ class: 'title', tag: 'span', text: title });\n        const infoSubtitle = this.createEl({ class: 'subtitle', tag: 'span', text: subtitle });\n        infoEl.appendChild(infoTitle);\n        infoEl.appendChild(infoSubtitle);\n        const backgroundEl = this.createEl({ class: 'background' });\n        const waveBackground = this.createEl({ class: 'wave' });\n        const actionEl = this.createEl({ class: 'actions' });\n        actionEl.appendChild(backgroundEl);\n        actionEl.appendChild(waveBackground);\n        backgroundEl.appendChild(qrEl);\n        let footnoteEl;\n        if (isIdentity) {\n            footnoteEl = this.createEl({ class: 'footnote', text: \"Don't have Proton Wallet? \" });\n            const footnoteLink = this.createEl({\n                tag: 'a',\n                target: '_blank',\n                href: 'https://protonchain.com',\n                text: 'Download it now',\n            });\n            footnoteEl.appendChild(footnoteLink);\n        }\n        else {\n            footnoteEl = this.createEl({\n                class: 'footnote',\n                text: 'Anchor signing is brought to you by ',\n            });\n            const footnoteLink = this.createEl({\n                tag: 'a',\n                target: '_blank',\n                href: 'https://greymass.com',\n                text: 'Greymass',\n            });\n            footnoteEl.appendChild(footnoteLink);\n        }\n        emptyElement(this.requestEl);\n        const logoEl = this.createEl({ class: 'logo' });\n        this.requestEl.appendChild(logoEl);\n        this.requestEl.appendChild(infoEl);\n        this.requestEl.appendChild(actionEl);\n        this.requestEl.appendChild(footnoteEl);\n        this.show();\n    }\n    async showLoading() {\n        this.setupElements();\n        emptyElement(this.requestEl);\n        const infoEl = this.createEl({ class: 'info' });\n        const infoTitle = this.createEl({ class: 'title', tag: 'span', text: 'Loading' });\n        const infoSubtitle = this.createEl({\n            class: 'subtitle',\n            tag: 'span',\n            text: 'Preparing request...',\n        });\n        infoEl.appendChild(infoTitle);\n        infoEl.appendChild(infoSubtitle);\n        const logoEl = this.createEl({ class: 'logo loading' });\n        this.requestEl.appendChild(logoEl);\n        this.requestEl.appendChild(infoEl);\n        this.show();\n    }\n    onRequest(request, cancel) {\n        this.activeRequest = request;\n        this.activeCancel = cancel;\n        this.displayRequest(request).catch(cancel);\n    }\n    onSessionRequest(session, request, cancel) {\n        if (session.metadata.sameDevice) {\n            request.setInfoKey('return_path', returnUrl());\n        }\n        if (session.type === 'fallback') {\n            this.onRequest(request, cancel);\n            if (session.metadata.sameDevice) {\n                // trigger directly on a fallback same-device session\n                window.location.href = request.encode();\n            }\n            return;\n        }\n        this.activeRequest = request;\n        this.activeCancel = cancel;\n        this.setupElements();\n        const timeout = session.metadata.timeout || 60 * 1000 * 2;\n        const deviceName = session.metadata.name;\n        const start = Date.now();\n        const infoTitle = this.createEl({ class: 'title', tag: 'span', text: 'Sign' });\n        const updateCountdown = () => {\n            const timeLeft = timeout + start - Date.now();\n            const timeFormatted = timeLeft > 0 ? new Date(timeLeft).toISOString().substr(14, 5) : '00:00';\n            infoTitle.textContent = `Sign - ${timeFormatted}`;\n        };\n        this.countdownTimer = setInterval(updateCountdown, 500);\n        updateCountdown();\n        const infoEl = this.createEl({ class: 'info' });\n        infoEl.appendChild(infoTitle);\n        let subtitle;\n        if (deviceName && deviceName.length > 0) {\n            subtitle = `Please open on “${deviceName}” to review and sign the transaction.`;\n        }\n        else {\n            subtitle = 'Please review and sign the transaction in the linked wallet.';\n        }\n        const infoSubtitle = this.createEl({ class: 'subtitle', tag: 'span', text: subtitle });\n        infoEl.appendChild(infoSubtitle);\n        emptyElement(this.requestEl);\n        const logoEl = this.createEl({ class: 'logo' });\n        this.requestEl.appendChild(logoEl);\n        this.requestEl.appendChild(infoEl);\n        this.show();\n        if (isAppleHandheld() && session.metadata.sameDevice) {\n            window.location.href = 'proton://link';\n        }\n    }\n    clearTimers() {\n        if (this.closeTimer) {\n            clearTimeout(this.closeTimer);\n            this.closeTimer = undefined;\n        }\n        if (this.countdownTimer) {\n            clearTimeout(this.countdownTimer);\n            this.countdownTimer = undefined;\n        }\n    }\n    onSuccess(request) {\n        if (request === this.activeRequest) {\n            this.clearTimers();\n            if (this.requestStatus) {\n                this.setupElements();\n                const infoEl = this.createEl({ class: 'info' });\n                const logoEl = this.createEl({ class: 'logo' });\n                logoEl.classList.add('success');\n                const infoTitle = this.createEl({ class: 'title', tag: 'span', text: 'Success!' });\n                const subtitle = request.isIdentity() ? 'Identity signed.' : 'Transaction signed.';\n                const infoSubtitle = this.createEl({ class: 'subtitle', tag: 'span', text: subtitle });\n                infoEl.appendChild(infoTitle);\n                infoEl.appendChild(infoSubtitle);\n                emptyElement(this.requestEl);\n                this.requestEl.appendChild(logoEl);\n                this.requestEl.appendChild(infoEl);\n                this.show();\n                this.closeTimer = setTimeout(() => {\n                    this.hide();\n                }, 1.5 * 1000);\n            }\n            else {\n                this.hide();\n            }\n        }\n    }\n    onFailure(request, error) {\n        if (request === this.activeRequest && error['code'] !== 'E_CANCEL') {\n            this.clearTimers();\n            if (this.requestStatus) {\n                this.setupElements();\n                const infoEl = this.createEl({ class: 'info' });\n                const logoEl = this.createEl({ class: 'logo' });\n                logoEl.classList.add('error');\n                const infoTitle = this.createEl({\n                    class: 'title',\n                    tag: 'span',\n                    text: 'Transaction error',\n                });\n                const infoSubtitle = this.createEl({\n                    class: 'subtitle',\n                    tag: 'span',\n                    text: error.message || String(error),\n                });\n                infoEl.appendChild(infoTitle);\n                infoEl.appendChild(infoSubtitle);\n                emptyElement(this.requestEl);\n                this.requestEl.appendChild(logoEl);\n                this.requestEl.appendChild(infoEl);\n                this.show();\n            }\n            else {\n                this.hide();\n            }\n        }\n    }\n}\nfunction emptyElement(el) {\n    while (el.firstChild) {\n        el.removeChild(el.firstChild);\n    }\n}\nconst returnUrlAlphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nconst returnUrlAlphabetLen = returnUrlAlphabet.length;\n/** Generate a return url with a random #fragment so mobile safari will redirect back w/o reload. */\nfunction returnUrl() {\n    let rv = window.location.href.split('#')[0] + '#';\n    for (let i = 0; i < 8; i++) {\n        rv += returnUrlAlphabet.charAt(Math.floor(Math.random() * returnUrlAlphabetLen));\n    }\n    return rv;\n}\nfunction isAppleHandheld() {\n    return /iP(ad|od|hone)/i.test(navigator.userAgent);\n}\n//# sourceMappingURL=index.js.map","import AnchorLink from 'anchor-link'\nimport ProtonLinkBrowserTransport from '@protonprotocol/proton-browser-transport'\n\nexport const ProtonConnect = (linkOptions = {}, transportOptions = {}) => {\n    const transport = new ProtonLinkBrowserTransport(transportOptions)\n    return new AnchorLink({\n        transport,\n        ...linkOptions\n    })\n}"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","global","self","window","lookup","revLookup","Arr","Uint8Array","Array","inited","init","code","len","charCodeAt","encodeChunk","uint8","start","end","tmp","num","output","push","join","fromByteArray","extraBytes","parts","maxChunkLength","len2","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","toString","isArray","arr","Buffer","TYPED_ARRAY_SUPPORT","undefined","_kMaxLength","kMaxLength","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","Error","allocUnsafe","from","TypeError","ArrayBuffer","array","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","slice","fromString","obj","internalIsBuffer","checked","copy","val","type","data","fromObject","assertSize","size","b","_isBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","String","buf","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","poolSize","_augment","alloc","fill","allocUnsafeSlow","isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","equals","inspect","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","max","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","subarray","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","leadSurrogate","b64","l","placeHolders","L","toByteArray","trim","replace","stringtrim","base64clean","src","dst","isFastBuffer","isSlowBuffer","constructor","_slicedToArray","Symbol","iterator","_n","_d","_e","_s","_i","next","done","err","sliceIterator","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","key","Constructor","protoProps","staticProps","RIPEMD160","instance","_classCallCheck","message_size","message","dividend","divisor","n_pad","get_n_pad_bytes","_divmod$map","map","index","_divmod$map2","msg_bit_size_most","msg_bit_size_least","padded","data_view","DataView","setUint8","setUint32","z","reduce","count","pad","r","rP","sP","X","_","getUint32","h","A","B","C","D","E","AP","BP","CP","DP","EP","_T","add_modulo32","rol32","f","K","KP","T","result","forEach","h_i","__read","o","ar","error","__spread","__values","exports","ripemd160","require$$0","hash","base58Chars","base64Chars","base58Map","base58M","create_base58_map","KeyType","base64Map","base64M","create_base64_map","isNegative","bignum","negate","carry","decimalToBinary","srcDigit","binaryToDecimal","minDigits","reverse","base58ToBinary","binaryToBase58","e_1","_a","e_2","_b","bignum_1","bignum_1_1","e_1_1","return","bignum_2","bignum_2_1","e_2_1","digestSuffixRipemd160","suffix","stringToKey","whole","digest","keyToString","prefix","stringToPublicKey","publicKeyDataSize","k1","r1","publicKeyToString","convertLegacyPublicKey","negative","groups","group","digit0","digit1","digit2","digit3","keys","privateKeyDataSize","signatureDataSize","signature","SerializerState","options","skippedBinaryExtension","SerialBuffer","textEncoder","textDecoder","readPos","TextEncoder","TextDecoder","fatal","reserve","ceil","newArray","haveReadData","restartRead","asUint8Array","pushArray","v","get","pushUint8ArrayChecked","getUint8Array","pushUint16","getUint16","pushUint32","pushNumberAsUint64","getUint64AsNumber","low","pushVaruint32","getVaruint32","bit","pushVarint32","getVarint32","pushFloat32","Float32Array","getFloat32","pushFloat64","Float64Array","getFloat64","pushName","charToSymbol","getName","endsWith","pushBytes","getBytes","pushString","encode","getString","decode","pushSymbolCode","name","getSymbolCode","pushSymbol","precision","getSymbol","pushAsset","amount","foundDigit","numeric","signedDecimalToBinary","getAsset","signedBinaryToDecimal","pushPublicKey","getPublicKey","pushPrivateKey","stringToPrivateKey","getPrivateKey","privateKeyToString","pushSignature","stringToSignature","getSignature","signatureToString","checkDateParse","date","Date","parse","dateToTimePoint","round","timePointToDate","us","toISOString","dateToTimePointSec","timePointSecToDate","sec","dateToBlockTimestamp","blockTimestampToDate","slot","stringToSymbol","symbolToString","arrayToHex","data_1","data_1_1","toUpperCase","hexToUint8Array","hex","serializeUnknown","deserializeUnknown","serializeStruct","state","allowExtensions","JSON","stringify","base","serialize","fields","_c","field","extensionOf","deserializeStruct","e_3","deserialize","e_3_1","serializeVariant","findIndex","deserializeVariant","serializeArray","e_4","data_2","data_2_1","item","arrayOf","e_4_1","deserializeArray","serializeOptional","optionalOf","deserializeOptional","serializeExtension","deserializeExtension","createType","attrs","aliasOfName","baseName","checkRange","orig","converted","getType","types","serializeActionData","contract","account","action","actions","deserializeActionData","version","startsWith","Map","entries","bool","int8","uint16","int16","uint32","uint64","int64","int32","varuint32","varint32","uint128","int128","float32","float64","float128","bytesAsUint8Array","time_point","time_point_sec","block_timestamp_type","symbol_code","symbol","asset","checksum160","checksum256","checksum512","public_key","private_key","typeName","initialTypes","abi","e_5","e_6","e_7","e_8","e_9","_f","_g","_h","new_type_name","e_5_1","structs","_j","_k","_l","name_1","e_6_1","variants","_m","_o","_p","name_2","e_7_1","types_1","types_1_1","_q","_r","e_9_1","e_8_1","refBlock","expireSeconds","expiration","timestamp","ref_block_num","block_num","ref_block_prefix","authorization","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","then","__generator","body","g","label","sent","trys","ops","verb","throw","op","pop","__rest","getOwnPropertySymbols","Api","args","contracts","cachedAbis","rpc","authorityProvider","abiProvider","signatureProvider","chainId","abiTypes","ser","getTypesFromAbi","createInitialTypes","abiAbi","transactionTypes","transactionAbi","rawAbiToJson","rawAbi","supportedAbiVersion","getCachedAbi","accountName","reload","cachedAbi","getRawAbi","getAbi","getTransactionAbis","transaction","accounts","uniqueAccounts","actionPromises","_this","Set","all","getContract","serializeTransaction","max_net_usage_words","max_cpu_usage_ms","delay_sec","context_free_actions","transaction_extensions","deserializeTransaction","serializeActions","serializeAction","deserializeActions","deserializeAction","deserializeTransactionWithActions","deserializedTransaction","deserializedActions","transact","broadcast","sign","blocksBehind","info","abis","serializedTransaction","pushTransactionArgs","availableKeys","requiredKeys","get_info","chain_id","get_block","head_block_num","transactionHeader","hasRequiredTaposFields","signatures","getAvailableKeys","getRequiredKeys","pushSignedTransaction","push_transaction","extendStatics","__extends","setPrototypeOf","__","create","RpcError","_super","json","details","processed","except","JsonRpc","endpoint","fetch","fetchBuiltin","path","response","method","eosjs_rpcerror_1","isFetchError","ok","get_abi","account_name","get_account","get_block_header_state","blockNumOrId","block_num_or_id","get_code","get_currency_balance","get_currency_stats","get_producer_schedule","get_producers","lowerBound","lower_bound","get_raw_code_and_abi","rawCodeAndAbi","eosjs_numeric_1","base64ToBinary","get_table_rows","scope","table","table_key","upper_bound","index_position","key_type","show_payer","get_table_by_scope","convertLegacyPublicKeys","available_keys","required_keys","compression","packed_context_free_data","packed_trx","db_size_get","history_get_actions","history_get_transaction","id","blockNumHint","block_num_hint","history_get_key_accounts","publicKey","history_get_controlled_accounts","controllingAccount","controlling_account","eosjs_api_1","ApiInterfaces","eosjs_jsonrpc_1","Numeric","RpcInterfaces","Serialize","root","factory","__esModule","digestLength","blockSize","Uint32Array","hashBlocks","w","u","t1","t2","Hash","Int32Array","temp","bufferLength","bytesHashed","finished","reset","clean","update","dataLength","dataPos","finish","left","bitLenHi","bitLenLo","padLength","_saveState","_restoreState","HMAC","inner","outer","istate","ostate","hmac","fillBuffer","counter","hkdfSalt","hkdf","salt","okm","hmac_","bufpos","pbkdf2","password","iterations","dkLen","prf","ctr","dk","k","sha256","module","charset","AbiTypes","abi.data","ChainName","ChainIdLookup","EOS","TELOS","JUNGLE","KYLIN","WORBLI","BOS","MEETONE","INSIGHTS","BEOS","WAX","PROTON","FIO","PlaceholderName","PlaceholderPermission","PlaceholderAuth","actor","permission","SigningRequest","[object Object]","zlib","flags","req","callback","identity","tx","variantId","url","background","fromData","uri","scheme","split","input","base64u.decode","header","inflateRaw","getSignatureDigest","getData","signer","compress","slashes","shouldCompress","sigData","getSignatureData","deflated","deflateRaw","byteRemainder","mainLength","chunk","base64u.encode","getRawActions","filter","isIdentity","getRawTransaction","hasTapos","provider","getRequiredAbis","async","rawAction","contractAbi","auth","ctx","expire_seconds","resolveActions","resolveTransaction","transactionType","ResolvedSigningRequest","has","idType","rv","raw","getRawInfo","encodedValue","pair","find","request","payload","fetchAbis","sa","sp","rbn","rid","ex","blockNum","sig","getTransactionId","bn","_1","_2","UNKNOWN","idToName","defaultSetTimout","defaultClearTimeout","cachedSetTimeout","cachedClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","nextTick","Item","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","performance","performanceNow","now","mozNow","msNow","oNow","webkitNow","getTime","startTime","browser$1","title","browser","env","argv","versions","binding","cwd","chdir","umask","hrtime","previousTimestamp","clocktime","seconds","nanoseconds","platform","release","config","uptime","copyProps","SafeBuffer","SlowBuffer","crypto","msCrypto","getRandomValues","cb","rawBytes","process","Long","high","unsigned","isLong","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","radix","substring","radixToPower","power","add","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","toNumber","isZero","eq","radixLong","div","rem1","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","isPositive","isOdd","isEven","other","notEquals","neq","lessThan","comp","lt","lessThanOrEqual","lte","greaterThan","gt","greaterThanOrEqual","gte","thisNeg","otherNeg","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","b00","divide","approx","toUnsigned","shru","shr","shl","log2","delta","approxRes","approxRem","modulo","mod","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","toSigned","toBytes","le","toBytesLE","toBytesBE","ByteBuffer","capacity","DEFAULT_CAPACITY","DEFAULT_ENDIAN","DEFAULT_NOASSERT","EMPTY_BUFFER","view","markedOffset","VERSION","LITTLE_ENDIAN","BIG_ENDIAN","ByteBufferPrototype","__isByteBuffer__","stringFromCharCode","stringSource","stringDestination","cs","ps","ieee754_read","ieee754_write","accessor","allocate","buffers","isByteBuffer","wrap","bi","bb","fromBase64","fromHex","fromBinary","fromUTF8","fromDebug","clone","writeBitSet","relative","bits","writeVarint32","writeByte","readBitSet","readVarint32","readByte","readBytes","writeBytes","append","capacity0","resize","writeUint8","capacity1","readUint8","writeInt16","capacity2","writeShort","readInt16","readShort","writeUint16","capacity3","writeUInt16","readUint16","readUInt16","writeInt32","capacity4","writeInt","readInt32","readInt","writeUint32","capacity5","writeUInt32","readUint32","readUInt32","writeInt64","capacity6","writeLong","readInt64","readLong","writeUint64","capacity7","writeUInt64","readUint64","readUInt64","writeFloat32","capacity8","readFloat32","readFloat","writeFloat64","capacity9","readFloat64","readDouble","MAX_VARINT32_BYTES","calculateVarint32","zigZagEncode32","zigZagDecode32","capacity10","writeVarint32ZigZag","readVarint32ZigZag","MAX_VARINT64_BYTES","calculateVarint64","part0","part1","part2","zigZagEncode64","zigZagDecode64","writeVarint64","capacity11","writeVarint64ZigZag","readVarint64","readVarint64ZigZag","writeCString","utfx","calculateUTF16asUTF8","capacity12","encodeUTF16toUTF8","bind","readCString","sd","capacity13","capacity14","calculateUTF8Chars","calculateUTF8Bytes","metrics","capacity15","source","capacity16","assert","clear","compact","begin","targetRelative","targetOffset","sourceOffset","current","mark","diff","prepend","aout","fail","toBase64","btoa","atob","toBinary","chars","charCode","asc","columns","rs","ho","hm","hl","ch","cp","c2","c1","toUTF8","fixup_uint32","uint_max","SBOX","INV_SBOX","SUB_MIX","INV_SUB_MIX","Global","_results","xi","sx","x8","x4","x2","bufferToArray","_key","AES","_doReset","keySize","keyWords","ksRows","_keySchedule","_invKeySchedule","invKsRow","ksRow","M","scrub_vec","s0","keySchedule","s1","s2","s3","t0","t3","_maxListeners","arrayClone","handler","events","listener","existing","$getMaxListeners","emitter","fired","evlistener","EventEmitter","domain","_events","er","doError","domainEmitter","emitNone","emitOne","emitTwo","emitThree","originalListener","position","_eventsCount","listenerCount","ctor","super_","superCtor","TempCtor","formatRegExp","traceDeprecation","debugs","console","seen","stylize","depth","isUndefined","showHidden","colors","customInspect","style","stylizeNoColor","isString","primitive","formatProperty","braces","formatError","desc","getOwnPropertyDescriptor","isArray$1","isBoolean","isNull","isNumber","isRegExp","re","isObject","isDate","isError","isFunction","isPrimitive","objectToString","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","null","regexp","getHours","getMinutes","inherits","_extend","isSymbol","isNullOrUndefined","deprecate","format","head","tail","BufferList","entry","isBufferEncoding","assertEncoding","surrogateSize","passThroughWrite","charReceived","StringDecoder","available","charLength","charBuffer","charStr","cr","hwm","defaultHwm","pipes","pipesCount","flowing","ended","endEmitted","needReadable","emittedReadable","readableListening","decoder","objectMode","addToFront","skipAdd","stream","Readable","unshift","_readableState","highWaterMark","debug","maybeReadMore_","resumeScheduled","awaitDrain","flow","nb","readable","WritableState","noDecode","sync","writing","writecb","pendingcb","_writableState","onwrite","bufferedRequest","writelen","_writev","needDrain","onwriteDrain","corkedRequestsFree","doWrite","bufferedRequestCount","needFinish","prefinished","need","prefinish","doRead","reading","_read","endFn","onend","dest","onunpipe","ondrain","increasedAwaitDrain","unpipe","ondata","dests","ev","fn","nReadingNextTick","resume","paused","Writable","pipe","writeAfterEnd","valid","cork","uncork","finishMaybe","ts","writechunk","needTransform","transforming","ws","Transform","_transform","inherits$1","PassThrough","Stream","Duplex","onerror","cleanup","inherits_browser","safeBuffer","Transform$1","hashMode","__final","_decoder","CipherBase","outData","_update","setAutoPadding","_finalOrDigest","outputEnc","cipher","iv","mode","Buffer$2","copyBuffer","custom","emitErrorNT","emitClose","readableDestroyed","destroyed","ending","finalCalled","rState","wState","NodeError","arg1","Base","createErrorType","determiner","search","msg","onCorkedFinish","Writable$1","_require$codes","ERR_INVALID_ARG_TYPE","ERR_METHOD_NOT_IMPLEMENTED","ERR_MULTIPLE_CALLBACK","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","require$$4","Duplex$1","_stream_duplex","onwriteStateUpdate","onwriteStateUpdate$1","errorOrDestroy","corked","onwrite$1","isDuplex","_write","writev","destroy","onwriteDrain$1","holder","allBuffers","doWrite$1","needFinish$1","callFinal","_final","finishMaybe$1","WritableState$1","realHasInstance","object","errorOrDestroy$1","isBuf","writeOrBuffer","decodeStrings","newChunk","destroy_1","method$1","Duplex$2","_stream_writable","allowHalfOpen","nenc","enc","_normalizeEncoding","text","fillLast","lastNeed","lastTotal","byte","lastChar","simpleWrite","simpleEnd","StringDecoder$2","total","opts","writableEnded","readableEnded","onlegacyfinish","onclose","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","createIterResult","iter","AsyncIteratorPrototype","lastPromise","createReadableStreamAsyncIterator","ERR_INVALID_ARG_TYPE$1","_require$codes$1","ERR_METHOD_NOT_IMPLEMENTED$1","errorOrDestroy$2","Duplex$3","readingMore","StringDecoder$3","readableAddChunk$1","debug$1","onEofChunk","emitReadable_","maybeReadMore","Readable$1","Buffer$5","content","nReadingNextTick$1","resume_$1","flow$1","endReadableNT$1","xs","nOrig","unpipeInfo","onfinish","hasUnpiped","iterable","ERR_MULTIPLE_CALLBACK$1","ERR_TRANSFORM_ALREADY_TRANSFORMING","afterTransform","writeencoding","transform","done$1","Transform$2","PassThrough$1","_require$codes$3","called","closed","isRequest$1","streams","_len","destroyer","destroys","require$$1","require$$6","_block","_blockSize","_blockOffset","HashBase","_flush","throwIfNotStringOrBuffer","block","_length","rotl","fnF","fnG","fnH","fnI","MD5","keyLen","ivLen","md5_js","keyStart","used","ivStart","cipherBase","_cipher","_prev","_cache","_secCache","StreamCipher","zeros","fixup_uint32$1","GHASH","lsb_Vi","Vi","Zi","final","ghash","abl","uint_max$1","_finID","_decrypt","_alen","_mode","_ghash","_authTag","StreamCipher$1","_called","rump","tag","encryptStart","encryptByte","byteParam","shiftIn","getBlock$1","incr32","Cipher","thing","Splitter","ECB","CBC","require$$2","CFB","CFB8","CFB1","OFB","CTR","GCM","modes","Decipher","Splitter$1","_last","_autopadding","suite","pSlice","pToString","func","regex","expected","generatedMessage","truncate","stackStartFunction","fn_name","idx","rawname","operator","multiline","lastIndex","actualIndex","memos","aIsArgs","isArguments","bIsArgs","ka","objectKeys","kb","objectKeys$1","sort","userProvidedMessage","expectedException","shouldThrow","AssertionError","default","_typeof","proto","BigInteger","check_ver","DB","FV","F1","BI_FP","vv","BI_RC","rr","int2char","mp","mpl","mph","um","op_and","op_or","op_xor","op_andnot","nNop","r2","dlShiftTo","mu","Classic","convert","revert","mulTo","Montgomery","clamp","copyTo","mi","sh","drShiftTo","lShiftTo","bs","cbs","bm","ds","rShiftTo","subTo","multiplyTo","squareTo","am","divRemTo","pm","pt","q","nsh","ys","y0","yt","d1","d2","compareTo","qd","DM","invDigit","bitLength","NullExp","Barrett","multiplyLowerTo","chunkSize","toRadix","signum","intValue","fromRadix","intAt","dMultiply","bitwiseTo","changeBit","addTo","dAddOffset","DV","multiplyUpperTo","modInt","n1","lowprimes","bases","modPowInt","byteValue","shortValue","andNot","getLowestSetBit","bitCount","testBit","setBit","clearBit","flipBit","remainder","divideAndRemainder","modPow","km","g2","is1","sqrTo","modInverse","ac","nbv","gcd","bigi","toByteArrayUnsigned","equal","toBuffer","Point","curve","isInfinity","x1","y1","v2","square","v3","x1v2","twice","y1z1","y1sqz1","hBit","R","infinity","jBit","kBit","getEncoded","compressed","affineX","decodeFrom","Q","G","point","Curve","pointFromX","beta","lhs","curve$1","curves$2","Gx","toArray","olda","oldb","oldc","md5_ff","md5_gg","md5_hh","md5_ii","safe_add","md5_cmn","lsw","sl","rotl$1","fn1","fn2","fn3","fn4","fn5","RIPEMD160$1","al","bl","cl","dl","br","dr","tl","tr","el","words","zl","Buffer$9","_finalSize","finalSize","assigned","accum","rotl30","Sha","W","H","rotl5$1","rotl30$1","Sha1","maj","sigma0","sigma1","gamma0","Sha256","T1","K$2","Sha224","Ch","maj$1","sigma0$1","sigma1$1","Gamma0","xl","Gamma0l","Gamma1","Gamma1l","getCarry","Sha512","_ah","_bh","_ch","_dh","_eh","_fh","_gh","_al","_bl","_cl","_dl","_el","_fl","_gl","ah","bh","dh","eh","fh","gh","fl","gl","xh","gamma1","Wi7h","Wi16h","Wil","gamma0l","Wih","gamma1l","Wi16l","majh","sigma0h","sigma0l","sigma1h","Kih","chh","t1l","sigma1l","t1h","chl","Kil","t2l","majl","hh","writeInt64BE","Sha384","sha_js","Algorithm","sha","sha1","sha224","require$$3","sha384","require$$5","_hash","HashNoConstructor","Hash$1","alg","ZEROS","_alg","blocksize","ipad","_ipad","Hmac","Hmac$1","sha512","HmacSHA256","browser$5","createHash","ALPHABET","BASE_MAP","xc","BASE","LEADER","charAt","FACTOR","zeroes","psz","b256","it3","vch","it4","_Buffer","pbegin","it1","b58","repeat","it2","decodeUnsafe","random32ByteBuffer","_ref","_ref$cpuEntropyBits","cpuEntropyBits","_ref$safe","_typeof2","hash_array","browser$2","externalEntropyArray","addEntropy","i2","cpuEntropy","checkDecode","checksum","checkEncode","keyBuffer","entropyPos","_entropyCount","collected","lastCount","lowEntropySamples","mimeType","entropy","entropyStr","G$1","PublicKey","toUncompressed","ecurve","child","cG","secp256k1","Qprime","_match","keyType","keyUtils","arr2","toWif","toPublic","getSharedSecret","KB","KBP","fromAffine","getChildKey","parseKey","versionKey","privateKey","PrivateKey","fromBuffer","safe","pvt","pub","key_utils","encrypt","decrypt","nonce","S","ebuf","encryption_key","check","toBinaryBuffer","toDER","rBa","toDERInteger","sBa","sequence","enforceType","toCompact","toScriptSignature","hashType","hashTypeBuffer","ECSignature","rB","fromDERInteger","lib","hashTypeMod","hash$1","checkSig","u1","recoverPubKey","rInv","calcPubKeyRecoveryParam","deterministicGenerateK","N_OVER_TWO","verify","Signature","dataSha256","key_public","verifyHash","recover","recoverHash","signatureCache","der","ecsignature","lenR","seed","wif","pubkey","signature$1","Aes","ecc","WebSocket","MozWebSocket","commonjsGlobal","Uint16Array","_has","sources","chunks","setTyped","Buf32","extra_lbits","extra_dbits","extra_blbits","static_ltree","zero","static_dtree","_dist_code","_length_code","base_length","static_l_desc","static_d_desc","base_dist","static_tree","extra_bits","extra_base","elems","dyn_tree","max_code","d_code","dist","pending_buf","pending","put_short","bi_buf","tree","bi_reverse","next_code","L_CODES","dyn_ltree","D_CODES","dyn_dtree","END_BLOCK","opt_len","static_len","smaller","_n2","heap_len","lc","lx","send_code","LITERALS","extra","dtree","stree","stat_desc","has_stree","heap","node","heap_max","xbits","max_length","MAX_BITS","bl_count","prevlen","max_count","curlen","bl_tree","send_bits","last","common","LENGTH_CODES","StaticTreeDesc","tr_static_init","l_desc","TreeDesc","d_desc","_tr_stored_block","opt_lenb","black_mask","scan_tree","lcodes","dcodes","blcodes","send_all_trees","d_buf","last_lit","STATIC_TREES","adler","2","1","0","-1","-2","-3","-4","-5","Z_STREAM_ERROR","MAX_MATCH$1","HCRC_STATE","BUSY_STATE","strm","rank","total_out","trees","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","w_size","wmask","w_mask","strend","scan_end1","_win","scan_end","lookahead","_w_size","match_start","hash_size","prev","adler32","next_in","hash_head","fill_window","ins_h","strstart","match_length","flush_block_only","prev_match","MIN_MATCH","match_available","MIN_MATCH$1","good_length","max_lazy","nice_length","max_chain","status","pending_buf_size","pending_out","gzhead","gzindex","w_bits","hash_bits","level","utils","Buf16","HEAP_SIZE$1","matches","total_in","deflateReset","max_lazy_match","good_match","configuration_table","block_start","insert","windowBits","memLevel","strategy","hash_mask","Config","deflate_slow","deflateInit2","deflateResetKeep","old_flush","flush","put_byte","hcrc","time","putShortMSB","beg","flush_pending","comment","FINISH_STATE","bstate","bflush","deflate_huff","deflate_rle","dictionary","avail","zero$1","tmpDict","avail_in","dictLength","STR_APPLY_OK","Buf8","m_pos","buf_len","c_len","utf16buf","Z_DEFAULT_STRATEGY","opt","Deflate","next_out","onEnd","onData","deflateEnd","_in","_out","wsize","whave","s_window","hold","lcode","dcode","lmask","dmask","here","wnext","lencode","distcode","lenbits","top","dolen","dodist","sane","from_source","avail_out","MAXBITS","lext","dext","incr","mask","sym","curr","drop","huff","offs","base_index","extra_index","table_index","here_bits","here_op","work","Z_DATA_ERROR","TYPE$1","BAD$1","havedict","dmax","wbits","ncode","nlen","ndist","have","lens","lendyn","distdyn","back","inflateInit2","lenfix","distfix","inflateReset2","put","last_bits","hbuf","order","inf_leave","xflags","arraySet","TYPE","CODES","inftrees","LENS","DISTS","last_op","last_val","was","here_val","Z_FINISH","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_BINARY","Inflate","Z_BUF_ERROR","inflateEnd","validate","v4","rnds","super","XMLHttpRequest","oldValue","normalizeName","items","statusText","headers","Headers","Request","rawHeaders","xhr","getOwnPropertyNames","bodyUsed","fileReaderReady","reader","readAsArrayBuffer","bufferClone","_bodyInit","_bodyText","_bodyBlob","_bodyFormData","URLSearchParams","_bodyArrayBuffer","Blob","readAsText","credentials","form","shift","Response","ricardian_clauses","error_messages","tables","types$1","dist_7","storage","LinkChannelSession","link","channel","identifier","ciphertext","transport","onSuccess","onFailure","onSessionRequest","SessionError","metadata","abiCache","chainName","serviceAddress","createCallbackUrl","active","socketUrl","browser$7","cancel","socket","readyState","OPEN","event","waitForCallback","reason","resolved","anyArgs","signerKey","keyB","weight","requestPermission","ecc.PrivateKey.fromBuffer","session_name","session","link_ch","link_key","LinkFallbackSession","latest","sessionData","setCallback","auths","formattedAuth","formatAuth","remove","sessionKey","allocUnsafe$1","createBuffer$1","Buffer$j","toSJISFunction","digit","kanji","bufIndex","BufferUtil","BitMatrix","row","col","posCount","intervals","coords","getSymbolSize$1","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","PenaltyScores","Patterns","points","sameCountCol","sameCountRow","lastCol","lastRow","bitsCol","bitsRow","darkCount","isReserved","setupFormatFunc","numPatterns","bestPattern","getPenaltyN1","getPenaltyN2","getPenaltyN3","lowerPenalty","EXP_TABLE","degree","genPoly","ReedSolomonEncoder","RegExp","TEST_KANJI","TEST_NUMERIC","ccBits","MIXED","dataStr","Regex","testAlphanumeric","currentVersion","NUMERIC","NumericData","remainingNum","ALPHANUMERIC","AlphanumericData","ByteData","getBitsLength","getLength","KANJI","KanjiData","closest","cost_of_s_to_u","adjacent_nodes","cost_of_s_to_u_plus_cost_of_e","cost_of_s_to_v","open","dijkstra","costs","nodes","extract_shortest_path_from_predecessor_list","getStringByteLength","segments","byteSegs","numSegs","alphaNumSegs","regex$1","BYTE","numericData","alphanumericData","kanjiData","mode$1","seg","buildSingleSegment","graph","nodeGroup","currentNodeIds","getSegmentBitsLength","prevNodeId","Mode","segs","buildNodes","acc","prevSeg","FormatInfo","formatInfo","totalCodewords","dataCodewordsInGroup1","dcData","ecTotalBlocks","ecData","maxDataSize","bestVersion","moduleCount","setupFinderPattern","modules","matrix","setupTimingPattern","Version","inc","bitIndex","byteIndex","errorCorrectionLevel","maskPattern","errorCorrectionLevel$1","hexCode","hexValue","margin","width","scale","dark","color","qr","symbolSize","scaledMargin","posDst","imgData","pxColor","document","canvas","height","clearCanvas","canvasEl","alpha","svgCmd","Utils","utils$1","qrData","bg","getColorAttrib","moveBy","newRow","argsNum","renderFunc","render","classPrefix","injectStyles","requestStatus","Storage","activeCancel","activeRequest","styleEl","styleText","appendChild","containerEl","className","wrapper","createEl","sameDeviceRequest","setInfoKey","linkEl","class","iframe","infoEl","infoTitle","infoSubtitle","backgroundEl","waveBackground","footnoteEl","actionEl","href","emptyElement","requestEl","logoEl","deviceName","timeLeft","updateCountdown","subtitle","sameDevice","closeTimer","show","hide","returnUrlAlphabet","location","transportOptions"],"mappings":"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"}