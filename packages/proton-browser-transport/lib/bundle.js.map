{"version":3,"file":"bundle.js","sources":["../../../node_modules/tslib/tslib.es6.js","../../../node_modules/qrcode/lib/can-promise.js","../../../node_modules/qrcode/node_modules/isarray/index.js","../../../node_modules/qrcode/lib/utils/typedarray-buffer.js","../../../node_modules/qrcode/lib/core/utils.js","../../../node_modules/qrcode/lib/core/error-correction-level.js","../../../node_modules/qrcode/lib/core/bit-buffer.js","../../../node_modules/qrcode/lib/core/bit-matrix.js","../../../node_modules/qrcode/lib/core/alignment-pattern.js","../../../node_modules/qrcode/lib/core/finder-pattern.js","../../../node_modules/qrcode/lib/core/mask-pattern.js","../../../node_modules/qrcode/lib/core/error-correction-code.js","../../../node_modules/qrcode/lib/core/galois-field.js","../../../node_modules/qrcode/lib/core/polynomial.js","../../../node_modules/rollup-plugin-node-polyfills/polyfills/buffer-es6.js","../../../node_modules/qrcode/lib/core/reed-solomon-encoder.js","../../../node_modules/qrcode/lib/core/version-check.js","../../../node_modules/qrcode/lib/core/regex.js","../../../node_modules/qrcode/lib/core/mode.js","../../../node_modules/qrcode/lib/core/version.js","../../../node_modules/qrcode/lib/core/format-info.js","../../../node_modules/qrcode/lib/core/numeric-data.js","../../../node_modules/qrcode/lib/core/alphanumeric-data.js","../../../node_modules/qrcode/lib/core/byte-data.js","../../../node_modules/qrcode/lib/core/kanji-data.js","../../../node_modules/dijkstrajs/dijkstra.js","../../../node_modules/qrcode/lib/core/segments.js","../../../node_modules/qrcode/lib/core/qrcode.js","../../../node_modules/qrcode/lib/renderer/utils.js","../../../node_modules/qrcode/lib/renderer/canvas.js","../../../node_modules/qrcode/lib/renderer/svg-tag.js","../../../node_modules/qrcode/lib/browser.js","../src/index.ts","../src/styles.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","// can-promise has a crash in some versions of react native that dont have\n// standard global objects\n// https://github.com/soldair/node-qrcode/issues/157\n\nmodule.exports = function () {\n  return typeof Promise === 'function' && Promise.prototype && Promise.prototype.then\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/**\n * Implementation of a subset of node.js Buffer methods for the browser.\n * Based on https://github.com/feross/buffer\n */\n\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar isArray = require('isarray')\n\nfunction typedArraySupport () {\n  // Can typed array instances be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nvar K_MAX_LENGTH = Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n\nfunction Buffer (arg, offset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, offset, length)\n  }\n\n  if (typeof arg === 'number') {\n    return allocUnsafe(this, arg)\n  }\n\n  return from(this, arg, offset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n\n  // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true,\n      enumerable: false,\n      writable: false\n    })\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\nfunction createBuffer (that, length) {\n  var buf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    buf = new Uint8Array(length)\n    buf.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    buf = that\n    if (buf === null) {\n      buf = new Buffer(length)\n    }\n    buf.length = length\n  }\n\n  return buf\n}\n\nfunction allocUnsafe (that, size) {\n  var buf = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      buf[i] = 0\n    }\n  }\n\n  return buf\n}\n\nfunction fromString (that, string) {\n  var length = byteLength(string) | 0\n  var buf = createBuffer(that, length)\n\n  var actual = buf.write(string)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    buf.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    buf = fromArrayLike(that, buf)\n  }\n\n  return buf\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(that, len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction byteLength (string) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  return utf8ToBytes(string).length\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction from (that, value, offset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, offset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, offset)\n  }\n\n  return fromObject(that, value)\n}\n\nBuffer.prototype.write = function write (string, offset, length) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n    } else {\n      length = undefined\n    }\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  return utf8Write(this, string, offset, length)\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    // Return an augmented `Uint8Array` instance\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\nBuffer.prototype.fill = function fill (val, start, end) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : new Buffer(val)\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return createBuffer(null, 0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = allocUnsafe(null, length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nBuffer.byteLength = byteLength\n\nBuffer.prototype._isBuffer = true\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nmodule.exports.alloc = function (size) {\n  var buffer = new Buffer(size)\n  buffer.fill(0)\n  return buffer\n}\n\nmodule.exports.from = function (data) {\n  return new Buffer(data)\n}\n","var toSJISFunction\nvar CODEWORDS_COUNT = [\n  0, // Not used\n  26, 44, 70, 100, 134, 172, 196, 242, 292, 346,\n  404, 466, 532, 581, 655, 733, 815, 901, 991, 1085,\n  1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185,\n  2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706\n]\n\n/**\n * Returns the QR Code size for the specified version\n *\n * @param  {Number} version QR Code version\n * @return {Number}         size of QR code\n */\nexports.getSymbolSize = function getSymbolSize (version) {\n  if (!version) throw new Error('\"version\" cannot be null or undefined')\n  if (version < 1 || version > 40) throw new Error('\"version\" should be in range from 1 to 40')\n  return version * 4 + 17\n}\n\n/**\n * Returns the total number of codewords used to store data and EC information.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Data length in bits\n */\nexports.getSymbolTotalCodewords = function getSymbolTotalCodewords (version) {\n  return CODEWORDS_COUNT[version]\n}\n\n/**\n * Encode data with Bose-Chaudhuri-Hocquenghem\n *\n * @param  {Number} data Value to encode\n * @return {Number}      Encoded value\n */\nexports.getBCHDigit = function (data) {\n  var digit = 0\n\n  while (data !== 0) {\n    digit++\n    data >>>= 1\n  }\n\n  return digit\n}\n\nexports.setToSJISFunction = function setToSJISFunction (f) {\n  if (typeof f !== 'function') {\n    throw new Error('\"toSJISFunc\" is not a valid function.')\n  }\n\n  toSJISFunction = f\n}\n\nexports.isKanjiModeEnabled = function () {\n  return typeof toSJISFunction !== 'undefined'\n}\n\nexports.toSJIS = function toSJIS (kanji) {\n  return toSJISFunction(kanji)\n}\n","exports.L = { bit: 1 }\nexports.M = { bit: 0 }\nexports.Q = { bit: 3 }\nexports.H = { bit: 2 }\n\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  var lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'l':\n    case 'low':\n      return exports.L\n\n    case 'm':\n    case 'medium':\n      return exports.M\n\n    case 'q':\n    case 'quartile':\n      return exports.Q\n\n    case 'h':\n    case 'high':\n      return exports.H\n\n    default:\n      throw new Error('Unknown EC Level: ' + string)\n  }\n}\n\nexports.isValid = function isValid (level) {\n  return level && typeof level.bit !== 'undefined' &&\n    level.bit >= 0 && level.bit < 4\n}\n\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n","function BitBuffer () {\n  this.buffer = []\n  this.length = 0\n}\n\nBitBuffer.prototype = {\n\n  get: function (index) {\n    var bufIndex = Math.floor(index / 8)\n    return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) === 1\n  },\n\n  put: function (num, length) {\n    for (var i = 0; i < length; i++) {\n      this.putBit(((num >>> (length - i - 1)) & 1) === 1)\n    }\n  },\n\n  getLengthInBits: function () {\n    return this.length\n  },\n\n  putBit: function (bit) {\n    var bufIndex = Math.floor(this.length / 8)\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0)\n    }\n\n    if (bit) {\n      this.buffer[bufIndex] |= (0x80 >>> (this.length % 8))\n    }\n\n    this.length++\n  }\n}\n\nmodule.exports = BitBuffer\n","var BufferUtil = require('../utils/buffer')\n\n/**\n * Helper class to handle QR Code symbol modules\n *\n * @param {Number} size Symbol size\n */\nfunction BitMatrix (size) {\n  if (!size || size < 1) {\n    throw new Error('BitMatrix size must be defined and greater than 0')\n  }\n\n  this.size = size\n  this.data = BufferUtil.alloc(size * size)\n  this.reservedBit = BufferUtil.alloc(size * size)\n}\n\n/**\n * Set bit value at specified location\n * If reserved flag is set, this bit will be ignored during masking process\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n * @param {Boolean} reserved\n */\nBitMatrix.prototype.set = function (row, col, value, reserved) {\n  var index = row * this.size + col\n  this.data[index] = value\n  if (reserved) this.reservedBit[index] = true\n}\n\n/**\n * Returns bit value at specified location\n *\n * @param  {Number}  row\n * @param  {Number}  col\n * @return {Boolean}\n */\nBitMatrix.prototype.get = function (row, col) {\n  return this.data[row * this.size + col]\n}\n\n/**\n * Applies xor operator at specified location\n * (used during masking process)\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n */\nBitMatrix.prototype.xor = function (row, col, value) {\n  this.data[row * this.size + col] ^= value\n}\n\n/**\n * Check if bit at specified location is reserved\n *\n * @param {Number}   row\n * @param {Number}   col\n * @return {Boolean}\n */\nBitMatrix.prototype.isReserved = function (row, col) {\n  return this.reservedBit[row * this.size + col]\n}\n\nmodule.exports = BitMatrix\n","/**\n * Alignment pattern are fixed reference pattern in defined positions\n * in a matrix symbology, which enables the decode software to re-synchronise\n * the coordinate mapping of the image modules in the event of moderate amounts\n * of distortion of the image.\n *\n * Alignment patterns are present only in QR Code symbols of version 2 or larger\n * and their number depends on the symbol version.\n */\n\nvar getSymbolSize = require('./utils').getSymbolSize\n\n/**\n * Calculate the row/column coordinates of the center module of each alignment pattern\n * for the specified QR Code version.\n *\n * The alignment patterns are positioned symmetrically on either side of the diagonal\n * running from the top left corner of the symbol to the bottom right corner.\n *\n * Since positions are simmetrical only half of the coordinates are returned.\n * Each item of the array will represent in turn the x and y coordinate.\n * @see {@link getPositions}\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinate\n */\nexports.getRowColCoords = function getRowColCoords (version) {\n  if (version === 1) return []\n\n  var posCount = Math.floor(version / 7) + 2\n  var size = getSymbolSize(version)\n  var intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2\n  var positions = [size - 7] // Last coord is always (size - 7)\n\n  for (var i = 1; i < posCount - 1; i++) {\n    positions[i] = positions[i - 1] - intervals\n  }\n\n  positions.push(6) // First coord is always 6\n\n  return positions.reverse()\n}\n\n/**\n * Returns an array containing the positions of each alignment pattern.\n * Each array's element represent the center point of the pattern as (x, y) coordinates\n *\n * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\n * and filtering out the items that overlaps with finder pattern\n *\n * @example\n * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\n * The alignment patterns, therefore, are to be centered on (row, column)\n * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\n * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\n * and are not therefore used for alignment patterns.\n *\n * var pos = getPositions(7)\n * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  var coords = []\n  var pos = exports.getRowColCoords(version)\n  var posLength = pos.length\n\n  for (var i = 0; i < posLength; i++) {\n    for (var j = 0; j < posLength; j++) {\n      // Skip if position is occupied by finder patterns\n      if ((i === 0 && j === 0) ||             // top-left\n          (i === 0 && j === posLength - 1) || // bottom-left\n          (i === posLength - 1 && j === 0)) { // top-right\n        continue\n      }\n\n      coords.push([pos[i], pos[j]])\n    }\n  }\n\n  return coords\n}\n","var getSymbolSize = require('./utils').getSymbolSize\nvar FINDER_PATTERN_SIZE = 7\n\n/**\n * Returns an array containing the positions of each finder pattern.\n * Each array's element represent the top-left point of the pattern as (x, y) coordinates\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  var size = getSymbolSize(version)\n\n  return [\n    // top-left\n    [0, 0],\n    // top-right\n    [size - FINDER_PATTERN_SIZE, 0],\n    // bottom-left\n    [0, size - FINDER_PATTERN_SIZE]\n  ]\n}\n","/**\n * Data mask pattern reference\n * @type {Object}\n */\nexports.Patterns = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7\n}\n\n/**\n * Weighted penalty scores for the undesirable features\n * @type {Object}\n */\nvar PenaltyScores = {\n  N1: 3,\n  N2: 3,\n  N3: 40,\n  N4: 10\n}\n\n/**\n * Check if mask pattern value is valid\n *\n * @param  {Number}  mask    Mask pattern\n * @return {Boolean}         true if valid, false otherwise\n */\nexports.isValid = function isValid (mask) {\n  return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7\n}\n\n/**\n * Returns mask pattern from a value.\n * If value is not valid, returns undefined\n *\n * @param  {Number|String} value        Mask pattern value\n * @return {Number}                     Valid mask pattern or undefined\n */\nexports.from = function from (value) {\n  return exports.isValid(value) ? parseInt(value, 10) : undefined\n}\n\n/**\n* Find adjacent modules in row/column with the same color\n* and assign a penalty value.\n*\n* Points: N1 + i\n* i is the amount by which the number of adjacent modules of the same color exceeds 5\n*/\nexports.getPenaltyN1 = function getPenaltyN1 (data) {\n  var size = data.size\n  var points = 0\n  var sameCountCol = 0\n  var sameCountRow = 0\n  var lastCol = null\n  var lastRow = null\n\n  for (var row = 0; row < size; row++) {\n    sameCountCol = sameCountRow = 0\n    lastCol = lastRow = null\n\n    for (var col = 0; col < size; col++) {\n      var module = data.get(row, col)\n      if (module === lastCol) {\n        sameCountCol++\n      } else {\n        if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n        lastCol = module\n        sameCountCol = 1\n      }\n\n      module = data.get(col, row)\n      if (module === lastRow) {\n        sameCountRow++\n      } else {\n        if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n        lastRow = module\n        sameCountRow = 1\n      }\n    }\n\n    if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n    if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n  }\n\n  return points\n}\n\n/**\n * Find 2x2 blocks with the same color and assign a penalty value\n *\n * Points: N2 * (m - 1) * (n - 1)\n */\nexports.getPenaltyN2 = function getPenaltyN2 (data) {\n  var size = data.size\n  var points = 0\n\n  for (var row = 0; row < size - 1; row++) {\n    for (var col = 0; col < size - 1; col++) {\n      var last = data.get(row, col) +\n        data.get(row, col + 1) +\n        data.get(row + 1, col) +\n        data.get(row + 1, col + 1)\n\n      if (last === 4 || last === 0) points++\n    }\n  }\n\n  return points * PenaltyScores.N2\n}\n\n/**\n * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\n * preceded or followed by light area 4 modules wide\n *\n * Points: N3 * number of pattern found\n */\nexports.getPenaltyN3 = function getPenaltyN3 (data) {\n  var size = data.size\n  var points = 0\n  var bitsCol = 0\n  var bitsRow = 0\n\n  for (var row = 0; row < size; row++) {\n    bitsCol = bitsRow = 0\n    for (var col = 0; col < size; col++) {\n      bitsCol = ((bitsCol << 1) & 0x7FF) | data.get(row, col)\n      if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D)) points++\n\n      bitsRow = ((bitsRow << 1) & 0x7FF) | data.get(col, row)\n      if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D)) points++\n    }\n  }\n\n  return points * PenaltyScores.N3\n}\n\n/**\n * Calculate proportion of dark modules in entire symbol\n *\n * Points: N4 * k\n *\n * k is the rating of the deviation of the proportion of dark modules\n * in the symbol from 50% in steps of 5%\n */\nexports.getPenaltyN4 = function getPenaltyN4 (data) {\n  var darkCount = 0\n  var modulesCount = data.data.length\n\n  for (var i = 0; i < modulesCount; i++) darkCount += data.data[i]\n\n  var k = Math.abs(Math.ceil((darkCount * 100 / modulesCount) / 5) - 10)\n\n  return k * PenaltyScores.N4\n}\n\n/**\n * Return mask value at given position\n *\n * @param  {Number} maskPattern Pattern reference value\n * @param  {Number} i           Row\n * @param  {Number} j           Column\n * @return {Boolean}            Mask value\n */\nfunction getMaskAt (maskPattern, i, j) {\n  switch (maskPattern) {\n    case exports.Patterns.PATTERN000: return (i + j) % 2 === 0\n    case exports.Patterns.PATTERN001: return i % 2 === 0\n    case exports.Patterns.PATTERN010: return j % 3 === 0\n    case exports.Patterns.PATTERN011: return (i + j) % 3 === 0\n    case exports.Patterns.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0\n    case exports.Patterns.PATTERN101: return (i * j) % 2 + (i * j) % 3 === 0\n    case exports.Patterns.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 === 0\n    case exports.Patterns.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 === 0\n\n    default: throw new Error('bad maskPattern:' + maskPattern)\n  }\n}\n\n/**\n * Apply a mask pattern to a BitMatrix\n *\n * @param  {Number}    pattern Pattern reference number\n * @param  {BitMatrix} data    BitMatrix data\n */\nexports.applyMask = function applyMask (pattern, data) {\n  var size = data.size\n\n  for (var col = 0; col < size; col++) {\n    for (var row = 0; row < size; row++) {\n      if (data.isReserved(row, col)) continue\n      data.xor(row, col, getMaskAt(pattern, row, col))\n    }\n  }\n}\n\n/**\n * Returns the best mask pattern for data\n *\n * @param  {BitMatrix} data\n * @return {Number} Mask pattern reference number\n */\nexports.getBestMask = function getBestMask (data, setupFormatFunc) {\n  var numPatterns = Object.keys(exports.Patterns).length\n  var bestPattern = 0\n  var lowerPenalty = Infinity\n\n  for (var p = 0; p < numPatterns; p++) {\n    setupFormatFunc(p)\n    exports.applyMask(p, data)\n\n    // Calculate penalty\n    var penalty =\n      exports.getPenaltyN1(data) +\n      exports.getPenaltyN2(data) +\n      exports.getPenaltyN3(data) +\n      exports.getPenaltyN4(data)\n\n    // Undo previously applied mask\n    exports.applyMask(p, data)\n\n    if (penalty < lowerPenalty) {\n      lowerPenalty = penalty\n      bestPattern = p\n    }\n  }\n\n  return bestPattern\n}\n","var ECLevel = require('./error-correction-level')\r\n\r\nvar EC_BLOCKS_TABLE = [\r\n// L  M  Q  H\r\n  1, 1, 1, 1,\r\n  1, 1, 1, 1,\r\n  1, 1, 2, 2,\r\n  1, 2, 2, 4,\r\n  1, 2, 4, 4,\r\n  2, 4, 4, 4,\r\n  2, 4, 6, 5,\r\n  2, 4, 6, 6,\r\n  2, 5, 8, 8,\r\n  4, 5, 8, 8,\r\n  4, 5, 8, 11,\r\n  4, 8, 10, 11,\r\n  4, 9, 12, 16,\r\n  4, 9, 16, 16,\r\n  6, 10, 12, 18,\r\n  6, 10, 17, 16,\r\n  6, 11, 16, 19,\r\n  6, 13, 18, 21,\r\n  7, 14, 21, 25,\r\n  8, 16, 20, 25,\r\n  8, 17, 23, 25,\r\n  9, 17, 23, 34,\r\n  9, 18, 25, 30,\r\n  10, 20, 27, 32,\r\n  12, 21, 29, 35,\r\n  12, 23, 34, 37,\r\n  12, 25, 34, 40,\r\n  13, 26, 35, 42,\r\n  14, 28, 38, 45,\r\n  15, 29, 40, 48,\r\n  16, 31, 43, 51,\r\n  17, 33, 45, 54,\r\n  18, 35, 48, 57,\r\n  19, 37, 51, 60,\r\n  19, 38, 53, 63,\r\n  20, 40, 56, 66,\r\n  21, 43, 59, 70,\r\n  22, 45, 62, 74,\r\n  24, 47, 65, 77,\r\n  25, 49, 68, 81\r\n]\r\n\r\nvar EC_CODEWORDS_TABLE = [\r\n// L  M  Q  H\r\n  7, 10, 13, 17,\r\n  10, 16, 22, 28,\r\n  15, 26, 36, 44,\r\n  20, 36, 52, 64,\r\n  26, 48, 72, 88,\r\n  36, 64, 96, 112,\r\n  40, 72, 108, 130,\r\n  48, 88, 132, 156,\r\n  60, 110, 160, 192,\r\n  72, 130, 192, 224,\r\n  80, 150, 224, 264,\r\n  96, 176, 260, 308,\r\n  104, 198, 288, 352,\r\n  120, 216, 320, 384,\r\n  132, 240, 360, 432,\r\n  144, 280, 408, 480,\r\n  168, 308, 448, 532,\r\n  180, 338, 504, 588,\r\n  196, 364, 546, 650,\r\n  224, 416, 600, 700,\r\n  224, 442, 644, 750,\r\n  252, 476, 690, 816,\r\n  270, 504, 750, 900,\r\n  300, 560, 810, 960,\r\n  312, 588, 870, 1050,\r\n  336, 644, 952, 1110,\r\n  360, 700, 1020, 1200,\r\n  390, 728, 1050, 1260,\r\n  420, 784, 1140, 1350,\r\n  450, 812, 1200, 1440,\r\n  480, 868, 1290, 1530,\r\n  510, 924, 1350, 1620,\r\n  540, 980, 1440, 1710,\r\n  570, 1036, 1530, 1800,\r\n  570, 1064, 1590, 1890,\r\n  600, 1120, 1680, 1980,\r\n  630, 1204, 1770, 2100,\r\n  660, 1260, 1860, 2220,\r\n  720, 1316, 1950, 2310,\r\n  750, 1372, 2040, 2430\r\n]\r\n\r\n/**\r\n * Returns the number of error correction block that the QR Code should contain\r\n * for the specified version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction blocks\r\n */\r\nexports.getBlocksCount = function getBlocksCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the number of error correction codewords to use for the specified\r\n * version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction codewords\r\n */\r\nexports.getTotalCodewordsCount = function getTotalCodewordsCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n","var BufferUtil = require('../utils/buffer')\n\nvar EXP_TABLE = BufferUtil.alloc(512)\nvar LOG_TABLE = BufferUtil.alloc(256)\n/**\n * Precompute the log and anti-log tables for faster computation later\n *\n * For each possible value in the galois field 2^8, we will pre-compute\n * the logarithm and anti-logarithm (exponential) of this value\n *\n * ref {@link https://en.wikiversity.org/wiki/Reed%E2%80%93Solomon_codes_for_coders#Introduction_to_mathematical_fields}\n */\n;(function initTables () {\n  var x = 1\n  for (var i = 0; i < 255; i++) {\n    EXP_TABLE[i] = x\n    LOG_TABLE[x] = i\n\n    x <<= 1 // multiply by 2\n\n    // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\n    // This means that when a number is 256 or larger, it should be XORed with 0x11D.\n    if (x & 0x100) { // similar to x >= 256, but a lot faster (because 0x100 == 256)\n      x ^= 0x11D\n    }\n  }\n\n  // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\n  // stay inside the bounds (because we will mainly use this table for the multiplication of\n  // two GF numbers, no more).\n  // @see {@link mul}\n  for (i = 255; i < 512; i++) {\n    EXP_TABLE[i] = EXP_TABLE[i - 255]\n  }\n}())\n\n/**\n * Returns log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.log = function log (n) {\n  if (n < 1) throw new Error('log(' + n + ')')\n  return LOG_TABLE[n]\n}\n\n/**\n * Returns anti-log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.exp = function exp (n) {\n  return EXP_TABLE[n]\n}\n\n/**\n * Multiplies two number inside Galois Field\n *\n * @param  {Number} x\n * @param  {Number} y\n * @return {Number}\n */\nexports.mul = function mul (x, y) {\n  if (x === 0 || y === 0) return 0\n\n  // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized\n  // @see {@link initTables}\n  return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]]\n}\n","var BufferUtil = require('../utils/buffer')\nvar GF = require('./galois-field')\n\n/**\n * Multiplies two polynomials inside Galois Field\n *\n * @param  {Buffer} p1 Polynomial\n * @param  {Buffer} p2 Polynomial\n * @return {Buffer}    Product of p1 and p2\n */\nexports.mul = function mul (p1, p2) {\n  var coeff = BufferUtil.alloc(p1.length + p2.length - 1)\n\n  for (var i = 0; i < p1.length; i++) {\n    for (var j = 0; j < p2.length; j++) {\n      coeff[i + j] ^= GF.mul(p1[i], p2[j])\n    }\n  }\n\n  return coeff\n}\n\n/**\n * Calculate the remainder of polynomials division\n *\n * @param  {Buffer} divident Polynomial\n * @param  {Buffer} divisor  Polynomial\n * @return {Buffer}          Remainder\n */\nexports.mod = function mod (divident, divisor) {\n  var result = BufferUtil.from(divident)\n\n  while ((result.length - divisor.length) >= 0) {\n    var coeff = result[0]\n\n    for (var i = 0; i < divisor.length; i++) {\n      result[i] ^= GF.mul(divisor[i], coeff)\n    }\n\n    // remove all zeros from buffer head\n    var offset = 0\n    while (offset < result.length && result[offset] === 0) offset++\n    result = result.slice(offset)\n  }\n\n  return result\n}\n\n/**\n * Generate an irreducible generator polynomial of specified degree\n * (used by Reed-Solomon encoder)\n *\n * @param  {Number} degree Degree of the generator polynomial\n * @return {Buffer}        Buffer containing polynomial coefficients\n */\nexports.generateECPolynomial = function generateECPolynomial (degree) {\n  var poly = BufferUtil.from([1])\n  for (var i = 0; i < degree; i++) {\n    poly = exports.mul(poly, [1, GF.exp(i)])\n  }\n\n  return poly\n}\n","var lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar inited = false;\nfunction init () {\n  inited = true;\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62;\n  revLookup['_'.charCodeAt(0)] = 63;\n}\n\nfunction toByteArray (b64) {\n  if (!inited) {\n    init();\n  }\n  var i, j, l, tmp, placeHolders, arr;\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders);\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len;\n\n  var L = 0;\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)];\n    arr[L++] = (tmp >> 16) & 0xFF;\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4);\n    arr[L++] = tmp & 0xFF;\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2);\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  if (!inited) {\n    init();\n  }\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n  var output = '';\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    output += lookup[tmp >> 2];\n    output += lookup[(tmp << 4) & 0x3F];\n    output += '==';\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1]);\n    output += lookup[tmp >> 10];\n    output += lookup[(tmp >> 4) & 0x3F];\n    output += lookup[(tmp << 2) & 0x3F];\n    output += '=';\n  }\n\n  parts.push(output);\n\n  return parts.join('')\n}\n\nfunction read (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? (nBytes - 1) : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nfunction write (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);\n  var i = isLE ? 0 : (nBytes - 1);\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n}\n\nvar toString = {}.toString;\n\nvar isArray = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar INSPECT_MAX_BYTES = 50;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : true;\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nvar _kMaxLength = kMaxLength();\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n    that.length = length;\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr\n};\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size);\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n};\n\nfunction allocUnsafe (that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n};\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (internalIsBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0;\n  }\n  return Buffer.alloc(+length)\n}\nBuffer.isBuffer = isBuffer;\nfunction internalIsBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n};\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n    if (!internalIsBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n  return buffer\n};\n\nfunction byteLength (string, encoding) {\n  if (internalIsBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false;\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true;\n\nfunction swap (b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length;\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n  return this\n};\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length;\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n  return this\n};\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length;\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n  return this\n};\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0;\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n};\n\nBuffer.prototype.equals = function equals (b) {\n  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n};\n\nBuffer.prototype.inspect = function inspect () {\n  var str = '';\n  var max = INSPECT_MAX_BYTES;\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n  return '<Buffer ' + str + '>'\n};\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!internalIsBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  byteOffset = +byteOffset;  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1);\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (internalIsBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i;\n  if (dir) {\n    var foundIndex = -1;\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n};\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n};\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed;\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n};\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return fromByteArray(buf)\n  } else {\n    return fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n\n  var i = start;\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = '';\n  var i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    );\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length;\n\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n\n  var out = '';\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n\n  var newBuf;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset]\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | (this[offset + 1] << 8)\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return (this[offset] << 8) | this[offset + 1]\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n};\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | (this[offset + 1] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | (this[offset] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, true, 23, 4)\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, false, 23, 4)\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, true, 52, 8)\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, false, 52, 8)\n};\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!internalIsBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 1] = (value >>> 8);\n    this[offset] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 3] = (value >>> 24);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4);\n  }\n  write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n};\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8);\n  }\n  write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    );\n  }\n\n  return len\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n      if (code < 256) {\n        val = code;\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n\n  if (!val) val = 0;\n\n  var i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = internalIsBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this\n};\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray\n}\n\n\nfunction base64ToBytes (str) {\n  return toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i];\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nfunction isBuffer(obj) {\n  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\n}\n\nfunction isFastBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))\n}\n\nexport { Buffer, INSPECT_MAX_BYTES, SlowBuffer, isBuffer, _kMaxLength as kMaxLength };\n","var BufferUtil = require('../utils/buffer')\nvar Polynomial = require('./polynomial')\nvar Buffer = require('buffer').Buffer\n\nfunction ReedSolomonEncoder (degree) {\n  this.genPoly = undefined\n  this.degree = degree\n\n  if (this.degree) this.initialize(this.degree)\n}\n\n/**\n * Initialize the encoder.\n * The input param should correspond to the number of error correction codewords.\n *\n * @param  {Number} degree\n */\nReedSolomonEncoder.prototype.initialize = function initialize (degree) {\n  // create an irreducible generator polynomial\n  this.degree = degree\n  this.genPoly = Polynomial.generateECPolynomial(this.degree)\n}\n\n/**\n * Encodes a chunk of data\n *\n * @param  {Buffer} data Buffer containing input data\n * @return {Buffer}      Buffer containing encoded data\n */\nReedSolomonEncoder.prototype.encode = function encode (data) {\n  if (!this.genPoly) {\n    throw new Error('Encoder not initialized')\n  }\n\n  // Calculate EC for this data block\n  // extends data size to data+genPoly size\n  var pad = BufferUtil.alloc(this.degree)\n  var paddedData = Buffer.concat([data, pad], data.length + this.degree)\n\n  // The error correction codewords are the remainder after dividing the data codewords\n  // by a generator polynomial\n  var remainder = Polynomial.mod(paddedData, this.genPoly)\n\n  // return EC data blocks (last n byte, where n is the degree of genPoly)\n  // If coefficients number in remainder are less than genPoly degree,\n  // pad with 0s to the left to reach the needed number of coefficients\n  var start = this.degree - remainder.length\n  if (start > 0) {\n    var buff = BufferUtil.alloc(this.degree)\n    remainder.copy(buff, start)\n\n    return buff\n  }\n\n  return remainder\n}\n\nmodule.exports = ReedSolomonEncoder\n","/**\n * Check if QR Code version is valid\n *\n * @param  {Number}  version QR Code version\n * @return {Boolean}         true if valid version, false otherwise\n */\nexports.isValid = function isValid (version) {\n  return !isNaN(version) && version >= 1 && version <= 40\n}\n","var numeric = '[0-9]+'\nvar alphanumeric = '[A-Z $%*+\\\\-./:]+'\nvar kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' +\n  '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' +\n  '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' +\n  '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+'\nkanji = kanji.replace(/u/g, '\\\\u')\n\nvar byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + kanji + ')(?:.|[\\r\\n]))+'\n\nexports.KANJI = new RegExp(kanji, 'g')\nexports.BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g')\nexports.BYTE = new RegExp(byte, 'g')\nexports.NUMERIC = new RegExp(numeric, 'g')\nexports.ALPHANUMERIC = new RegExp(alphanumeric, 'g')\n\nvar TEST_KANJI = new RegExp('^' + kanji + '$')\nvar TEST_NUMERIC = new RegExp('^' + numeric + '$')\nvar TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$')\n\nexports.testKanji = function testKanji (str) {\n  return TEST_KANJI.test(str)\n}\n\nexports.testNumeric = function testNumeric (str) {\n  return TEST_NUMERIC.test(str)\n}\n\nexports.testAlphanumeric = function testAlphanumeric (str) {\n  return TEST_ALPHANUMERIC.test(str)\n}\n","var VersionCheck = require('./version-check')\nvar Regex = require('./regex')\n\n/**\n * Numeric mode encodes data from the decimal digit set (0 - 9)\n * (byte values 30HEX to 39HEX).\n * Normally, 3 data characters are represented by 10 bits.\n *\n * @type {Object}\n */\nexports.NUMERIC = {\n  id: 'Numeric',\n  bit: 1 << 0,\n  ccBits: [10, 12, 14]\n}\n\n/**\n * Alphanumeric mode encodes data from a set of 45 characters,\n * i.e. 10 numeric digits (0 - 9),\n *      26 alphabetic characters (A - Z),\n *   and 9 symbols (SP, $, %, *, +, -, ., /, :).\n * Normally, two input characters are represented by 11 bits.\n *\n * @type {Object}\n */\nexports.ALPHANUMERIC = {\n  id: 'Alphanumeric',\n  bit: 1 << 1,\n  ccBits: [9, 11, 13]\n}\n\n/**\n * In byte mode, data is encoded at 8 bits per character.\n *\n * @type {Object}\n */\nexports.BYTE = {\n  id: 'Byte',\n  bit: 1 << 2,\n  ccBits: [8, 16, 16]\n}\n\n/**\n * The Kanji mode efficiently encodes Kanji characters in accordance with\n * the Shift JIS system based on JIS X 0208.\n * The Shift JIS values are shifted from the JIS X 0208 values.\n * JIS X 0208 gives details of the shift coded representation.\n * Each two-byte character value is compacted to a 13-bit binary codeword.\n *\n * @type {Object}\n */\nexports.KANJI = {\n  id: 'Kanji',\n  bit: 1 << 3,\n  ccBits: [8, 10, 12]\n}\n\n/**\n * Mixed mode will contain a sequences of data in a combination of any of\n * the modes described above\n *\n * @type {Object}\n */\nexports.MIXED = {\n  bit: -1\n}\n\n/**\n * Returns the number of bits needed to store the data length\n * according to QR Code specifications.\n *\n * @param  {Mode}   mode    Data mode\n * @param  {Number} version QR Code version\n * @return {Number}         Number of bits\n */\nexports.getCharCountIndicator = function getCharCountIndicator (mode, version) {\n  if (!mode.ccBits) throw new Error('Invalid mode: ' + mode)\n\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid version: ' + version)\n  }\n\n  if (version >= 1 && version < 10) return mode.ccBits[0]\n  else if (version < 27) return mode.ccBits[1]\n  return mode.ccBits[2]\n}\n\n/**\n * Returns the most efficient mode to store the specified data\n *\n * @param  {String} dataStr Input data string\n * @return {Mode}           Best mode\n */\nexports.getBestModeForData = function getBestModeForData (dataStr) {\n  if (Regex.testNumeric(dataStr)) return exports.NUMERIC\n  else if (Regex.testAlphanumeric(dataStr)) return exports.ALPHANUMERIC\n  else if (Regex.testKanji(dataStr)) return exports.KANJI\n  else return exports.BYTE\n}\n\n/**\n * Return mode name as string\n *\n * @param {Mode} mode Mode object\n * @returns {String}  Mode name\n */\nexports.toString = function toString (mode) {\n  if (mode && mode.id) return mode.id\n  throw new Error('Invalid mode')\n}\n\n/**\n * Check if input param is a valid mode object\n *\n * @param   {Mode}    mode Mode object\n * @returns {Boolean} True if valid mode, false otherwise\n */\nexports.isValid = function isValid (mode) {\n  return mode && mode.bit && mode.ccBits\n}\n\n/**\n * Get mode object from its name\n *\n * @param   {String} string Mode name\n * @returns {Mode}          Mode object\n */\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  var lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'numeric':\n      return exports.NUMERIC\n    case 'alphanumeric':\n      return exports.ALPHANUMERIC\n    case 'kanji':\n      return exports.KANJI\n    case 'byte':\n      return exports.BYTE\n    default:\n      throw new Error('Unknown mode: ' + string)\n  }\n}\n\n/**\n * Returns mode from a value.\n * If value is not a valid mode, returns defaultValue\n *\n * @param  {Mode|String} value        Encoding mode\n * @param  {Mode}        defaultValue Fallback value\n * @return {Mode}                     Encoding mode\n */\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n","var Utils = require('./utils')\nvar ECCode = require('./error-correction-code')\nvar ECLevel = require('./error-correction-level')\nvar Mode = require('./mode')\nvar VersionCheck = require('./version-check')\nvar isArray = require('isarray')\n\n// Generator polynomial used to encode version information\nvar G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0)\nvar G18_BCH = Utils.getBCHDigit(G18)\n\nfunction getBestVersionForDataLength (mode, length, errorCorrectionLevel) {\n  for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\nfunction getReservedBitsCount (mode, version) {\n  // Character count indicator + mode indicator bits\n  return Mode.getCharCountIndicator(mode, version) + 4\n}\n\nfunction getTotalBitsFromDataArray (segments, version) {\n  var totalBits = 0\n\n  segments.forEach(function (data) {\n    var reservedBits = getReservedBitsCount(data.mode, version)\n    totalBits += reservedBits + data.getBitsLength()\n  })\n\n  return totalBits\n}\n\nfunction getBestVersionForMixedData (segments, errorCorrectionLevel) {\n  for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    var length = getTotalBitsFromDataArray(segments, currentVersion)\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, Mode.MIXED)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\n/**\n * Returns version number from a value.\n * If value is not a valid version, returns defaultValue\n *\n * @param  {Number|String} value        QR Code version\n * @param  {Number}        defaultValue Fallback value\n * @return {Number}                     QR Code version number\n */\nexports.from = function from (value, defaultValue) {\n  if (VersionCheck.isValid(value)) {\n    return parseInt(value, 10)\n  }\n\n  return defaultValue\n}\n\n/**\n * Returns how much data can be stored with the specified QR code version\n * and error correction level\n *\n * @param  {Number} version              QR Code version (1-40)\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Mode}   mode                 Data mode\n * @return {Number}                      Quantity of storable data\n */\nexports.getCapacity = function getCapacity (version, errorCorrectionLevel, mode) {\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  // Use Byte mode as default\n  if (typeof mode === 'undefined') mode = Mode.BYTE\n\n  // Total codewords for this QR code version (Data + Error correction)\n  var totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  var ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  if (mode === Mode.MIXED) return dataTotalCodewordsBits\n\n  var usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version)\n\n  // Return max number of storable codewords\n  switch (mode) {\n    case Mode.NUMERIC:\n      return Math.floor((usableBits / 10) * 3)\n\n    case Mode.ALPHANUMERIC:\n      return Math.floor((usableBits / 11) * 2)\n\n    case Mode.KANJI:\n      return Math.floor(usableBits / 13)\n\n    case Mode.BYTE:\n    default:\n      return Math.floor(usableBits / 8)\n  }\n}\n\n/**\n * Returns the minimum version needed to contain the amount of data\n *\n * @param  {Segment} data                    Segment of data\n * @param  {Number} [errorCorrectionLevel=H] Error correction level\n * @param  {Mode} mode                       Data mode\n * @return {Number}                          QR Code version\n */\nexports.getBestVersionForData = function getBestVersionForData (data, errorCorrectionLevel) {\n  var seg\n\n  var ecl = ECLevel.from(errorCorrectionLevel, ECLevel.M)\n\n  if (isArray(data)) {\n    if (data.length > 1) {\n      return getBestVersionForMixedData(data, ecl)\n    }\n\n    if (data.length === 0) {\n      return 1\n    }\n\n    seg = data[0]\n  } else {\n    seg = data\n  }\n\n  return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl)\n}\n\n/**\n * Returns version information with relative error correction bits\n *\n * The version information is included in QR Code symbols of version 7 or larger.\n * It consists of an 18-bit sequence containing 6 data bits,\n * with 12 error correction bits calculated using the (18, 6) Golay code.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Encoded version info bits\n */\nexports.getEncodedBits = function getEncodedBits (version) {\n  if (!VersionCheck.isValid(version) || version < 7) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  var d = version << 12\n\n  while (Utils.getBCHDigit(d) - G18_BCH >= 0) {\n    d ^= (G18 << (Utils.getBCHDigit(d) - G18_BCH))\n  }\n\n  return (version << 12) | d\n}\n","var Utils = require('./utils')\n\nvar G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0)\nvar G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1)\nvar G15_BCH = Utils.getBCHDigit(G15)\n\n/**\n * Returns format information with relative error correction bits\n *\n * The format information is a 15-bit sequence containing 5 data bits,\n * with 10 error correction bits calculated using the (15, 5) BCH code.\n *\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Number} mask                 Mask pattern\n * @return {Number}                      Encoded format information bits\n */\nexports.getEncodedBits = function getEncodedBits (errorCorrectionLevel, mask) {\n  var data = ((errorCorrectionLevel.bit << 3) | mask)\n  var d = data << 10\n\n  while (Utils.getBCHDigit(d) - G15_BCH >= 0) {\n    d ^= (G15 << (Utils.getBCHDigit(d) - G15_BCH))\n  }\n\n  // xor final data with mask pattern in order to ensure that\n  // no combination of Error Correction Level and data mask pattern\n  // will result in an all-zero data string\n  return ((data << 10) | d) ^ G15_MASK\n}\n","var Mode = require('./mode')\n\nfunction NumericData (data) {\n  this.mode = Mode.NUMERIC\n  this.data = data.toString()\n}\n\nNumericData.getBitsLength = function getBitsLength (length) {\n  return 10 * Math.floor(length / 3) + ((length % 3) ? ((length % 3) * 3 + 1) : 0)\n}\n\nNumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nNumericData.prototype.getBitsLength = function getBitsLength () {\n  return NumericData.getBitsLength(this.data.length)\n}\n\nNumericData.prototype.write = function write (bitBuffer) {\n  var i, group, value\n\n  // The input data string is divided into groups of three digits,\n  // and each group is converted to its 10-bit binary equivalent.\n  for (i = 0; i + 3 <= this.data.length; i += 3) {\n    group = this.data.substr(i, 3)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, 10)\n  }\n\n  // If the number of input digits is not an exact multiple of three,\n  // the final one or two digits are converted to 4 or 7 bits respectively.\n  var remainingNum = this.data.length - i\n  if (remainingNum > 0) {\n    group = this.data.substr(i)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, remainingNum * 3 + 1)\n  }\n}\n\nmodule.exports = NumericData\n","var Mode = require('./mode')\n\n/**\n * Array of characters available in alphanumeric mode\n *\n * As per QR Code specification, to each character\n * is assigned a value from 0 to 44 which in this case coincides\n * with the array index\n *\n * @type {Array}\n */\nvar ALPHA_NUM_CHARS = [\n  '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n  'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n  'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n  ' ', '$', '%', '*', '+', '-', '.', '/', ':'\n]\n\nfunction AlphanumericData (data) {\n  this.mode = Mode.ALPHANUMERIC\n  this.data = data\n}\n\nAlphanumericData.getBitsLength = function getBitsLength (length) {\n  return 11 * Math.floor(length / 2) + 6 * (length % 2)\n}\n\nAlphanumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nAlphanumericData.prototype.getBitsLength = function getBitsLength () {\n  return AlphanumericData.getBitsLength(this.data.length)\n}\n\nAlphanumericData.prototype.write = function write (bitBuffer) {\n  var i\n\n  // Input data characters are divided into groups of two characters\n  // and encoded as 11-bit binary codes.\n  for (i = 0; i + 2 <= this.data.length; i += 2) {\n    // The character value of the first character is multiplied by 45\n    var value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45\n\n    // The character value of the second digit is added to the product\n    value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1])\n\n    // The sum is then stored as 11-bit binary number\n    bitBuffer.put(value, 11)\n  }\n\n  // If the number of input data characters is not a multiple of two,\n  // the character value of the final character is encoded as a 6-bit binary number.\n  if (this.data.length % 2) {\n    bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6)\n  }\n}\n\nmodule.exports = AlphanumericData\n","var BufferUtil = require('../utils/buffer')\nvar Mode = require('./mode')\n\nfunction ByteData (data) {\n  this.mode = Mode.BYTE\n  this.data = BufferUtil.from(data)\n}\n\nByteData.getBitsLength = function getBitsLength (length) {\n  return length * 8\n}\n\nByteData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nByteData.prototype.getBitsLength = function getBitsLength () {\n  return ByteData.getBitsLength(this.data.length)\n}\n\nByteData.prototype.write = function (bitBuffer) {\n  for (var i = 0, l = this.data.length; i < l; i++) {\n    bitBuffer.put(this.data[i], 8)\n  }\n}\n\nmodule.exports = ByteData\n","var Mode = require('./mode')\nvar Utils = require('./utils')\n\nfunction KanjiData (data) {\n  this.mode = Mode.KANJI\n  this.data = data\n}\n\nKanjiData.getBitsLength = function getBitsLength (length) {\n  return length * 13\n}\n\nKanjiData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nKanjiData.prototype.getBitsLength = function getBitsLength () {\n  return KanjiData.getBitsLength(this.data.length)\n}\n\nKanjiData.prototype.write = function (bitBuffer) {\n  var i\n\n  // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n  // These byte values are shifted from the JIS X 0208 values.\n  // JIS X 0208 gives details of the shift coded representation.\n  for (i = 0; i < this.data.length; i++) {\n    var value = Utils.toSJIS(this.data[i])\n\n    // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n    if (value >= 0x8140 && value <= 0x9FFC) {\n      // Subtract 0x8140 from Shift JIS value\n      value -= 0x8140\n\n    // For characters with Shift JIS values from 0xE040 to 0xEBBF\n    } else if (value >= 0xE040 && value <= 0xEBBF) {\n      // Subtract 0xC140 from Shift JIS value\n      value -= 0xC140\n    } else {\n      throw new Error(\n        'Invalid SJIS character: ' + this.data[i] + '\\n' +\n        'Make sure your charset is UTF-8')\n    }\n\n    // Multiply most significant byte of result by 0xC0\n    // and add least significant byte to product\n    value = (((value >>> 8) & 0xff) * 0xC0) + (value & 0xff)\n\n    // Convert result to a 13-bit binary string\n    bitBuffer.put(value, 13)\n  }\n}\n\nmodule.exports = KanjiData\n","'use strict';\n\n/******************************************************************************\n * Created 2008-08-19.\n *\n * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\n *\n * Copyright (C) 2008\n *   Wyatt Baldwin <self@wyattbaldwin.com>\n *   All rights reserved\n *\n * Licensed under the MIT license.\n *\n *   http://www.opensource.org/licenses/mit-license.php\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *****************************************************************************/\nvar dijkstra = {\n  single_source_shortest_paths: function(graph, s, d) {\n    // Predecessor map for each node that has been encountered.\n    // node ID => predecessor node ID\n    var predecessors = {};\n\n    // Costs of shortest paths from s to all nodes encountered.\n    // node ID => cost\n    var costs = {};\n    costs[s] = 0;\n\n    // Costs of shortest paths from s to all nodes encountered; differs from\n    // `costs` in that it provides easy access to the node that currently has\n    // the known shortest path from s.\n    // XXX: Do we actually need both `costs` and `open`?\n    var open = dijkstra.PriorityQueue.make();\n    open.push(s, 0);\n\n    var closest,\n        u, v,\n        cost_of_s_to_u,\n        adjacent_nodes,\n        cost_of_e,\n        cost_of_s_to_u_plus_cost_of_e,\n        cost_of_s_to_v,\n        first_visit;\n    while (!open.empty()) {\n      // In the nodes remaining in graph that have a known cost from s,\n      // find the node, u, that currently has the shortest path from s.\n      closest = open.pop();\n      u = closest.value;\n      cost_of_s_to_u = closest.cost;\n\n      // Get nodes adjacent to u...\n      adjacent_nodes = graph[u] || {};\n\n      // ...and explore the edges that connect u to those nodes, updating\n      // the cost of the shortest paths to any or all of those nodes as\n      // necessary. v is the node across the current edge from u.\n      for (v in adjacent_nodes) {\n        if (adjacent_nodes.hasOwnProperty(v)) {\n          // Get the cost of the edge running from u to v.\n          cost_of_e = adjacent_nodes[v];\n\n          // Cost of s to u plus the cost of u to v across e--this is *a*\n          // cost from s to v that may or may not be less than the current\n          // known cost to v.\n          cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\n\n          // If we haven't visited v yet OR if the current known cost from s to\n          // v is greater than the new cost we just found (cost of s to u plus\n          // cost of u to v across e), update v's cost in the cost list and\n          // update v's predecessor in the predecessor list (it's now u).\n          cost_of_s_to_v = costs[v];\n          first_visit = (typeof costs[v] === 'undefined');\n          if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\n            costs[v] = cost_of_s_to_u_plus_cost_of_e;\n            open.push(v, cost_of_s_to_u_plus_cost_of_e);\n            predecessors[v] = u;\n          }\n        }\n      }\n    }\n\n    if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {\n      var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\n      throw new Error(msg);\n    }\n\n    return predecessors;\n  },\n\n  extract_shortest_path_from_predecessor_list: function(predecessors, d) {\n    var nodes = [];\n    var u = d;\n    var predecessor;\n    while (u) {\n      nodes.push(u);\n      predecessor = predecessors[u];\n      u = predecessors[u];\n    }\n    nodes.reverse();\n    return nodes;\n  },\n\n  find_path: function(graph, s, d) {\n    var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\n    return dijkstra.extract_shortest_path_from_predecessor_list(\n      predecessors, d);\n  },\n\n  /**\n   * A very naive priority queue implementation.\n   */\n  PriorityQueue: {\n    make: function (opts) {\n      var T = dijkstra.PriorityQueue,\n          t = {},\n          key;\n      opts = opts || {};\n      for (key in T) {\n        if (T.hasOwnProperty(key)) {\n          t[key] = T[key];\n        }\n      }\n      t.queue = [];\n      t.sorter = opts.sorter || T.default_sorter;\n      return t;\n    },\n\n    default_sorter: function (a, b) {\n      return a.cost - b.cost;\n    },\n\n    /**\n     * Add a new item to the queue and ensure the highest priority element\n     * is at the front of the queue.\n     */\n    push: function (value, cost) {\n      var item = {value: value, cost: cost};\n      this.queue.push(item);\n      this.queue.sort(this.sorter);\n    },\n\n    /**\n     * Return the highest priority element in the queue.\n     */\n    pop: function () {\n      return this.queue.shift();\n    },\n\n    empty: function () {\n      return this.queue.length === 0;\n    }\n  }\n};\n\n\n// node.js module exports\nif (typeof module !== 'undefined') {\n  module.exports = dijkstra;\n}\n","var Mode = require('./mode')\nvar NumericData = require('./numeric-data')\nvar AlphanumericData = require('./alphanumeric-data')\nvar ByteData = require('./byte-data')\nvar KanjiData = require('./kanji-data')\nvar Regex = require('./regex')\nvar Utils = require('./utils')\nvar dijkstra = require('dijkstrajs')\n\n/**\n * Returns UTF8 byte length\n *\n * @param  {String} str Input string\n * @return {Number}     Number of byte\n */\nfunction getStringByteLength (str) {\n  return unescape(encodeURIComponent(str)).length\n}\n\n/**\n * Get a list of segments of the specified mode\n * from a string\n *\n * @param  {Mode}   mode Segment mode\n * @param  {String} str  String to process\n * @return {Array}       Array of object with segments data\n */\nfunction getSegments (regex, mode, str) {\n  var segments = []\n  var result\n\n  while ((result = regex.exec(str)) !== null) {\n    segments.push({\n      data: result[0],\n      index: result.index,\n      mode: mode,\n      length: result[0].length\n    })\n  }\n\n  return segments\n}\n\n/**\n * Extracts a series of segments with the appropriate\n * modes from a string\n *\n * @param  {String} dataStr Input string\n * @return {Array}          Array of object with segments data\n */\nfunction getSegmentsFromString (dataStr) {\n  var numSegs = getSegments(Regex.NUMERIC, Mode.NUMERIC, dataStr)\n  var alphaNumSegs = getSegments(Regex.ALPHANUMERIC, Mode.ALPHANUMERIC, dataStr)\n  var byteSegs\n  var kanjiSegs\n\n  if (Utils.isKanjiModeEnabled()) {\n    byteSegs = getSegments(Regex.BYTE, Mode.BYTE, dataStr)\n    kanjiSegs = getSegments(Regex.KANJI, Mode.KANJI, dataStr)\n  } else {\n    byteSegs = getSegments(Regex.BYTE_KANJI, Mode.BYTE, dataStr)\n    kanjiSegs = []\n  }\n\n  var segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs)\n\n  return segs\n    .sort(function (s1, s2) {\n      return s1.index - s2.index\n    })\n    .map(function (obj) {\n      return {\n        data: obj.data,\n        mode: obj.mode,\n        length: obj.length\n      }\n    })\n}\n\n/**\n * Returns how many bits are needed to encode a string of\n * specified length with the specified mode\n *\n * @param  {Number} length String length\n * @param  {Mode} mode     Segment mode\n * @return {Number}        Bit length\n */\nfunction getSegmentBitsLength (length, mode) {\n  switch (mode) {\n    case Mode.NUMERIC:\n      return NumericData.getBitsLength(length)\n    case Mode.ALPHANUMERIC:\n      return AlphanumericData.getBitsLength(length)\n    case Mode.KANJI:\n      return KanjiData.getBitsLength(length)\n    case Mode.BYTE:\n      return ByteData.getBitsLength(length)\n  }\n}\n\n/**\n * Merges adjacent segments which have the same mode\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction mergeSegments (segs) {\n  return segs.reduce(function (acc, curr) {\n    var prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null\n    if (prevSeg && prevSeg.mode === curr.mode) {\n      acc[acc.length - 1].data += curr.data\n      return acc\n    }\n\n    acc.push(curr)\n    return acc\n  }, [])\n}\n\n/**\n * Generates a list of all possible nodes combination which\n * will be used to build a segments graph.\n *\n * Nodes are divided by groups. Each group will contain a list of all the modes\n * in which is possible to encode the given text.\n *\n * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.\n * The group for '12345' will contain then 3 objects, one for each\n * possible encoding mode.\n *\n * Each node represents a possible segment.\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction buildNodes (segs) {\n  var nodes = []\n  for (var i = 0; i < segs.length; i++) {\n    var seg = segs[i]\n\n    switch (seg.mode) {\n      case Mode.NUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.ALPHANUMERIC, length: seg.length },\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.ALPHANUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.KANJI:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n        break\n      case Mode.BYTE:\n        nodes.push([\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n    }\n  }\n\n  return nodes\n}\n\n/**\n * Builds a graph from a list of nodes.\n * All segments in each node group will be connected with all the segments of\n * the next group and so on.\n *\n * At each connection will be assigned a weight depending on the\n * segment's byte length.\n *\n * @param  {Array} nodes    Array of object with segments data\n * @param  {Number} version QR Code version\n * @return {Object}         Graph of all possible segments\n */\nfunction buildGraph (nodes, version) {\n  var table = {}\n  var graph = {'start': {}}\n  var prevNodeIds = ['start']\n\n  for (var i = 0; i < nodes.length; i++) {\n    var nodeGroup = nodes[i]\n    var currentNodeIds = []\n\n    for (var j = 0; j < nodeGroup.length; j++) {\n      var node = nodeGroup[j]\n      var key = '' + i + j\n\n      currentNodeIds.push(key)\n      table[key] = { node: node, lastCount: 0 }\n      graph[key] = {}\n\n      for (var n = 0; n < prevNodeIds.length; n++) {\n        var prevNodeId = prevNodeIds[n]\n\n        if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {\n          graph[prevNodeId][key] =\n            getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) -\n            getSegmentBitsLength(table[prevNodeId].lastCount, node.mode)\n\n          table[prevNodeId].lastCount += node.length\n        } else {\n          if (table[prevNodeId]) table[prevNodeId].lastCount = node.length\n\n          graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) +\n            4 + Mode.getCharCountIndicator(node.mode, version) // switch cost\n        }\n      }\n    }\n\n    prevNodeIds = currentNodeIds\n  }\n\n  for (n = 0; n < prevNodeIds.length; n++) {\n    graph[prevNodeIds[n]]['end'] = 0\n  }\n\n  return { map: graph, table: table }\n}\n\n/**\n * Builds a segment from a specified data and mode.\n * If a mode is not specified, the more suitable will be used.\n *\n * @param  {String} data             Input data\n * @param  {Mode | String} modesHint Data mode\n * @return {Segment}                 Segment\n */\nfunction buildSingleSegment (data, modesHint) {\n  var mode\n  var bestMode = Mode.getBestModeForData(data)\n\n  mode = Mode.from(modesHint, bestMode)\n\n  // Make sure data can be encoded\n  if (mode !== Mode.BYTE && mode.bit < bestMode.bit) {\n    throw new Error('\"' + data + '\"' +\n      ' cannot be encoded with mode ' + Mode.toString(mode) +\n      '.\\n Suggested mode is: ' + Mode.toString(bestMode))\n  }\n\n  // Use Mode.BYTE if Kanji support is disabled\n  if (mode === Mode.KANJI && !Utils.isKanjiModeEnabled()) {\n    mode = Mode.BYTE\n  }\n\n  switch (mode) {\n    case Mode.NUMERIC:\n      return new NumericData(data)\n\n    case Mode.ALPHANUMERIC:\n      return new AlphanumericData(data)\n\n    case Mode.KANJI:\n      return new KanjiData(data)\n\n    case Mode.BYTE:\n      return new ByteData(data)\n  }\n}\n\n/**\n * Builds a list of segments from an array.\n * Array can contain Strings or Objects with segment's info.\n *\n * For each item which is a string, will be generated a segment with the given\n * string and the more appropriate encoding mode.\n *\n * For each item which is an object, will be generated a segment with the given\n * data and mode.\n * Objects must contain at least the property \"data\".\n * If property \"mode\" is not present, the more suitable mode will be used.\n *\n * @param  {Array} array Array of objects with segments data\n * @return {Array}       Array of Segments\n */\nexports.fromArray = function fromArray (array) {\n  return array.reduce(function (acc, seg) {\n    if (typeof seg === 'string') {\n      acc.push(buildSingleSegment(seg, null))\n    } else if (seg.data) {\n      acc.push(buildSingleSegment(seg.data, seg.mode))\n    }\n\n    return acc\n  }, [])\n}\n\n/**\n * Builds an optimized sequence of segments from a string,\n * which will produce the shortest possible bitstream.\n *\n * @param  {String} data    Input string\n * @param  {Number} version QR Code version\n * @return {Array}          Array of segments\n */\nexports.fromString = function fromString (data, version) {\n  var segs = getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n\n  var nodes = buildNodes(segs)\n  var graph = buildGraph(nodes, version)\n  var path = dijkstra.find_path(graph.map, 'start', 'end')\n\n  var optimizedSegs = []\n  for (var i = 1; i < path.length - 1; i++) {\n    optimizedSegs.push(graph.table[path[i]].node)\n  }\n\n  return exports.fromArray(mergeSegments(optimizedSegs))\n}\n\n/**\n * Splits a string in various segments with the modes which\n * best represent their content.\n * The produced segments are far from being optimized.\n * The output of this function is only used to estimate a QR Code version\n * which may contain the data.\n *\n * @param  {string} data Input string\n * @return {Array}       Array of segments\n */\nexports.rawSplit = function rawSplit (data) {\n  return exports.fromArray(\n    getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n  )\n}\n","var BufferUtil = require('../utils/buffer')\nvar Utils = require('./utils')\nvar ECLevel = require('./error-correction-level')\nvar BitBuffer = require('./bit-buffer')\nvar BitMatrix = require('./bit-matrix')\nvar AlignmentPattern = require('./alignment-pattern')\nvar FinderPattern = require('./finder-pattern')\nvar MaskPattern = require('./mask-pattern')\nvar ECCode = require('./error-correction-code')\nvar ReedSolomonEncoder = require('./reed-solomon-encoder')\nvar Version = require('./version')\nvar FormatInfo = require('./format-info')\nvar Mode = require('./mode')\nvar Segments = require('./segments')\nvar isArray = require('isarray')\n\n/**\n * QRCode for JavaScript\n *\n * modified by Ryan Day for nodejs support\n * Copyright (c) 2011 Ryan Day\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n*/\n\n/**\n * Add finder patterns bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupFinderPattern (matrix, version) {\n  var size = matrix.size\n  var pos = FinderPattern.getPositions(version)\n\n  for (var i = 0; i < pos.length; i++) {\n    var row = pos[i][0]\n    var col = pos[i][1]\n\n    for (var r = -1; r <= 7; r++) {\n      if (row + r <= -1 || size <= row + r) continue\n\n      for (var c = -1; c <= 7; c++) {\n        if (col + c <= -1 || size <= col + c) continue\n\n        if ((r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\n          (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\n          (r >= 2 && r <= 4 && c >= 2 && c <= 4)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add timing pattern bits to matrix\n *\n * Note: this function must be called before {@link setupAlignmentPattern}\n *\n * @param  {BitMatrix} matrix Modules matrix\n */\nfunction setupTimingPattern (matrix) {\n  var size = matrix.size\n\n  for (var r = 8; r < size - 8; r++) {\n    var value = r % 2 === 0\n    matrix.set(r, 6, value, true)\n    matrix.set(6, r, value, true)\n  }\n}\n\n/**\n * Add alignment patterns bits to matrix\n *\n * Note: this function must be called after {@link setupTimingPattern}\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupAlignmentPattern (matrix, version) {\n  var pos = AlignmentPattern.getPositions(version)\n\n  for (var i = 0; i < pos.length; i++) {\n    var row = pos[i][0]\n    var col = pos[i][1]\n\n    for (var r = -2; r <= 2; r++) {\n      for (var c = -2; c <= 2; c++) {\n        if (r === -2 || r === 2 || c === -2 || c === 2 ||\n          (r === 0 && c === 0)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add version info bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupVersionInfo (matrix, version) {\n  var size = matrix.size\n  var bits = Version.getEncodedBits(version)\n  var row, col, mod\n\n  for (var i = 0; i < 18; i++) {\n    row = Math.floor(i / 3)\n    col = i % 3 + size - 8 - 3\n    mod = ((bits >> i) & 1) === 1\n\n    matrix.set(row, col, mod, true)\n    matrix.set(col, row, mod, true)\n  }\n}\n\n/**\n * Add format info bits to matrix\n *\n * @param  {BitMatrix} matrix               Modules matrix\n * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level\n * @param  {Number}    maskPattern          Mask pattern reference value\n */\nfunction setupFormatInfo (matrix, errorCorrectionLevel, maskPattern) {\n  var size = matrix.size\n  var bits = FormatInfo.getEncodedBits(errorCorrectionLevel, maskPattern)\n  var i, mod\n\n  for (i = 0; i < 15; i++) {\n    mod = ((bits >> i) & 1) === 1\n\n    // vertical\n    if (i < 6) {\n      matrix.set(i, 8, mod, true)\n    } else if (i < 8) {\n      matrix.set(i + 1, 8, mod, true)\n    } else {\n      matrix.set(size - 15 + i, 8, mod, true)\n    }\n\n    // horizontal\n    if (i < 8) {\n      matrix.set(8, size - i - 1, mod, true)\n    } else if (i < 9) {\n      matrix.set(8, 15 - i - 1 + 1, mod, true)\n    } else {\n      matrix.set(8, 15 - i - 1, mod, true)\n    }\n  }\n\n  // fixed module\n  matrix.set(size - 8, 8, 1, true)\n}\n\n/**\n * Add encoded data bits to matrix\n *\n * @param  {BitMatrix} matrix Modules matrix\n * @param  {Buffer}    data   Data codewords\n */\nfunction setupData (matrix, data) {\n  var size = matrix.size\n  var inc = -1\n  var row = size - 1\n  var bitIndex = 7\n  var byteIndex = 0\n\n  for (var col = size - 1; col > 0; col -= 2) {\n    if (col === 6) col--\n\n    while (true) {\n      for (var c = 0; c < 2; c++) {\n        if (!matrix.isReserved(row, col - c)) {\n          var dark = false\n\n          if (byteIndex < data.length) {\n            dark = (((data[byteIndex] >>> bitIndex) & 1) === 1)\n          }\n\n          matrix.set(row, col - c, dark)\n          bitIndex--\n\n          if (bitIndex === -1) {\n            byteIndex++\n            bitIndex = 7\n          }\n        }\n      }\n\n      row += inc\n\n      if (row < 0 || size <= row) {\n        row -= inc\n        inc = -inc\n        break\n      }\n    }\n  }\n}\n\n/**\n * Create encoded codewords from data input\n *\n * @param  {Number}   version              QR Code version\n * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level\n * @param  {ByteData} data                 Data input\n * @return {Buffer}                        Buffer containing encoded codewords\n */\nfunction createData (version, errorCorrectionLevel, segments) {\n  // Prepare data buffer\n  var buffer = new BitBuffer()\n\n  segments.forEach(function (data) {\n    // prefix data with mode indicator (4 bits)\n    buffer.put(data.mode.bit, 4)\n\n    // Prefix data with character count indicator.\n    // The character count indicator is a string of bits that represents the\n    // number of characters that are being encoded.\n    // The character count indicator must be placed after the mode indicator\n    // and must be a certain number of bits long, depending on the QR version\n    // and data mode\n    // @see {@link Mode.getCharCountIndicator}.\n    buffer.put(data.getLength(), Mode.getCharCountIndicator(data.mode, version))\n\n    // add binary data sequence to buffer\n    data.write(buffer)\n  })\n\n  // Calculate required number of bits\n  var totalCodewords = Utils.getSymbolTotalCodewords(version)\n  var ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n  var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  // Add a terminator.\n  // If the bit string is shorter than the total number of required bits,\n  // a terminator of up to four 0s must be added to the right side of the string.\n  // If the bit string is more than four bits shorter than the required number of bits,\n  // add four 0s to the end.\n  if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {\n    buffer.put(0, 4)\n  }\n\n  // If the bit string is fewer than four bits shorter, add only the number of 0s that\n  // are needed to reach the required number of bits.\n\n  // After adding the terminator, if the number of bits in the string is not a multiple of 8,\n  // pad the string on the right with 0s to make the string's length a multiple of 8.\n  while (buffer.getLengthInBits() % 8 !== 0) {\n    buffer.putBit(0)\n  }\n\n  // Add pad bytes if the string is still shorter than the total number of required bits.\n  // Extend the buffer to fill the data capacity of the symbol corresponding to\n  // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)\n  // and 00010001 (0x11) alternately.\n  var remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8\n  for (var i = 0; i < remainingByte; i++) {\n    buffer.put(i % 2 ? 0x11 : 0xEC, 8)\n  }\n\n  return createCodewords(buffer, version, errorCorrectionLevel)\n}\n\n/**\n * Encode input data with Reed-Solomon and return codewords with\n * relative error correction bits\n *\n * @param  {BitBuffer} bitBuffer            Data to encode\n * @param  {Number}    version              QR Code version\n * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level\n * @return {Buffer}                         Buffer containing encoded codewords\n */\nfunction createCodewords (bitBuffer, version, errorCorrectionLevel) {\n  // Total codewords for this QR code version (Data + Error correction)\n  var totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  var ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  var dataTotalCodewords = totalCodewords - ecTotalCodewords\n\n  // Total number of blocks\n  var ecTotalBlocks = ECCode.getBlocksCount(version, errorCorrectionLevel)\n\n  // Calculate how many blocks each group should contain\n  var blocksInGroup2 = totalCodewords % ecTotalBlocks\n  var blocksInGroup1 = ecTotalBlocks - blocksInGroup2\n\n  var totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks)\n\n  var dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks)\n  var dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1\n\n  // Number of EC codewords is the same for both groups\n  var ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1\n\n  // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount\n  var rs = new ReedSolomonEncoder(ecCount)\n\n  var offset = 0\n  var dcData = new Array(ecTotalBlocks)\n  var ecData = new Array(ecTotalBlocks)\n  var maxDataSize = 0\n  var buffer = BufferUtil.from(bitBuffer.buffer)\n\n  // Divide the buffer into the required number of blocks\n  for (var b = 0; b < ecTotalBlocks; b++) {\n    var dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2\n\n    // extract a block of data from buffer\n    dcData[b] = buffer.slice(offset, offset + dataSize)\n\n    // Calculate EC codewords for this data block\n    ecData[b] = rs.encode(dcData[b])\n\n    offset += dataSize\n    maxDataSize = Math.max(maxDataSize, dataSize)\n  }\n\n  // Create final data\n  // Interleave the data and error correction codewords from each block\n  var data = BufferUtil.alloc(totalCodewords)\n  var index = 0\n  var i, r\n\n  // Add data codewords\n  for (i = 0; i < maxDataSize; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      if (i < dcData[r].length) {\n        data[index++] = dcData[r][i]\n      }\n    }\n  }\n\n  // Apped EC codewords\n  for (i = 0; i < ecCount; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      data[index++] = ecData[r][i]\n    }\n  }\n\n  return data\n}\n\n/**\n * Build QR Code symbol\n *\n * @param  {String} data                 Input string\n * @param  {Number} version              QR Code version\n * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level\n * @param  {MaskPattern} maskPattern     Mask pattern\n * @return {Object}                      Object containing symbol data\n */\nfunction createSymbol (data, version, errorCorrectionLevel, maskPattern) {\n  var segments\n\n  if (isArray(data)) {\n    segments = Segments.fromArray(data)\n  } else if (typeof data === 'string') {\n    var estimatedVersion = version\n\n    if (!estimatedVersion) {\n      var rawSegments = Segments.rawSplit(data)\n\n      // Estimate best version that can contain raw splitted segments\n      estimatedVersion = Version.getBestVersionForData(rawSegments,\n        errorCorrectionLevel)\n    }\n\n    // Build optimized segments\n    // If estimated version is undefined, try with the highest version\n    segments = Segments.fromString(data, estimatedVersion || 40)\n  } else {\n    throw new Error('Invalid data')\n  }\n\n  // Get the min version that can contain data\n  var bestVersion = Version.getBestVersionForData(segments,\n      errorCorrectionLevel)\n\n  // If no version is found, data cannot be stored\n  if (!bestVersion) {\n    throw new Error('The amount of data is too big to be stored in a QR Code')\n  }\n\n  // If not specified, use min version as default\n  if (!version) {\n    version = bestVersion\n\n  // Check if the specified version can contain the data\n  } else if (version < bestVersion) {\n    throw new Error('\\n' +\n      'The chosen QR Code version cannot contain this amount of data.\\n' +\n      'Minimum version required to store current data is: ' + bestVersion + '.\\n'\n    )\n  }\n\n  var dataBits = createData(version, errorCorrectionLevel, segments)\n\n  // Allocate matrix buffer\n  var moduleCount = Utils.getSymbolSize(version)\n  var modules = new BitMatrix(moduleCount)\n\n  // Add function modules\n  setupFinderPattern(modules, version)\n  setupTimingPattern(modules)\n  setupAlignmentPattern(modules, version)\n\n  // Add temporary dummy bits for format info just to set them as reserved.\n  // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}\n  // since the masking operation must be performed only on the encoding region.\n  // These blocks will be replaced with correct values later in code.\n  setupFormatInfo(modules, errorCorrectionLevel, 0)\n\n  if (version >= 7) {\n    setupVersionInfo(modules, version)\n  }\n\n  // Add data codewords\n  setupData(modules, dataBits)\n\n  if (isNaN(maskPattern)) {\n    // Find best mask pattern\n    maskPattern = MaskPattern.getBestMask(modules,\n      setupFormatInfo.bind(null, modules, errorCorrectionLevel))\n  }\n\n  // Apply mask pattern\n  MaskPattern.applyMask(maskPattern, modules)\n\n  // Replace format info bits with correct values\n  setupFormatInfo(modules, errorCorrectionLevel, maskPattern)\n\n  return {\n    modules: modules,\n    version: version,\n    errorCorrectionLevel: errorCorrectionLevel,\n    maskPattern: maskPattern,\n    segments: segments\n  }\n}\n\n/**\n * QR Code\n *\n * @param {String | Array} data                 Input data\n * @param {Object} options                      Optional configurations\n * @param {Number} options.version              QR Code version\n * @param {String} options.errorCorrectionLevel Error correction level\n * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis\n */\nexports.create = function create (data, options) {\n  if (typeof data === 'undefined' || data === '') {\n    throw new Error('No input text')\n  }\n\n  var errorCorrectionLevel = ECLevel.M\n  var version\n  var mask\n\n  if (typeof options !== 'undefined') {\n    // Use higher error correction level as default\n    errorCorrectionLevel = ECLevel.from(options.errorCorrectionLevel, ECLevel.M)\n    version = Version.from(options.version)\n    mask = MaskPattern.from(options.maskPattern)\n\n    if (options.toSJISFunc) {\n      Utils.setToSJISFunction(options.toSJISFunc)\n    }\n  }\n\n  return createSymbol(data, version, errorCorrectionLevel, mask)\n}\n","function hex2rgba (hex) {\n  if (typeof hex === 'number') {\n    hex = hex.toString()\n  }\n\n  if (typeof hex !== 'string') {\n    throw new Error('Color should be defined as hex string')\n  }\n\n  var hexCode = hex.slice().replace('#', '').split('')\n  if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n    throw new Error('Invalid hex color: ' + hex)\n  }\n\n  // Convert from short to long form (fff -> ffffff)\n  if (hexCode.length === 3 || hexCode.length === 4) {\n    hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n      return [c, c]\n    }))\n  }\n\n  // Add default alpha value\n  if (hexCode.length === 6) hexCode.push('F', 'F')\n\n  var hexValue = parseInt(hexCode.join(''), 16)\n\n  return {\n    r: (hexValue >> 24) & 255,\n    g: (hexValue >> 16) & 255,\n    b: (hexValue >> 8) & 255,\n    a: hexValue & 255,\n    hex: '#' + hexCode.slice(0, 6).join('')\n  }\n}\n\nexports.getOptions = function getOptions (options) {\n  if (!options) options = {}\n  if (!options.color) options.color = {}\n\n  var margin = typeof options.margin === 'undefined' ||\n    options.margin === null ||\n    options.margin < 0 ? 4 : options.margin\n\n  var width = options.width && options.width >= 21 ? options.width : undefined\n  var scale = options.scale || 4\n\n  return {\n    width: width,\n    scale: width ? 4 : scale,\n    margin: margin,\n    color: {\n      dark: hex2rgba(options.color.dark || '#000000ff'),\n      light: hex2rgba(options.color.light || '#ffffffff')\n    },\n    type: options.type,\n    rendererOpts: options.rendererOpts || {}\n  }\n}\n\nexports.getScale = function getScale (qrSize, opts) {\n  return opts.width && opts.width >= qrSize + opts.margin * 2\n    ? opts.width / (qrSize + opts.margin * 2)\n    : opts.scale\n}\n\nexports.getImageWidth = function getImageWidth (qrSize, opts) {\n  var scale = exports.getScale(qrSize, opts)\n  return Math.floor((qrSize + opts.margin * 2) * scale)\n}\n\nexports.qrToImageData = function qrToImageData (imgData, qr, opts) {\n  var size = qr.modules.size\n  var data = qr.modules.data\n  var scale = exports.getScale(size, opts)\n  var symbolSize = Math.floor((size + opts.margin * 2) * scale)\n  var scaledMargin = opts.margin * scale\n  var palette = [opts.color.light, opts.color.dark]\n\n  for (var i = 0; i < symbolSize; i++) {\n    for (var j = 0; j < symbolSize; j++) {\n      var posDst = (i * symbolSize + j) * 4\n      var pxColor = opts.color.light\n\n      if (i >= scaledMargin && j >= scaledMargin &&\n        i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n        var iSrc = Math.floor((i - scaledMargin) / scale)\n        var jSrc = Math.floor((j - scaledMargin) / scale)\n        pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0]\n      }\n\n      imgData[posDst++] = pxColor.r\n      imgData[posDst++] = pxColor.g\n      imgData[posDst++] = pxColor.b\n      imgData[posDst] = pxColor.a\n    }\n  }\n}\n","var Utils = require('./utils')\n\nfunction clearCanvas (ctx, canvas, size) {\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n  if (!canvas.style) canvas.style = {}\n  canvas.height = size\n  canvas.width = size\n  canvas.style.height = size + 'px'\n  canvas.style.width = size + 'px'\n}\n\nfunction getCanvasElement () {\n  try {\n    return document.createElement('canvas')\n  } catch (e) {\n    throw new Error('You need to specify a canvas element')\n  }\n}\n\nexports.render = function render (qrData, canvas, options) {\n  var opts = options\n  var canvasEl = canvas\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!canvas) {\n    canvasEl = getCanvasElement()\n  }\n\n  opts = Utils.getOptions(opts)\n  var size = Utils.getImageWidth(qrData.modules.size, opts)\n\n  var ctx = canvasEl.getContext('2d')\n  var image = ctx.createImageData(size, size)\n  Utils.qrToImageData(image.data, qrData, opts)\n\n  clearCanvas(ctx, canvasEl, size)\n  ctx.putImageData(image, 0, 0)\n\n  return canvasEl\n}\n\nexports.renderToDataURL = function renderToDataURL (qrData, canvas, options) {\n  var opts = options\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!opts) opts = {}\n\n  var canvasEl = exports.render(qrData, canvas, opts)\n\n  var type = opts.type || 'image/png'\n  var rendererOpts = opts.rendererOpts || {}\n\n  return canvasEl.toDataURL(type, rendererOpts.quality)\n}\n","var Utils = require('./utils')\n\nfunction getColorAttrib (color, attrib) {\n  var alpha = color.a / 255\n  var str = attrib + '=\"' + color.hex + '\"'\n\n  return alpha < 1\n    ? str + ' ' + attrib + '-opacity=\"' + alpha.toFixed(2).slice(1) + '\"'\n    : str\n}\n\nfunction svgCmd (cmd, x, y) {\n  var str = cmd + x\n  if (typeof y !== 'undefined') str += ' ' + y\n\n  return str\n}\n\nfunction qrToPath (data, size, margin) {\n  var path = ''\n  var moveBy = 0\n  var newRow = false\n  var lineLength = 0\n\n  for (var i = 0; i < data.length; i++) {\n    var col = Math.floor(i % size)\n    var row = Math.floor(i / size)\n\n    if (!col && !newRow) newRow = true\n\n    if (data[i]) {\n      lineLength++\n\n      if (!(i > 0 && col > 0 && data[i - 1])) {\n        path += newRow\n          ? svgCmd('M', col + margin, 0.5 + row + margin)\n          : svgCmd('m', moveBy, 0)\n\n        moveBy = 0\n        newRow = false\n      }\n\n      if (!(col + 1 < size && data[i + 1])) {\n        path += svgCmd('h', lineLength)\n        lineLength = 0\n      }\n    } else {\n      moveBy++\n    }\n  }\n\n  return path\n}\n\nexports.render = function render (qrData, options, cb) {\n  var opts = Utils.getOptions(options)\n  var size = qrData.modules.size\n  var data = qrData.modules.data\n  var qrcodesize = size + opts.margin * 2\n\n  var bg = !opts.color.light.a\n    ? ''\n    : '<path ' + getColorAttrib(opts.color.light, 'fill') +\n      ' d=\"M0 0h' + qrcodesize + 'v' + qrcodesize + 'H0z\"/>'\n\n  var path =\n    '<path ' + getColorAttrib(opts.color.dark, 'stroke') +\n    ' d=\"' + qrToPath(data, size, opts.margin) + '\"/>'\n\n  var viewBox = 'viewBox=\"' + '0 0 ' + qrcodesize + ' ' + qrcodesize + '\"'\n\n  var width = !opts.width ? '' : 'width=\"' + opts.width + '\" height=\"' + opts.width + '\" '\n\n  var svgTag = '<svg xmlns=\"http://www.w3.org/2000/svg\" ' + width + viewBox + ' shape-rendering=\"crispEdges\">' + bg + path + '</svg>\\n'\n\n  if (typeof cb === 'function') {\n    cb(null, svgTag)\n  }\n\n  return svgTag\n}\n","\nvar canPromise = require('./can-promise')\n\nvar QRCode = require('./core/qrcode')\nvar CanvasRenderer = require('./renderer/canvas')\nvar SvgRenderer = require('./renderer/svg-tag.js')\n\nfunction renderCanvas (renderFunc, canvas, text, opts, cb) {\n  var args = [].slice.call(arguments, 1)\n  var argsNum = args.length\n  var isLastArgCb = typeof args[argsNum - 1] === 'function'\n\n  if (!isLastArgCb && !canPromise()) {\n    throw new Error('Callback required as last argument')\n  }\n\n  if (isLastArgCb) {\n    if (argsNum < 2) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 2) {\n      cb = text\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 3) {\n      if (canvas.getContext && typeof cb === 'undefined') {\n        cb = opts\n        opts = undefined\n      } else {\n        cb = opts\n        opts = text\n        text = canvas\n        canvas = undefined\n      }\n    }\n  } else {\n    if (argsNum < 1) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 1) {\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 2 && !canvas.getContext) {\n      opts = text\n      text = canvas\n      canvas = undefined\n    }\n\n    return new Promise(function (resolve, reject) {\n      try {\n        var data = QRCode.create(text, opts)\n        resolve(renderFunc(data, canvas, opts))\n      } catch (e) {\n        reject(e)\n      }\n    })\n  }\n\n  try {\n    var data = QRCode.create(text, opts)\n    cb(null, renderFunc(data, canvas, opts))\n  } catch (e) {\n    cb(e)\n  }\n}\n\nexports.create = QRCode.create\nexports.toCanvas = renderCanvas.bind(null, CanvasRenderer.render)\nexports.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL)\n\n// only svg for now.\nexports.toString = renderCanvas.bind(null, function (data, _, opts) {\n  return SvgRenderer.render(data, opts)\n})\n","import {LinkSession, LinkStorage, LinkTransport} from '@protonprotocol/proton-link'\nimport {SigningRequest} from '@protonprotocol/proton-signing-request'\nimport * as qrcode from 'qrcode'\nimport styleText from './styles'\n\nexport interface BrowserTransportOptions {\n    /** CSS class prefix, defaults to `@protonprotocol/proton-link` */\n    classPrefix?: string\n    /** Whether to inject CSS styles in the page header, defaults to true. */\n    injectStyles?: boolean\n    /** Whether to display request success and error messages, defaults to true */\n    requestStatus?: boolean\n    /** Local storage prefix, defaults to `@protonprotocol/proton-link`. */\n    storagePrefix?: string\n    /** Requesting account of the dapp (optional) */\n    requestAccount?: string\n}\n\nclass Storage implements LinkStorage {\n    constructor(readonly keyPrefix: string) {}\n    async write(key: string, data: string): Promise<void> {\n        localStorage.setItem(this.storageKey(key), data)\n    }\n    async read(key: string): Promise<string | null> {\n        return localStorage.getItem(this.storageKey(key))\n    }\n    async remove(key: string): Promise<void> {\n        localStorage.removeItem(this.storageKey(key))\n    }\n    storageKey(key: string) {\n        return `${this.keyPrefix}-${key}`\n    }\n}\n\nexport default class BrowserTransport implements LinkTransport {\n    storage: LinkStorage\n\n    constructor(public readonly options: BrowserTransportOptions = {}) {\n        this.classPrefix = options.classPrefix || 'proton-link'\n        this.injectStyles = !(options.injectStyles === false)\n        this.requestStatus = !(options.requestStatus === false)\n        this.storage = new Storage(options.storagePrefix || 'proton-link')\n        this.requestAccount = options.requestAccount || ''\n    }\n\n    private classPrefix: string\n    private injectStyles: boolean\n    private requestStatus: boolean\n    private requestAccount: string\n    private activeRequest?: SigningRequest\n    private activeCancel?: (reason: string | Error) => void\n    private containerEl!: HTMLElement\n    private requestEl!: HTMLElement\n    private styleEl?: HTMLStyleElement\n    private countdownTimer?: NodeJS.Timeout\n    private closeTimer?: NodeJS.Timeout\n\n    private closeModal() {\n        this.hide()\n        if (this.activeCancel) {\n            this.activeRequest = undefined\n            this.activeCancel('Modal closed')\n            this.activeCancel = undefined\n        }\n    }\n\n    private setupElements() {\n        if (this.injectStyles && !this.styleEl) {\n            this.styleEl = document.createElement('style')\n            this.styleEl.type = 'text/css'\n            const css = styleText.replace(/%prefix%/g, this.classPrefix)\n            this.styleEl.appendChild(document.createTextNode(css))\n            document.head.appendChild(this.styleEl)\n        }\n        if (!this.containerEl) {\n            this.containerEl = this.createEl()\n            this.containerEl.className = this.classPrefix\n            this.containerEl.onclick = (event) => {\n                if (event.target === this.containerEl) {\n                    event.stopPropagation()\n                    this.closeModal()\n                }\n            }\n            document.body.appendChild(this.containerEl)\n        }\n        if (!this.requestEl) {\n            let wrapper = this.createEl({class: 'inner'})\n            let closeButton = this.createEl({class: 'close'})\n            closeButton.onclick = (event) => {\n                event.stopPropagation()\n                this.closeModal()\n            }\n            this.requestEl = this.createEl({class: 'request'})\n            wrapper.appendChild(this.requestEl)\n            wrapper.appendChild(closeButton)\n            this.containerEl.appendChild(wrapper)\n        }\n    }\n\n    private createEl(attrs?: {[key: string]: string}) {\n        if (!attrs) attrs = {}\n        const el = document.createElement(attrs.tag || 'div')\n        if (attrs) {\n            for (const attr of Object.keys(attrs)) {\n                const value = attrs[attr]\n                switch (attr) {\n                    case 'src':\n                        el.setAttribute(attr, value)\n                        break\n                    case 'tag':\n                        break\n                    case 'text':\n                        el.appendChild(document.createTextNode(value))\n                        break\n                    case 'class':\n                        el.className = `${this.classPrefix}-${value}`\n                        break\n                    default:\n                        el.setAttribute(attr, value)\n                }\n            }\n        }\n        return el\n    }\n\n    private hide() {\n        if (this.containerEl) {\n            this.containerEl.classList.remove(`${this.classPrefix}-active`)\n        }\n        this.clearTimers()\n    }\n\n    private show() {\n        if (this.containerEl) {\n            this.containerEl.classList.add(`${this.classPrefix}-active`)\n        }\n    }\n\n    private async displayRequest(request) {\n        this.setupElements()\n\n        let sameDeviceRequest = request.clone()\n        sameDeviceRequest.setInfoKey('same_device', true)\n        sameDeviceRequest.setInfoKey('return_path', returnUrl())\n\n        if (this.requestAccount.length > 0) {\n            request.setInfoKey('req_account', this.requestAccount)\n        }\n\n        let sameDeviceUri = sameDeviceRequest.encode(true, false)\n        let crossDeviceUri = request.encode(true, false)\n\n        const isIdentity = request.isIdentity()\n        const title = isIdentity ? 'Login with Proton' : 'Sign with Proton'\n        const subtitle = 'Scan the QR-code with your Proton Wallet'\n\n        const qrEl = this.createEl({class: 'qr'})\n        try {\n            qrEl.innerHTML = await qrcode.toString(crossDeviceUri, {\n                margin: 0,\n                errorCorrectionLevel: 'L',\n            })\n        } catch (error) {\n            console.warn('Unable to generate QR code', error)\n        }\n\n        const linkEl = this.createEl({class: 'uri'})\n        const linkA = this.createEl({\n            tag: 'a',\n            href: crossDeviceUri,\n            text: 'Open Proton Wallet',\n        })\n        linkA.addEventListener('click', (event) => {\n            event.preventDefault()\n            if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {\n                iframe.setAttribute('src', sameDeviceUri)\n            } else {\n                window.location.href = sameDeviceUri\n            }\n        })\n        linkEl.appendChild(linkA)\n\n        const iframe = this.createEl({\n            class: 'wskeepalive',\n            src: 'about:blank',\n            tag: 'iframe',\n        })\n        linkEl.appendChild(iframe)\n\n        const infoEl = this.createEl({class: 'info'})\n        const infoTitle = this.createEl({class: 'title', tag: 'span', text: title})\n        const infoSubtitle = this.createEl({class: 'subtitle', tag: 'span', text: subtitle})\n        infoEl.appendChild(infoTitle)\n        infoEl.appendChild(infoSubtitle)\n\n        const backgroundEl = this.createEl({class: 'background'})\n        const waveBackground = this.createEl({class: 'wave'})\n        const divider = this.createEl({class: 'separator', text: 'OR'})\n\n        const actionEl = this.createEl({class: 'actions'})\n        actionEl.appendChild(backgroundEl)\n        actionEl.appendChild(waveBackground)\n        actionEl.appendChild(divider)\n        actionEl.appendChild(linkEl)\n\n        backgroundEl.appendChild(qrEl)\n\n        let footnoteEl: HTMLElement = this.createEl({class: 'footnote'})\n        if (isIdentity) {\n            footnoteEl = this.createEl({class: 'footnote', text: \"Don't have Proton Wallet? \"})\n            const footnoteLink = this.createEl({\n                tag: 'a',\n                target: '_blank',\n                href: 'https://protonchain.com',\n                text: 'Download it now',\n            })\n            footnoteEl.appendChild(footnoteLink)\n        }\n\n        emptyElement(this.requestEl)\n\n        const logoEl = this.createEl({class: 'logo'})\n        this.requestEl.appendChild(logoEl)\n        this.requestEl.appendChild(infoEl)\n        this.requestEl.appendChild(actionEl)\n        this.requestEl.appendChild(footnoteEl)\n\n        this.show()\n    }\n\n    public async showLoading() {\n        this.setupElements()\n        emptyElement(this.requestEl)\n        const infoEl = this.createEl({class: 'info'})\n        const infoTitle = this.createEl({class: 'title', tag: 'span', text: 'Loading'})\n        const infoSubtitle = this.createEl({\n            class: 'subtitle',\n            tag: 'span',\n            text: 'Preparing request...',\n        })\n\n        infoEl.appendChild(infoTitle)\n        infoEl.appendChild(infoSubtitle)\n\n        const logoEl = this.createEl({class: 'logo loading'})\n        this.requestEl.appendChild(logoEl)\n        this.requestEl.appendChild(infoEl)\n\n        this.show()\n    }\n\n    public onRequest(request: SigningRequest, cancel: (reason: string | Error) => void) {\n        this.activeRequest = request\n        this.activeCancel = cancel\n        this.displayRequest(request).catch(cancel)\n    }\n\n    public onSessionRequest(\n        session: LinkSession,\n        request: SigningRequest,\n        cancel: (reason: string | Error) => void\n    ) {\n        if (session.metadata.sameDevice) {\n            request.setInfoKey('return_path', returnUrl())\n        }\n\n        if (session.type === 'fallback') {\n            this.onRequest(request, cancel)\n            if (session.metadata.sameDevice) {\n                // trigger directly on a fallback same-device session\n                window.location.href = request.encode()\n            }\n            return\n        }\n\n        this.activeRequest = request\n        this.activeCancel = cancel\n        this.setupElements()\n\n        const timeout = session.metadata.timeout || 60 * 1000 * 2\n        const deviceName = session.metadata.name\n\n        const start = Date.now()\n        const infoTitle = this.createEl({class: 'title', tag: 'span', text: 'Sign'})\n\n        const updateCountdown = () => {\n            const timeLeft = timeout + start - Date.now()\n            const timeFormatted =\n                timeLeft > 0 ? new Date(timeLeft).toISOString().substr(14, 5) : '00:00'\n            infoTitle.textContent = `Sign - ${timeFormatted}`\n        }\n        this.countdownTimer = setInterval(updateCountdown, 500)\n        updateCountdown()\n\n        const infoEl = this.createEl({class: 'info'})\n        infoEl.appendChild(infoTitle)\n\n        let subtitle: string\n        if (deviceName && deviceName.length > 0) {\n            subtitle = `Please open on “${deviceName}” to review and sign the transaction.`\n        } else {\n            subtitle = 'Please review and sign the transaction in the linked wallet.'\n        }\n\n        const infoSubtitle = this.createEl({class: 'subtitle', tag: 'span', text: subtitle})\n        infoEl.appendChild(infoSubtitle)\n\n        emptyElement(this.requestEl)\n        const logoEl = this.createEl({class: 'logo'})\n        this.requestEl.appendChild(logoEl)\n        this.requestEl.appendChild(infoEl)\n        this.show()\n\n        if (isAppleHandheld() && session.metadata.sameDevice) {\n            const scheme = request.getScheme()\n            window.location.href = `${scheme}://link`\n        }\n    }\n\n    private clearTimers() {\n        if (this.closeTimer) {\n            clearTimeout(this.closeTimer)\n            this.closeTimer = undefined\n        }\n        if (this.countdownTimer) {\n            clearTimeout(this.countdownTimer)\n            this.countdownTimer = undefined\n        }\n    }\n\n    // private updatePrepareStatus(message: string): void {\n    //     if (this.prepareStatusEl) {\n    //         this.prepareStatusEl.textContent = message\n    //     }\n    // }\n\n    // public async prepare(request: SigningRequest, session?: LinkSession) {\n    //     this.showLoading()\n    //     if (!this.fuelEnabled || !session || request.isIdentity()) {\n    //         // don't attempt to cosign id request or if we don't have a session attached\n    //         return request\n    //     }\n    //     try {\n    //         const result = fuel(request, session, this.updatePrepareStatus.bind(this))\n    //         const timeout = new Promise((r) => setTimeout(r, 3500)).then(() => {\n    //             throw new Error('Fuel API timeout after 3500ms')\n    //         })\n    //         return await Promise.race([result, timeout])\n    //     } catch (error) {\n    //         console.info(`Not applying fuel (${error.message})`)\n    //     }\n    //     return request\n    // }\n\n    public onSuccess(request: SigningRequest) {\n        if (request === this.activeRequest) {\n            this.clearTimers()\n            if (this.requestStatus) {\n                this.setupElements()\n                const infoEl = this.createEl({class: 'info'})\n                const logoEl = this.createEl({class: 'logo'})\n                logoEl.classList.add('success')\n                const infoTitle = this.createEl({class: 'title', tag: 'span', text: 'Success!'})\n                const subtitle = request.isIdentity() ? 'Identity signed.' : 'Transaction signed.'\n                const infoSubtitle = this.createEl({class: 'subtitle', tag: 'span', text: subtitle})\n                infoEl.appendChild(infoTitle)\n                infoEl.appendChild(infoSubtitle)\n                emptyElement(this.requestEl)\n                this.requestEl.appendChild(logoEl)\n                this.requestEl.appendChild(infoEl)\n                this.show()\n                this.closeTimer = setTimeout(() => {\n                    this.hide()\n                }, 1.5 * 1000)\n            } else {\n                this.hide()\n            }\n        }\n    }\n\n    public onFailure(request: SigningRequest, error: Error) {\n        if (request === this.activeRequest && error['code'] !== 'E_CANCEL') {\n            this.clearTimers()\n            if (this.requestStatus) {\n                this.setupElements()\n                const infoEl = this.createEl({class: 'info'})\n                const logoEl = this.createEl({class: 'logo'})\n                logoEl.classList.add('error')\n                const infoTitle = this.createEl({\n                    class: 'title',\n                    tag: 'span',\n                    text: 'Transaction error',\n                })\n                const infoSubtitle = this.createEl({\n                    class: 'subtitle',\n                    tag: 'span',\n                    text: error.message || String(error),\n                })\n                infoEl.appendChild(infoTitle)\n                infoEl.appendChild(infoSubtitle)\n                emptyElement(this.requestEl)\n                this.requestEl.appendChild(logoEl)\n                this.requestEl.appendChild(infoEl)\n                this.show()\n            } else {\n                this.hide()\n            }\n        }\n    }\n}\n\nfunction emptyElement(el: HTMLElement) {\n    while (el.firstChild) {\n        el.removeChild(el.firstChild)\n    }\n}\n\nconst returnUrlAlphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\nconst returnUrlAlphabetLen = returnUrlAlphabet.length\n/** Generate a return url with a random #fragment so mobile safari will redirect back w/o reload. */\nfunction returnUrl() {\n    let rv = window.location.href.split('#')[0] + '#'\n    for (let i = 0; i < 8; i++) {\n        rv += returnUrlAlphabet.charAt(Math.floor(Math.random() * returnUrlAlphabetLen))\n    }\n    return rv\n}\n\nfunction isAppleHandheld() {\n    return /iP(ad|od|hone)/i.test(navigator.userAgent)\n}\n","export default `\n/* Anchor Link */\n\n.%prefix% * {\n    box-sizing: border-box;\n    line-height: 1;\n}\n\n.%prefix% {\n    font-family: CircularStd, -apple-system, system-ui, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue',\n        Arial, sans-serif;\n    font-size: 13px;\n    background: rgba(0, 0, 0, 0.65);\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    width: 100%;\n    height: 100%;\n    z-index: 2147483647;\n    display: none;\n    align-items: center;\n    justify-content: center;\n}\n\n.%prefix%-active {\n    display: flex;\n}\n\n.%prefix%-inner {\n    background: #010c2c;\n    color: white;\n    margin: 20px;\n    padding-top: 50px;\n    border-radius: 20px;\n    box-shadow: 0px 4px 100px rgba(0, 0, 0, .5);\n    width: 320px;\n    transition-property: all;\n    transition-duration: .5s;\n    transition-timing-function: ease-in-out;\n    position: relative;\n}\n\n.%prefix%-close {\n    display: block;\n    position: absolute;\n    top: 16px;\n    right: 16px;\n    width: 28px;\n    height: 28px;\n    background-image: url(\"data:image/svg+xml,%3Csvg width='12' height='12' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M9.66 10.987L6 7.327l-3.66 3.66A1.035 1.035 0 11.876 9.523l3.66-3.66-3.66-3.66A1.035 1.035 0 012.34.737L6 4.398 9.66.739a1.035 1.035 0 111.464 1.464l-3.66 3.66 3.66 3.661a1.035 1.035 0 11-1.464 1.464z' fill='%23FFF' fill-rule='nonzero'/%3E%3C/svg%3E\");\n    background-size: 10px;\n    background-repeat: no-repeat;\n    background-position: 50%;\n    border-radius: 100%;\n    cursor: pointer;\n    background-color: rgb(194, 162, 246, 0.2);\n    transition: background-color 0.2s ease;\n}\n\n.%prefix%-close:hover {\n    background-color: rgb(194, 162, 246, 0.3);\n    transition: background-color 0.2s ease;\n}\n\n.%prefix%-logo {\n    width: 64px;\n    height: 64px;\n    margin: 0 auto;\n    margin-top: -38px;\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='64' height='64' viewBox='0 0 64 64'%3E%3Cdefs%3E%3ClinearGradient id='2f3bgpxsia' x1='4.068%' x2='97.224%' y1='97.082%' y2='127.413%'%3E%3Cstop offset='0%' stop-color='%237543E3'/%3E%3Cstop offset='100%' stop-color='%23582ACB'/%3E%3C/linearGradient%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill-rule='nonzero'%3E%3Cg transform='translate(-128 -32) translate(128 32)'%3E%3Ccircle cx='32' cy='32' r='32' fill='url(%232f3bgpxsia)'/%3E%3Cpath fill='%23FFF' d='M32.002 8c3.164 0 5.894 3.261 7.692 8.56-.726.202-1.468.425-2.217.675-1.493-4.384-3.543-6.963-5.475-6.963-2.177 0-4.5 3.271-6.013 8.71.591.189 1.188.39 1.796.613 1.373.501 2.788 1.09 4.232 1.76.082-.037.164-.078.247-.115.925-.422 1.843-.812 2.752-1.168l.327-.127c2.723-1.045 5.354-1.795 7.763-2.19 5.188-.857 8.836.029 10.268 2.495 1.435 2.466.385 6.045-2.955 10.076-.193.23-.389.464-.595.694-.497-.548-1.027-1.097-1.592-1.645 2.948-3.394 4.109-6.36 3.161-7.99-.896-1.54-3.85-2.06-7.91-1.391-.868.143-1.77.337-2.696.576.132.604.256 1.22.365 1.857.25 1.428.444 2.939.581 4.512.714.498 1.41 1.003 2.08 1.518 2.621 2.015 4.873 4.127 6.606 6.217 3.34 4.03 4.39 7.61 2.955 10.076-1.076 1.853-3.403 2.813-6.695 2.813-1.088 0-2.282-.103-3.573-.318-.333-.055-.673-.116-1.016-.185.206-.704.396-1.44.568-2.203.278.055.553.104.824.15 4.057.668 7.015.149 7.911-1.393 1.089-1.872-.612-5.515-4.61-9.542-.4.362-.81.722-1.235 1.08-.062.051-.127.106-.19.155-1.13.94-2.346 1.865-3.63 2.76-.062.713-.132 1.418-.217 2.101C40.262 50.15 36.59 57 32.002 57c-3.157 0-5.884-3.252-7.681-8.538.722-.194 1.46-.422 2.216-.675 1.494 4.371 3.537 6.941 5.465 6.941 2.178 0 4.506-3.282 6.021-8.735-.594-.188-1.193-.388-1.797-.61-1.382-.5-2.791-1.083-4.211-1.736l-.091.042c-.801.37-1.589.714-2.367 1.032-.12.048-.238.097-.356.14-4.478 1.79-8.568 2.719-11.82 2.719-3.24 0-5.642-.922-6.753-2.83-1.589-2.732-.085-6.733 3.677-10.952l1.598 1.674c-3.043 3.46-4.252 6.49-3.291 8.142 1.087 1.87 5.102 2.232 10.603.814-.13-.602-.253-1.216-.362-1.852-.248-1.426-.441-2.933-.58-4.502-.716-.498-1.413-1-2.074-1.505C13.824 31.702 10 26.532 10 22.684c0-.89.206-1.707.628-2.434 1.582-2.716 5.782-3.433 11.297-2.336-.21.713-.403 1.46-.576 2.232-4.534-.889-7.78-.412-8.737 1.24-1.087 1.87.606 5.504 4.592 9.526.511-.461 1.042-.918 1.599-1.371 1.074-.882 2.236-1.757 3.473-2.618.063-.714.134-1.42.22-2.104C23.747 14.847 27.42 8 32.003 8zm7.24 31.713c-.55.346-1.107.689-1.676 1.023-.193.113-.386.224-.579.334-.676.386-1.353.76-2.023 1.11-.1.053-.198.101-.297.153.695.292 1.386.565 2.068.817.617.228 1.226.437 1.83.633.133-.622.258-1.264.37-1.928.117-.688.216-1.409.308-2.142zm-14.487-.003c.096.77.206 1.518.33 2.24.108.631.23 1.238.358 1.83.37-.118.744-.243 1.123-.377.115-.039.232-.08.347-.123.781-.28 1.582-.587 2.399-.935.008-.002.015-.006.023-.009-.774-.402-1.547-.825-2.318-1.266-.039-.023-.081-.045-.12-.071-.736-.423-1.447-.854-2.142-1.289zm7.248-15.839c-.782.379-1.567.775-2.351 1.198-.497.266-.994.542-1.49.827-1.303.746-2.529 1.513-3.686 2.288-.047.662-.087 1.332-.113 2.022-.03.75-.042 1.515-.042 2.294 0 1.494.055 2.931.153 4.314.668.448 1.355.893 2.073 1.33.526.324 1.062.645 1.614.96 1.28.733 2.565 1.407 3.844 2.024.082-.04.163-.076.246-.116.85-.416 1.71-.863 2.582-1.344.337-.181.673-.37 1.01-.564 1.302-.746 2.529-1.512 3.685-2.287.047-.663.088-1.334.113-2.023.03-.75.043-1.515.043-2.294 0-1.493-.055-2.93-.154-4.313-.666-.447-1.351-.891-2.069-1.33-.526-.325-1.066-.643-1.618-.96-1.302-.747-2.584-1.419-3.84-2.026zM32 30c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3zm9.92-.117c.034.857.052 1.73.052 2.617 0 .214 0 .428-.003.643-.007.67-.027 1.33-.053 1.984.589-.443 1.154-.886 1.694-1.329.068-.055.134-.107.2-.162.457-.38.894-.759 1.315-1.136-.386-.345-.785-.692-1.201-1.038-.631-.53-1.303-1.055-2.003-1.58zm-19.831-.006c-.53.397-1.041.794-1.53 1.192-.59.475-1.15.954-1.681 1.432.386.346.786.693 1.203 1.04.631.527 1.303 1.052 2.003 1.576-.034-.857-.052-1.73-.052-2.617 0-.214 0-.428.007-.64.005-.67.024-1.329.05-1.983zm16.472-8.659c-.305.099-.611.2-.92.307-.909.312-1.83.666-2.765 1.055-.067.027-.133.057-.2.085.766.4 1.537.821 2.311 1.265.04.023.082.045.121.071.731.418 1.442.852 2.142 1.291-.096-.77-.206-1.519-.331-2.242-.11-.63-.23-1.238-.358-1.832zm-13.12 0c-.133.62-.256 1.261-.369 1.923-.118.69-.219 1.408-.31 2.14.697-.437 1.414-.869 2.15-1.293l.105-.058c.772-.442 1.547-.863 2.321-1.265-.701-.295-1.39-.567-2.065-.815-.625-.234-1.233-.44-1.832-.631z'/%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");\n}\n\n.%prefix%-logo.loading {\n    border-radius: 100%;\n    background-color: #3650A2;\n    background-image: url(\"data:image/svg+xml,%3Csvg viewBox='0.5 0.5 45 45' xmlns='http://www.w3.org/2000/svg' stroke='%23fff'%3E%3Cg fill='none' fill-rule='evenodd' transform='translate(1 1)' stroke-width='2'%3E%3Ccircle cx='22' cy='22' r='6' stroke-opacity='0'%3E%3Canimate attributeName='r' begin='1.5s' dur='3s' values='6;22' calcMode='linear' repeatCount='indefinite' /%3E%3Canimate attributeName='stroke-opacity' begin='1.5s' dur='3s' values='1;0' calcMode='linear' repeatCount='indefinite' /%3E%3Canimate attributeName='stroke-width' begin='1.5s' dur='3s' values='2;0' calcMode='linear' repeatCount='indefinite' /%3E%3C/circle%3E%3Ccircle cx='22' cy='22' r='6' stroke-opacity='0'%3E%3Canimate attributeName='r' begin='3s' dur='3s' values='6;22' calcMode='linear' repeatCount='indefinite' /%3E%3Canimate attributeName='stroke-opacity' begin='3s' dur='3s' values='1;0' calcMode='linear' repeatCount='indefinite' /%3E%3Canimate attributeName='stroke-width' begin='3s' dur='3s' values='2;0' calcMode='linear' repeatCount='indefinite' /%3E%3C/circle%3E%3Ccircle cx='22' cy='22' r='8'%3E%3Canimate attributeName='r' begin='0s' dur='1.5s' values='6;1;2;3;4;5;6' calcMode='linear' repeatCount='indefinite' /%3E%3C/circle%3E%3C/g%3E%3C/svg%3E\");\n}\n\n.%prefix%-logo.error {\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 70 70'%3E%3Cdefs/%3E%3Ccircle cx='35' cy='35' r='35' fill='%23FC3D39'/%3E%3Cpath fill='%23fff' d='M22.3 48h25.4c2.5 0 4-1.7 4-4a4 4 0 00-.5-2L38.5 19.3a4 4 0 00-3.5-2 4 4 0 00-3.5 2L18.8 42.1c-.3.6-.5 1.3-.5 2 0 2.2 1.6 4 4 4zM35 37c-.9 0-1.4-.6-1.4-1.5l-.2-7.7c0-.9.6-1.6 1.6-1.6s1.7.7 1.7 1.6l-.3 7.7c0 1-.5 1.5-1.4 1.5zm0 6c-1 0-1.9-.8-1.9-1.8s.9-1.8 2-1.8c1 0 1.8.7 1.8 1.8 0 1-.9 1.8-1.9 1.8z'/%3E%3C/svg%3E\");\n}\n\n.%prefix%-logo.success {\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 70 70'%3E%3Cdefs/%3E%3Ccircle cx='35' cy='35' r='35' fill='%233DC55D'/%3E%3Cpath fill='%23fff' d='M30.9 49.7a2 2 0 001.8-1L48 24.9c.3-.5.4-1 .4-1.4 0-1-.7-1.7-1.7-1.7-.8 0-1.2.3-1.6 1L30.8 45.4 23.5 36c-.5-.6-1-.9-1.6-.9-1 0-1.8.8-1.8 1.8 0 .4.2.9.6 1.3L29 48.7c.6.7 1.1 1 1.9 1z'/%3E%3C/svg%3E\");\n}\n\n.%prefix%-request {\n    padding: 20px 20px 40px 20px;\n    border-radius: 20px;\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n    background: #010c2c;\n}\n\n.%prefix%-info {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.%prefix%-title {\n    margin-top: 8px;\n    font-weight: bold;\n    width: 320px;\n    height: 40px;\n    font-size: 21px;\n    line-height: 1.9;\n    text-align: center;\n    color: #ffffff;\n}\n\n.%prefix%-wave {\n    height: 399px;\n    width: 320px;\n    position: absolute;\n    object-fit: contain;\n    background-position: center;\n    top: -127px;\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='1658' height='417'%3E%3Cg fill='%23C2A2F6' stroke='%23C2A2F6' stroke-width='.5' fill-rule='evenodd' opacity='.25'%3E%3Cpath d='M619.983 276.696c-3.25 0-6.175-.28-8.766-.835-25.291-5.435-47.668-20.247-68.409-45.277-18.534-22.366-33.372-50.28-45.44-74.635-27.57-55.632-60.532-108.509-114.577-118.637-26.58-4.982-55.836 4.324-78.257 24.894-22.422 20.57-34.177 48.885-31.444 75.745l-.226.023c-1.412-13.876.856-27.823 6.744-41.454 5.496-12.733 14.062-24.656 24.77-34.48 10.709-9.825 23.333-17.341 36.507-21.737 14.101-4.706 28.215-5.787 41.948-3.213 25.436 4.767 47.997 19.206 68.967 44.144 18.867 22.44 33.725 50.311 45.77 74.615 25.586 51.634 57.585 107.732 113.695 119.79 13.523 2.905 36.164-1.872 67.303-14.203 26.865-10.638 60.987-27.278 101.416-49.463 74.344-40.797 156.117-92.397 221.821-133.86 25.54-16.114 47.593-30.032 65.337-40.858 12.155-7.416 25.152-15.097 38.647-20.358 15.18-5.918 28.793-7.87 41.619-5.969 19.592 2.904 36.535 14.179 51.792 34.469 13.388 17.802 23.644 40.244 32.207 59.883 17.106 39.23 45.653 92.362 95.846 100.81 20.886 3.512 42.635-1.672 61.824-6.242l268.181-63.91.052.22-268.18 63.91c-14.78 3.521-31.078 7.405-47.341 7.405-4.876 0-9.745-.348-14.573-1.161-11.377-1.916-22.309-6.264-32.49-12.931-9.152-5.99-17.974-14.038-26.221-23.914-13.175-15.78-25.378-36.745-37.304-64.097-19.292-44.246-41.657-87.968-83.827-94.218-27.502-4.078-53.589 10.112-80.115 26.296-17.741 10.825-39.795 24.742-65.331 40.857-65.707 41.464-147.484 93.068-221.834 133.868-40.44 22.188-74.567 38.832-101.442 49.473-15.096 5.98-28.305 10.225-39.26 12.625-7.37 1.616-13.861 2.425-19.41 2.425'/%3E%3Cpath d='M612.296 271.743c-3.989 0-7.613-.349-10.85-1.07-26.504-5.794-50.237-21.706-72.559-48.637-16.54-19.892-30.041-43.007-42.17-65.021C460.22 108.748 427.323 56.54 372.076 48.019c-25.988-4.042-54.663 5.622-76.707 25.852-22.031 20.218-34.127 47.935-32.364 74.144l-.274.019c-.914-13.555 1.673-27.18 7.693-40.494 5.633-12.465 14.196-24.178 24.757-33.873 10.572-9.7 22.975-17.225 35.878-21.763 13.792-4.851 27.606-6.25 41.059-4.158 24.925 3.844 47.256 16.87 68.267 39.824 18.762 20.492 34.072 46.537 46.575 69.311 12.118 22.002 25.616 45.105 42.14 64.98 22.28 26.88 45.965 42.759 72.408 48.544 50.77 11.31 198.542-69.67 321.608-141.484 20.539-11.971 39.95-23.4 58.726-34.45 27.44-16.154 51.139-30.105 70.238-40.975 13.374-7.612 25.492-14.303 38.353-19.094 15.05-5.607 28.501-7.471 41.122-5.7 19.315 2.713 36.234 13.3 51.725 32.367 13.324 16.4 23.692 36.707 33.17 56.102 17.918 36.657 47.381 86.18 96.162 92.999 20.144 2.813 40.966-2.122 60.567-7.418 20.537-5.548 41.153-11.705 61.09-17.66 11.448-3.422 23.286-6.956 34.985-10.341 28.684-8.297 62.7-17.832 97.51-25.652 26.446-5.94 54.231-10.834 82.585-14.546l.036.274c-28.346 3.711-56.123 8.604-82.56 14.542-34.804 7.818-68.815 17.353-97.495 25.647-11.698 3.385-23.535 6.92-34.982 10.34-19.939 5.956-40.556 12.116-61.097 17.664-19.628 5.303-40.482 10.244-60.678 7.421-11.164-1.558-21.946-5.426-32.045-11.495-9.069-5.448-17.874-12.846-26.17-21.99-13.299-14.654-25.423-33.614-38.156-59.664-15.968-32.675-40.1-82.054-84.685-88.315-28.715-4.032-56.763 11.932-79.3 24.76-19.098 10.869-42.795 24.82-70.237 40.972-18.775 11.052-38.187 22.48-58.726 34.451-115.278 67.27-252.238 142.58-310.958 142.583'/%3E%3Cpath d='M605.144 265.8c-4.93 0-9.32-.433-13.155-1.295-26.09-5.882-49.762-21.033-72.37-46.325-17.281-19.219-31.419-41.37-43.314-60.624-27.3-44.5-60.934-92.51-114.78-98.914-25.787-3.132-53.193 6.597-75.193 26.693-21.662 19.788-34.12 46.802-33.322 72.263l-.326.01c-.413-13.182 2.5-26.43 8.655-39.379 5.777-12.149 14.341-23.607 24.773-33.135 10.435-9.532 22.628-17.033 35.263-21.692 13.488-4.974 27.011-6.685 40.19-5.084 53.99 6.42 87.68 54.503 115.018 99.067 11.885 19.242 26.013 41.38 43.281 60.576 22.56 25.24 46.176 40.362 72.196 46.224 12.558 2.829 31.108.995 55.144-5.456 21.41-5.746 47.856-15.348 78.603-28.533 62.546-26.822 134.803-65.03 183.712-91.436 18.91-10.188 36.978-19.996 54.45-29.482 28.717-15.589 53.516-29.052 73.66-39.644l.103-.054c12.235-6.435 24.888-13.088 38.028-17.72 14.914-5.257 28.195-7.018 40.602-5.384 19.046 2.509 35.953 12.365 51.69 30.131 13.227 14.934 23.703 33.163 34.154 52.093 20.319 36.792 49.655 79.682 96.54 84.812 19.849 2.172 40.255-2.828 59.35-8.559 21.125-6.337 42.06-13.776 62.306-20.972 11.691-4.158 23.78-8.455 35.785-12.494 29.367-9.889 64.33-21.041 100.989-28.784 27.882-5.887 58.165-9.43 85.275-9.975v.327c-27.084.545-57.345 4.085-85.208 9.968-36.642 7.739-71.594 18.889-100.951 28.77-12.003 4.043-24.09 8.34-35.78 12.495-20.25 7.196-41.19 14.64-62.32 20.978-19.13 5.74-39.574 10.751-59.481 8.572-10.96-1.201-21.598-4.568-31.62-10.012-8.994-4.884-17.788-11.606-26.138-19.977-17.396-17.437-30.608-39.736-39.033-54.991-17.785-32.214-42.141-76.333-85.6-82.059-27.645-3.64-54.63 10.55-78.436 23.07l-.104.054c-20.14 10.591-44.938 24.054-73.653 39.642-17.474 9.486-35.544 19.294-54.453 29.482-48.915 26.41-121.18 64.624-183.741 91.45-30.76 13.191-57.219 22.796-78.645 28.545-16.76 4.5-30.865 6.758-42.144 6.758'/%3E%3Cpath d='M598.884 260.847c-6.143 0-11.578-.54-16.285-1.629-13.58-3.133-26.851-8.81-39.446-16.87-11.096-7.105-21.8-16.042-32.725-27.33-16.85-17.407-31.323-37.427-44.455-56.47-29.506-42.786-62.684-84.92-114.909-89.236-25.187-2.176-52.031 7.895-73.657 27.631-21.617 19.732-34.118 45.5-34.293 70.697l-.374-.003c.087-12.866 3.324-25.797 9.619-38.434 5.922-11.887 14.495-23.139 24.796-32.539 10.297-9.399 22.275-16.903 34.638-21.7 13.18-5.115 26.405-7.143 39.303-6.028 23.92 1.977 45.812 12.124 66.917 31.021 18.412 16.485 34.08 37.8 48.27 58.376 13.122 19.028 27.585 39.032 44.416 56.424 23.048 23.813 46.593 38.234 71.984 44.092 13.073 3.017 31.81 1.816 55.689-3.567 21.319-4.806 47.41-13.106 77.554-24.668 61.947-23.759 132.419-57.973 180.036-81.637 18.47-9.149 36.212-17.995 53.373-26.55 28.663-14.293 53.42-26.636 73.867-36.557l1.99-.967c11.888-5.773 24.178-11.743 36.868-15.876 14.385-4.685 27.183-6.247 39.125-4.774 18.771 2.316 35.665 11.481 51.648 28.018 14.134 14.625 25.778 33.294 35.135 48.295 21.194 33.962 51.362 73.4 96.911 76.974 20.414 1.603 40.84-4.026 58.13-9.74 21.712-7.172 42.965-15.919 63.519-24.373 11.93-4.907 24.268-9.983 36.577-14.705 28.29-10.85 65.73-24.298 104.461-32.036 29.614-5.913 61.67-7.895 87.951-5.438l-.035.376c-26.246-2.454-58.263-.474-87.842 5.433-38.704 7.732-76.124 21.172-104.4 32.017-12.305 4.72-24.64 9.795-36.569 14.702-20.56 8.458-41.819 17.204-63.545 24.384-15.286 5.053-33.025 10.034-51.054 10.034-2.405 0-4.813-.087-7.222-.275-10.753-.845-21.247-3.729-31.192-8.571-8.916-4.341-17.698-10.41-26.102-18.043-17.31-15.718-31.067-36.37-39.908-50.538-19.708-31.598-44.235-70.922-86.509-76.139-26.586-3.28-51.595 8.868-75.782 20.615l-1.99.967c-20.447 9.92-45.2 22.263-73.864 36.554a22555.086 22555.086 0 01-53.376 26.551c-47.624 23.67-118.105 57.887-180.066 81.652-30.16 11.569-56.27 19.874-77.609 24.684-15.348 3.46-28.586 5.196-39.568 5.196'/%3E%3Cpath d='M593.57 255.894c-7.72 0-14.51-.68-20.336-2.048-13.527-3.17-26.308-8.476-39.069-16.219-11.016-6.679-21.774-15.044-32.897-25.577-17.608-16.68-32.764-35.572-45.593-51.97-30.244-38.669-64.042-76.622-115.032-79.009-51.746-2.42-104.933 45.67-107.383 97.087l-.426-.02c.594-12.451 4.146-24.958 10.56-37.176 6.046-11.521 14.603-22.476 24.747-31.678 21.334-19.359 47.765-29.797 72.521-28.639 51.171 2.395 85.044 40.426 115.352 79.173 12.816 16.386 27.962 35.262 45.548 51.922 23.48 22.236 46.954 35.872 71.772 41.69 13.595 3.19 32.515 2.631 56.231-1.651 21.238-3.838 46.98-10.788 76.506-20.657 46.89-15.67 102.927-38.339 176.35-71.34 20.433-9.139 39.99-17.95 58.9-26.47 24.867-11.201 48.354-21.782 67.468-30.227l3.807-1.687c23.467-10.414 47.734-21.182 73.42-18.255 18.355 2.094 35.114 10.398 51.232 25.386 14.025 13.041 25.667 29.37 35.937 43.775l.546.766c23.424 32.825 53.299 66.652 97.28 68.664 21.152.968 42.606-5.734 56.905-10.858 22.3-7.989 43.869-17.964 64.727-27.613 12.172-5.627 24.757-11.449 37.373-16.825 28.929-12.324 67.341-27.45 107.931-35.085 15.583-2.93 32.107-4.548 47.786-4.68 15.502-.13 30.32 1.187 42.85 3.811l-.088.417c-25.809-5.403-58.784-5.086-90.469.87-40.55 7.628-78.933 22.744-107.843 35.06-12.609 5.374-25.192 11.192-37.36 16.82-20.867 9.652-42.445 19.63-64.763 27.628-13.391 4.799-33.05 10.975-52.887 10.975-1.395 0-2.789-.03-4.183-.094-44.163-2.019-74.124-35.933-97.607-68.843l-.546-.766c-20.426-28.649-45.846-64.304-86.87-68.983-25.57-2.915-49.781 7.829-73.2 18.22-1.273.565-2.543 1.128-3.807 1.687-19.11 8.445-42.597 19.025-67.46 30.226-18.915 8.52-38.472 17.332-58.905 26.471-73.435 33.005-129.486 55.68-176.388 71.353-29.546 9.875-55.307 16.832-76.564 20.673-13.634 2.464-25.694 3.696-36.073 3.696'/%3E%3Cpath d='M590.296 250.94c-9.824 0-18.405-.867-25.678-2.606-13.27-3.175-25.918-8.288-38.671-15.631-10.906-6.278-21.712-14.111-33.035-23.941-17.307-15.025-32.56-31.798-46.7-47.69-30.939-34.772-65.311-68.754-115.079-69.138-50.355-.377-102.219 46.385-106.74 96.244l-.475-.041c2.154-23.745 15.36-48.207 36.233-67.111 20.775-18.816 46.39-29.571 70.369-29.571.206 0 .41 0 .617.002 22.949.177 44.38 7.421 65.524 22.147 19.297 13.437 35.88 31.385 49.91 47.152 14.13 15.88 29.37 32.64 46.654 47.644 24.257 21.064 46.98 33.604 71.506 39.47 26.773 6.4 71.234.854 132.14-16.49 46.148-13.143 102.588-33.217 172.54-61.368 27.548-11.015 54.447-21.892 78.178-31.49 17.078-6.904 33.206-13.426 47.226-19.048 1.844-.741 3.7-1.492 5.564-2.247 22.694-9.192 46.166-18.696 70.85-16.105 17.781 1.869 34.252 9.254 50.353 22.577 14.03 11.609 25.946 26.21 36.46 39.093l1.77 2.17c24.3 29.708 54.895 60.147 97.58 60.663 16.083.187 34.275-3.74 55.643-12.015 22.866-8.859 44.732-20.086 65.878-30.948 12.407-6.369 25.236-12.96 38.152-19.009 29.547-13.848 68.904-30.711 111.325-38.271 33.332-5.936 68.195-4.559 93.259 3.686l-.15.453c-24.992-8.221-59.768-9.593-93.025-3.67-42.367 7.55-81.685 24.398-111.207 38.231-12.908 6.05-25.732 12.637-38.135 19.006-21.158 10.865-43.035 22.099-65.924 30.968-21.426 8.297-39.682 12.23-55.822 12.046-19.769-.238-38.19-6.659-56.316-19.628-16.927-12.111-31.137-28.387-41.627-41.211l-1.772-2.168c-21.928-26.87-46.782-57.325-86.493-61.498-24.566-2.58-47.979 6.902-70.621 16.072-1.863.755-3.717 1.506-5.565 2.247-14.02 5.623-30.148 12.145-47.222 19.049-23.734 9.597-50.633 20.474-78.181 31.489-69.969 28.158-126.422 48.238-172.585 61.384-28.905 8.23-54.295 13.867-75.472 16.754-11.484 1.565-21.919 2.349-31.236 2.349'/%3E%3Cpath d='M588.239 245.988c-12.73 0-23.766-1.12-32.987-3.362-23.93-5.815-46.65-17.654-71.5-37.257-18.007-14.206-33.853-29.664-47.832-43.3-31.576-30.804-66.481-60.741-115.208-59.128-48.972 1.623-99.581 46.99-106.176 95.183l-.524-.07c3.146-22.98 16.699-46.75 37.186-65.212 10.029-9.036 21.062-16.283 32.797-21.54 12.273-5.496 24.621-8.487 36.701-8.887 22.483-.746 43.697 5.046 64.857 17.703 19.373 11.59 36.346 27.536 50.738 41.574 13.97 13.63 29.802 29.075 47.79 43.265 24.786 19.554 47.44 31.361 71.293 37.157 49.738 12.084 148.03-8.169 300.498-61.908 45.529-15.916 88.15-31.197 124.529-44.273 2.413-.868 4.893-1.775 7.29-2.652 21.944-8.03 44.637-16.332 68.362-14.068 17.2 1.644 33.365 8.12 49.416 19.798 14.006 10.19 26.166 23.067 36.895 34.427 1.075 1.14 2.142 2.27 3.2 3.387 26.43 27.849 56.603 53.488 97.95 52.535 16.21-.376 34.011-4.675 54.422-13.143 23.438-9.724 45.617-22.166 67.065-34.195 12.654-7.1 25.739-14.438 38.967-21.158 20.423-10.375 38.589-18.523 55.534-24.906 20.89-7.87 40.276-13.252 59.263-16.453 17.08-2.876 34.948-3.655 51.671-2.25 16.905 1.421 32.216 5.044 44.278 10.478l-.217.48c-24.215-10.91-60.864-14.047-95.644-8.189-34.5 5.815-69.857 18.555-114.646 41.31-13.218 6.714-26.298 14.052-38.947 21.145-21.462 12.04-43.654 24.487-67.121 34.224-20.473 8.494-38.337 12.805-54.613 13.182-.75.02-1.5.026-2.243.026-40.417 0-70.067-25.292-96.102-52.725-1.06-1.118-2.126-2.248-3.202-3.384-22.307-23.624-47.59-50.398-85.976-54.065-23.607-2.254-46.242 6.029-68.131 14.038-2.397.877-4.877 1.785-7.293 2.653-36.379 13.076-79 28.358-124.533 44.274-67.366 23.743-122.617 40.522-168.908 51.289-28.261 6.572-53.303 10.88-74.426 12.805-8.737.796-16.906 1.192-24.473 1.192'/%3E%3Cpath d='M589.229 241.035c-16.885 0-31.418-1.485-43.347-4.443-23.18-5.744-45.83-16.902-71.285-35.112-16.59-11.87-31.827-24.694-45.275-36.01-1.24-1.043-2.468-2.08-3.689-3.106-32.115-26.987-67.476-53.032-115.336-49.39-47.594 3.623-96.949 47.817-105.622 94.572l-.569-.103c2.113-11.39 6.629-22.83 13.422-34.002 6.554-10.78 14.872-20.744 24.718-29.614 9.89-8.911 20.719-16.169 32.18-21.572 11.97-5.642 24.023-8.958 35.826-9.856 22.034-1.677 43.03 2.684 64.188 13.334 19.556 9.844 36.87 23.842 51.565 36.188l3.692 3.106c13.434 11.31 28.665 24.129 45.236 35.984 25.393 18.165 47.982 29.295 71.088 35.02 52.252 12.95 151.947-2.61 296.31-46.243 41.289-12.343 85.204-25.91 123.654-38.207 2.981-.954 6.047-1.962 9.009-2.938 21.19-6.976 43.104-14.19 65.88-12.229 16.592 1.43 32.412 7.053 48.362 17.191 13.938 8.859 25.761 19.62 37.196 30.03 1.644 1.494 3.268 2.973 4.876 4.426 27.3 24.61 58.108 47.059 98.323 44.653 16.057-.962 33.957-5.782 53.202-14.332 23.999-10.661 46.49-24.358 68.24-37.602 12.905-7.862 26.25-15.988 39.794-23.412 20.81-11.41 39.442-20.33 56.96-27.27 21.532-8.53 41.587-14.214 61.31-17.377 17.836-2.858 36.382-3.218 53.633-1.04 17.596 2.22 33.16 7.012 45.01 13.857l-.29.5c-23.818-13.758-61.469-18.642-98.26-12.746-46.582 7.47-89.702 29.022-118.085 44.582-13.533 7.418-26.872 15.542-39.772 23.397-21.766 13.257-44.273 26.963-68.305 37.637-19.308 8.579-37.276 13.419-53.403 14.381-18.954 1.133-37.067-3.032-55.37-12.734-16.69-8.847-31.292-21.174-43.375-32.065a1459.17 1459.17 0 01-4.878-4.43c-22.597-20.566-48.208-43.88-85.22-47.07-22.656-1.952-44.512 5.244-65.647 12.202-2.966.975-6.031 1.985-9.013 2.94-38.452 12.295-82.37 25.865-123.663 38.209-63.678 19.246-119.27 33.188-165.233 41.434-27.596 4.95-52.285 7.949-73.382 8.914-5.065.23-9.952.346-14.655.346'/%3E%3Cpath d='M1205.474 238.063c-14.942 0-29.611-3.221-44.564-9.764-16.669-7.293-31.72-17.95-44.246-27.414-2.257-1.708-4.493-3.425-6.86-5.242-22.78-17.505-48.601-37.343-84.161-40.05-21.71-1.65-42.773 4.487-63.145 10.423a910.75 910.75 0 01-10.762 3.092c-35.81 9.984-79.417 21.333-122.79 31.954-72.159 17.93-163.397 36.34-233.714 36.344-22.042 0-42.017-1.807-58.72-6.008-28.987-7.287-53.207-21.352-71.072-32.791-14.48-9.271-27.592-18.652-40.276-27.724a2617.44 2617.44 0 00-9.817-7.003c-32.539-23.066-68.26-45.108-115.471-39.405-46.2 5.58-94.314 48.393-105.065 93.493l-.61-.145c2.623-11.008 7.462-22.06 14.375-32.852 6.697-10.45 15.013-20.157 24.714-28.85 9.754-8.74 20.376-15.972 31.563-21.494 11.67-5.758 23.425-9.383 34.949-10.774 21.6-2.609 42.378.3 63.52 8.893 17.877 7.266 33.872 17.496 52.387 30.622 3.214 2.277 6.425 4.574 9.824 7.006 12.673 9.066 25.78 18.443 40.25 27.708 17.82 11.413 41.984 25.446 70.882 32.71 69.861 17.56 197.42-6.803 292.128-30.34 43.368-10.62 86.97-21.966 122.775-31.95 3.557-.988 7.214-2.054 10.752-3.085 20.427-5.953 41.548-12.108 63.371-10.45 35.747 2.722 61.646 22.62 84.497 40.177 2.366 1.82 4.6 3.537 6.855 5.241 26.192 19.79 57.58 40.561 98.7 36.547 16.076-1.572 33.565-6.771 51.983-15.45 24.542-11.568 47.343-26.435 69.393-40.812 13.165-8.582 26.778-17.46 40.645-25.56 21.198-12.385 40.295-22.034 58.384-29.496 22.175-9.148 42.9-15.107 63.362-18.217 18.59-2.823 37.814-2.763 55.595.175 18.277 3.02 34.095 8.958 45.741 17.173l-.363.511c-23.074-16.275-62.672-23.042-100.879-17.24-48.451 7.365-92.56 30.713-121.523 47.635-13.853 8.094-27.46 16.966-40.618 25.544-22.068 14.39-44.887 29.267-69.468 40.854-18.484 8.711-36.043 13.926-52.19 15.508a106.23 106.23 0 01-10.33.506'/%3E%3Cpath d='M1186.685 243.016c-33.345 0-60.774-15.177-84.274-29.851-3.028-1.891-6.04-3.828-9.228-5.875-22.833-14.661-48.712-31.282-82.72-33.536-20.748-1.377-40.996 3.811-60.579 8.831-4.139 1.06-8.417 2.157-12.572 3.155-35.065 8.417-78.366 17.625-121.925 25.922-56.822 11.04-111.418 18.48-157.882 21.515-54.729 3.575-98.588 1.25-130.365-6.908-27.44-7.048-51.213-19.481-70.85-30.713-11.315-6.47-21.91-12.903-32.155-19.124-6.642-4.032-12.917-7.84-19.068-11.471-32.823-19.354-68.787-37.588-115.606-29.69-44.797 7.558-91.68 49.335-104.514 93.126l-.653-.192c6.233-21.261 20.452-42.66 40.041-60.249 19.796-17.777 42.884-29.622 65.013-33.356 47.045-7.936 83.131 10.357 116.061 29.774 6.158 3.63 12.436 7.443 19.079 11.475 10.242 6.218 20.83 12.65 32.138 19.118 19.595 11.209 43.32 23.613 70.682 30.641 79.727 20.475 214.63-.37 287.95-14.613 43.553-8.297 86.84-17.502 121.896-25.92 4.152-.993 8.426-2.091 12.562-3.15 19.634-5.03 39.937-10.235 60.79-8.852 34.184 2.267 60.141 18.937 83.043 33.644a922.195 922.195 0 009.221 5.872c26.89 16.792 58.939 34.242 99.082 28.697 16.045-2.221 33.125-7.837 50.765-16.692 25.066-12.585 48.176-28.724 70.526-44.327 13.431-9.38 27.32-19.076 41.515-27.926 47.034-29.32 86.825-45.574 125.223-51.153 40.355-5.859 81.19 2.787 104.031 22.027l-.437.521c-22.7-19.12-63.324-27.708-103.497-21.875-38.302 5.565-78.01 21.789-124.961 51.058-14.18 8.838-28.062 18.532-41.486 27.905-22.37 15.62-45.5 31.771-70.61 44.38-17.707 8.886-34.858 14.525-50.977 16.756-5.22.72-10.306 1.056-15.26 1.056'/%3E%3Cpath d='M1166.656 246.978c-10.673 0-21.433-1.422-32.502-4.283-16.788-4.334-32.025-11.339-45.99-18.266-3.965-1.97-7.923-4.025-12.113-6.202-22.713-11.791-48.456-25.156-80.772-26.952-19.75-1.097-39.137 3.15-57.885 7.256-4.775 1.048-9.716 2.129-14.515 3.087-35.537 7.079-77.401 13.87-121.059 19.634-53.58 7.285-106.907 11.246-154.203 11.452-52.737.23-96.43-4.054-129.848-12.732-26.797-6.96-50.508-18.277-70.63-28.336-6.436-3.219-12.701-6.405-18.763-9.485-11.8-5.998-22.945-11.665-33.586-16.68-31.505-14.85-69.03-29.842-115.744-19.683-44.1 9.59-88.795 49.086-103.97 91.876l-.688-.245c7.251-20.45 21.808-41.126 40.99-58.222 19.435-17.322 41.993-29.44 63.513-34.12 20.81-4.526 41.15-4.509 62.182.054 20.031 4.344 38.553 12.387 54.027 19.682 10.65 5.018 21.802 10.688 33.605 16.69 6.062 3.08 12.328 6.266 18.761 9.482 20.089 10.043 43.758 21.34 70.484 28.28 63.998 16.622 167.428 17.083 283.773 1.268 43.645-5.763 85.49-12.552 121.014-19.631 4.789-.952 9.726-2.035 14.502-3.08 18.797-4.119 38.23-8.379 58.079-7.273 32.474 1.806 58.291 15.21 81.07 27.033 4.187 2.173 8.142 4.228 12.1 6.195 27.506 13.642 60.144 27.61 99.468 20.563 15.748-2.822 32.881-8.969 49.549-17.773 25.566-13.507 48.985-30.742 71.633-47.409 13.707-10.088 27.881-20.52 42.413-30.042 47.967-31.431 88.863-48.625 128.701-54.11 20.101-2.766 40.685-1.865 59.525 2.606 19.62 4.655 35.942 12.92 47.2 23.899l-.509.52c-22.33-21.777-63.982-32.101-106.116-26.304-39.728 5.47-80.528 22.628-128.4 53.997-14.516 9.511-28.682 19.936-42.381 30.018-22.67 16.687-46.11 33.937-71.725 47.467-16.733 8.84-33.94 15.01-49.761 17.847a121.135 121.135 0 01-21.43 1.922'/%3E%3Cpath d='M1145.163 251.931c-7.977 0-16.073-.706-24.38-2.115-17.034-2.892-32.589-8.283-46.86-13.677-5.129-1.944-10.268-4.036-15.709-6.251-22.359-9.109-47.701-19.432-78.12-20.8-18.682-.838-37.128 2.548-54.964 5.817-5.493 1.01-11.175 2.05-16.684 2.93-35.816 5.714-77.378 10.37-120.197 13.455-50.177 3.814-102.23 4.324-150.529 1.48-49.553-2.918-94.272-9.343-129.326-18.584-25.743-6.787-49.47-17.036-70.404-26.08-19.59-8.464-37.134-15.95-53.47-21.857-33.767-12.21-71.173-21.847-115.889-9.801-42.619 11.484-86.116 49.752-103.428 90.995l-.72-.3c8.282-19.728 23.173-39.77 41.936-56.432 19.083-16.946 41.103-29.382 62.008-35.014 20.47-5.514 40.59-6.946 61.514-4.378 20.902 2.566 40.289 8.937 54.844 14.198 16.355 5.914 33.913 13.406 53.515 21.876 20.909 9.031 44.606 19.271 70.295 26.042 70.669 18.629 175.192 25.013 279.599 17.081 42.796-3.088 84.335-7.738 120.129-13.448 5.5-.88 11.178-1.921 16.665-2.927 17.88-3.279 36.369-6.67 55.141-5.83 30.555 1.374 55.962 11.724 78.38 20.855 5.436 2.215 10.57 4.307 15.69 6.245 28.015 10.591 61.146 21.17 99.858 12.551 15.637-3.482 32.35-10.027 48.333-18.922 26.04-14.493 49.764-32.867 72.708-50.639 13.996-10.84 28.468-22.05 43.345-32.29 22.368-15.395 42.866-27.3 62.664-36.395 24.102-11.07 46.84-17.898 69.516-20.87 20.559-2.694 42.397-1.338 61.492 3.82 20.284 5.48 36.857 14.9 47.929 27.247l-.581.519c-21.63-24.12-65.327-36.504-108.738-30.816-41.152 5.396-83.045 23.55-131.84 57.136-14.858 10.227-29.322 21.429-43.309 32.262-22.967 17.79-46.715 36.184-72.805 50.706-16.049 8.931-32.835 15.502-48.545 19.003a132.966 132.966 0 01-29.063 3.208'/%3E%3Cpath d='M1121.425 257.875c-22.556 0-43.032-4.77-61.382-9.683-6.618-1.78-13.275-3.807-20.324-5.954-21.655-6.596-46.198-14.074-74.387-15.033-17.489-.591-34.849 1.989-51.637 4.485-6.33.942-12.873 1.914-19.216 2.68-36.215 4.358-77.452 6.88-119.251 7.287-90.885 1.23-193.861-11.094-275.463-32.972-20.79-5.573-40.3-12.815-59.172-19.819-3.601-1.336-7.322-2.718-10.952-4.049-21.985-8.062-39.318-13.65-54.556-17.583-31.88-8.233-70.592-14.66-115.95.077-41.08 13.345-83.363 50.466-102.825 90.273l-.743-.365c19.553-39.991 62.037-77.287 103.31-90.696 20.153-6.548 40.041-9.436 60.795-8.83 16.76.49 34.432 3.267 55.623 8.737 15.26 3.942 32.623 9.537 54.63 17.61 3.63 1.33 7.354 2.711 10.956 4.048 18.851 6.997 38.346 14.233 59.1 19.796 81.531 21.859 184.424 34.176 275.237 32.943 41.773-.407 82.978-2.925 119.164-7.281 6.33-.762 12.867-1.737 19.19-2.677 16.827-2.502 34.226-5.088 51.79-4.494 28.298.962 52.896 8.456 74.6 15.069 7.041 2.144 13.692 4.171 20.296 5.944 28.371 7.604 61.85 14.849 100.183 4.552 15.479-4.162 31.761-11.113 47.087-20.105 26.463-15.527 50.475-35.052 73.696-53.937 14.287-11.62 29.06-23.633 44.282-34.62 22.744-16.418 43.694-29.09 64.047-38.743 24.727-11.727 48.122-18.852 71.52-21.782 21.288-2.665 43.809-.873 63.414 5.044 20.929 6.318 37.742 16.915 48.622 30.647l-.65.514c-21.262-26.834-65.985-41.053-111.283-35.383-42.549 5.33-85.505 24.514-135.185 60.375-15.202 10.973-29.966 22.98-44.244 34.59-23.245 18.905-47.282 38.452-73.799 54.008-15.39 9.031-31.743 16.012-47.291 20.193-13.702 3.68-26.785 5.13-39.232 5.134'/%3E%3Cpath d='M146.427 267.78l-.766-.432c10.514-18.643 25.657-36.977 43.787-53.03 18.65-16.508 39.04-29.272 58.956-36.906 19.907-7.63 39.572-11.978 60.118-13.294 17.504-1.122 35.44-.084 56.44 3.262 16.728 2.67 34.975 7.029 55.79 13.327 8.543 2.586 16.964 5.309 25.882 8.193 14.19 4.587 28.864 9.33 43.984 13.45 67.726 18.447 169.512 43.581 271.08 48.848 40.698 2.257 81.598 1.875 118.272-1.102 7.374-.598 14.997-1.471 22.372-2.315 15.569-1.782 31.674-3.628 47.827-3.262 25.56.578 47.777 5.234 69.263 9.738 9.216 1.933 17.92 3.757 26.525 5.173 30.685 5.024 64.108 8.08 100.582-3.476 15.293-4.85 31.157-12.211 45.875-21.29 26.869-16.576 51.18-37.23 74.69-57.203 14.605-12.409 29.706-25.238 45.295-36.99 23.136-17.44 44.554-30.881 65.474-41.093 25.018-12.211 49.772-19.847 73.574-22.694 22.033-2.634 45.252-.407 65.381 6.272 21.584 7.162 38.648 18.936 49.347 34.052l-.717.509c-20.915-29.546-66.69-45.605-113.907-39.959-43.974 5.26-88.023 25.475-138.623 63.617-15.569 11.735-30.66 24.556-45.254 36.955-23.536 19.997-47.873 40.673-74.798 57.281-14.779 9.117-30.71 16.511-46.072 21.38-16.78 5.319-33.93 7.941-52.426 8.022h-.841c-17.829 0-34.84-2.406-47.722-4.517-8.624-1.416-17.339-3.243-26.564-5.176-21.444-4.497-43.622-9.146-69.1-9.722-16.096-.362-32.17 1.478-47.71 3.256-7.38.847-15.01 1.72-22.4 2.318-36.713 2.98-77.651 3.362-118.392 1.106-43.477-2.254-91.615-8.474-143.084-18.49-39.145-7.618-81.072-17.56-128.18-30.392-15.139-4.122-29.823-8.868-44.022-13.46-8.912-2.88-17.33-5.602-25.867-8.185-20.775-6.289-38.987-10.64-55.673-13.301-29.61-4.72-69.567-7.854-116.103 9.984-39.517 15.147-80.623 51.131-102.293 89.547'/%3E%3Cpath d='M136.537 277.687l-.782-.504c11.61-17.95 27.075-35.665 44.723-51.23 18.326-16.163 38.19-29.23 57.447-37.785 19.725-8.768 39.17-14.573 59.437-17.75 18.03-2.825 36.76-3.549 57.26-2.21 17.874 1.163 36.501 4.114 56.947 9.013 14.708 3.526 29.213 7.744 44.567 12.214 8.18 2.379 16.634 4.838 25.117 7.181 16.605 4.586 33.655 9.548 51.707 14.796 66.002 19.198 140.813 40.956 215.213 49.895 39.603 4.887 80.193 6.645 117.386 5.084 8.803-.368 17.91-1.108 26.719-1.826 13.926-1.131 28.331-2.304 42.697-2.146 21.948.236 41.88 2.692 61.156 5.064 12.366 1.523 24.04 2.958 35.519 3.714 29.233 1.907 64.093 2.03 100.982-11.506 15.072-5.533 30.517-13.293 44.666-22.44 27.233-17.607 51.837-39.329 75.63-60.333 14.94-13.19 30.39-26.827 46.363-39.34 23.53-18.433 45.413-32.621 66.902-43.377 12.36-6.187 24.74-11.273 36.79-15.118 13.013-4.15 26.08-6.994 38.838-8.45 22.778-2.6 46.696.06 67.348 7.49 22.235 7.997 39.55 20.932 50.072 37.404l-.784.5c-23.758-37.193-75.648-49.135-116.53-44.47-44.78 5.111-91.25 26.946-142.063 66.754-15.951 12.496-31.39 26.125-46.32 39.305-23.82 21.027-48.45 42.771-75.741 60.415-14.206 9.185-29.715 16.977-44.85 22.533-16.517 6.06-33.504 9.815-51.934 11.477-14.531 1.308-30.238 1.334-49.43.084-11.504-.757-23.192-2.195-35.571-3.72-19.25-2.37-39.157-4.82-61.053-5.058-14.327-.152-28.706 1.014-42.613 2.146-8.816.717-17.932 1.457-26.754 1.829-37.241 1.56-77.884-.2-117.538-5.09-74.475-8.947-149.321-30.717-215.362-49.925-18.045-5.251-35.092-10.21-51.694-14.795-8.486-2.344-16.947-4.806-25.126-7.185-15.345-4.463-29.84-8.681-44.526-12.2-20.393-4.887-38.972-7.829-56.791-8.992-42.545-2.776-79.486 3.542-116.258 19.883-38.449 17.084-77.444 51.062-101.766 88.669'/%3E%3Cpath d='M126.638 287.593l-.789-.585c26.871-36.458 64.85-69.388 101.594-88.088 19.615-9.982 38.835-17.245 58.75-22.2 18.784-4.672 37.781-7.186 58.084-7.68 18.51-.452 38.06 1.13 58.104 4.704 22.748 4.054 45.018 10.29 68.597 16.893l.908.255c30.89 8.652 62.614 19.707 96.195 31.415 53.884 18.78 109.603 38.2 166.573 49.107 44.873 8.713 82.971 12.396 116.478 11.265 7.576-.255 15.385-.614 22.94-.963 14.922-.685 30.353-1.392 45.706-1.412 16.6-.029 32.373.737 47.626 1.47 17.424.834 33.885 1.625 49.932 1.186 27.335-.76 63.562-3.664 101.385-19.53 15.02-6.303 29.642-14.24 43.458-23.59 27.552-18.647 52.44-41.4 76.509-63.402 15.299-13.989 31.118-28.448 47.493-41.744 23.923-19.423 46.274-34.358 68.33-45.657 12.664-6.488 25.363-11.8 37.744-15.791 13.368-4.309 26.806-7.22 39.94-8.65 23.523-2.563 48.14.53 69.316 8.707 22.884 8.836 40.45 22.928 50.796 40.752l-.848.492c-19.916-34.31-68.914-54.447-119.159-48.977-46.188 5.033-93.782 27.892-145.502 69.885-16.352 13.277-32.161 27.728-47.45 41.704-24.094 22.026-49.009 44.803-76.62 63.492-13.87 9.388-28.548 17.355-43.628 23.684-37.973 15.927-74.318 18.845-101.739 19.604-16.083.442-32.56-.35-50.007-1.186-15.043-.724-30.593-1.47-46.937-1.47h-.64c-15.327.023-30.751.73-45.662 1.415-7.557.346-15.369.705-22.952.96-33.581 1.134-71.753-2.556-116.695-11.282-57.04-10.923-112.792-30.352-166.708-49.145-33.572-11.698-65.28-22.75-96.137-31.392l-.911-.255c-23.556-6.597-45.804-12.83-68.507-16.874-19.98-3.564-39.461-5.14-57.906-4.691-41.497 1.011-78.487 10.474-116.41 29.774-36.616 18.637-74.465 51.458-101.252 87.8'/%3E%3Cpath d='M852.423 300.47c-5.277 0-10.53-.074-15.727-.261-38.858-1.41-77.83-7.292-115.83-17.49-47.402-12.626-93.8-32.226-138.665-51.183-41.473-17.523-80.645-34.072-119.963-45.246-18.809-5.346-43.667-11.869-69.174-14.888-19.985-2.37-39.845-2.498-59.025-.394-39.983 4.392-78.112 17.377-116.567 39.695-34.836 20.04-70.612 50.941-100.737 87.007l-.792-.66c14.04-16.81 30.141-33.305 46.562-47.701 18.076-15.848 36.397-29.15 54.453-39.538 38.578-22.393 76.839-35.42 116.968-39.828 19.258-2.114 39.198-1.981 59.26.394 25.58 3.03 50.489 9.565 69.333 14.92 39.38 11.19 78.58 27.753 120.083 45.288 44.833 18.945 91.195 38.532 138.533 51.138 37.925 10.175 76.816 16.048 115.6 17.455 15.187.549 30.923.122 46.142-.288 7.106-.19 14.454-.391 21.701-.488 7.018-.097 14.01-.152 20.77-.204 27.217-.207 52.925-.404 77.67-3.258 39.456-4.567 71.8-13.33 101.79-27.578a284.374 284.374 0 0042.249-24.762c27.82-19.708 52.98-43.478 77.313-66.463 15.683-14.816 31.9-30.135 48.7-44.25 24.317-20.432 47.135-36.125 69.759-47.979 12.967-6.794 25.987-12.339 38.698-16.48 13.724-4.47 27.532-7.45 41.041-8.857 24.269-2.526 49.585 1.001 71.286 9.933 23.53 9.686 41.346 24.948 51.519 44.138l-.911.483c-22.855-43.11-79.154-57.967-121.787-53.528-47.595 4.958-96.315 28.862-148.942 73.08-16.776 14.095-32.983 29.403-48.656 44.21-24.358 23.01-49.544 46.804-77.425 66.556a285.699 285.699 0 01-42.402 24.853c-30.095 14.297-62.542 23.089-102.113 27.669-24.803 2.86-50.536 3.057-77.779 3.267-6.76.049-13.749.104-20.767.2-7.241.098-14.582.298-21.685.489-10.036.271-20.298.55-30.483.55'/%3E%3Cpath d='M860.32 318.301c-12.62 0-25.433-.322-38.082-1.274-39.39-2.95-78.076-10.903-114.975-23.634-41.22-14.173-81.427-34.46-120.31-54.082-45.724-23.074-88.912-44.866-134.106-57.933-25.136-7.188-47.683-11.313-68.925-12.609-20.275-1.19-40.511.12-60.147 3.892-38.615 7.324-76.793 23.512-116.723 49.49-32.388 20.978-66.11 49.904-100.23 85.973l-.785-.742c34.178-36.13 67.965-65.111 100.427-86.136 40.05-26.057 78.354-42.293 117.108-49.642 19.722-3.793 40.05-5.108 60.415-3.912 21.322 1.303 43.947 5.44 69.16 12.647 45.291 13.096 90.538 35.927 134.294 58.007 38.85 19.607 79.026 39.878 120.175 54.028 36.811 12.7 75.407 20.632 114.703 23.58 22.49 1.686 45.518 1.39 67.053.819 40.832-1.077 71.465-4.025 99.328-9.552 38.027-7.552 71.453-19.175 102.189-35.53 14.324-7.627 28.133-16.328 41.042-25.866 28.032-20.71 53.448-45.382 78.028-69.246 16.1-15.627 32.747-31.79 49.998-46.714 53.708-46.465 103.75-71.429 152.985-76.319 25.014-2.484 51.03 1.468 73.256 11.128 24.174 10.508 42.239 26.896 52.24 47.391l-.971.473c-22.473-46.052-80.248-62.304-124.418-57.919-49.005 4.868-98.85 29.748-152.384 76.061-17.227 14.904-33.864 31.056-49.952 46.673-24.605 23.886-50.048 48.585-78.138 69.34a332.332 332.332 0 01-41.177 25.949c-30.83 16.407-64.355 28.065-102.488 35.637-27.925 5.54-58.615 8.49-99.508 9.574-9.463.248-19.216.448-29.082.448'/%3E%3Cpath d='M856.26 336.132c-18.613 0-37.165-1.19-55.527-3.566-37.533-4.862-73.7-14.624-107.494-29.022-36.652-15.614-72.209-36.847-106.597-57.38-66.308-39.598-134.873-80.546-212.053-80.778h-.671c-105.496 0-194.68 75.403-277.011 152.663l-.776-.823c37.337-35.038 81.104-74.893 128.075-104.43 51.93-32.657 100.906-48.541 149.705-48.541.226 0 .452.003.682.003 18.636.055 37.084 2.363 56.405 7.057 17.218 4.182 34.743 10.178 53.576 18.329 34.982 15.14 69.383 35.683 102.65 55.549 34.355 20.517 69.877 41.731 106.457 57.313 51.845 22.084 107.647 32.878 163.374 32.878 92.57 0 184.984-29.751 259.044-86.935 28.156-21.74 53.787-47.315 78.574-72.053 16.544-16.508 33.65-33.579 51.375-49.381 54.59-48.668 105.737-74.664 156.366-79.475 25.741-2.447 52.439 1.938 75.174 12.344 24.8 11.352 43.101 28.896 52.926 50.736l-1.031.462c-22.08-49.077-81.29-66.76-126.962-62.418-50.38 4.787-101.316 30.691-155.719 79.193-17.702 15.781-34.797 32.842-51.33 49.339-24.811 24.76-50.468 50.362-78.68 72.146-29.065 22.442-61.595 40.996-96.687 55.15-34.355 13.856-70.652 23.3-107.882 28.064a441.143 441.143 0 01-55.963 3.576'/%3E%3Cpath d='M939.496 416.37c-46.283 0-90.909-19.805-132.426-41.467A1346.266 1346.266 0 01508.29 162.77a2238.479 2238.479 0 01-6.894-6.501c-18.83-17.799-38.298-36.203-61.01-49.275-28.626-16.475-59.404-21.426-84.442-13.584-42.639 13.356-65.344 58.934-83.28 100.607l-.207-.09c8.955-20.81 19.06-42.58 32.246-60.819 15.02-20.777 31.76-33.832 51.173-39.914 13.301-4.166 27.866-4.837 43.284-1.994 13.709 2.528 28.002 7.922 41.34 15.598 22.734 13.085 42.21 31.499 61.051 49.306 2.26 2.135 4.593 4.343 6.893 6.501a1346.075 1346.075 0 00298.73 212.097c44.115 23.017 91.746 43.937 141.112 41.2 61.065-3.384 114.3-42.108 162.732-83.446 3.605-3.076 7.277-6.23 10.83-9.28 43.694-37.526 88.876-76.327 144.479-90.639 40.731-10.485 85.011-7.67 135.37 8.596 45.358 14.654 90.275 38.588 128.817 59.87l-.11.2c-69.338-38.291-142.235-74.592-214.464-74.592-16.574 0-33.101 1.91-49.557 6.146-55.552 14.299-100.713 53.08-144.388 90.59-3.552 3.05-7.225 6.204-10.83 9.28-21.544 18.39-47.406 39.374-75.877 55.585-30.231 17.217-58.686 26.349-86.992 27.916-2.937.165-5.875.242-8.8.242'/%3E%3Cpath d='M919.789 409.436c-16.712 0-34.034-2.296-52.447-6.923-20.976-5.273-43.147-13.483-69.776-25.841-61.848-28.703-124.988-67.568-187.662-115.52-38.485-29.385-77.015-62.362-114.512-98.004-2.167-2.06-4.329-4.126-6.49-6.193-19.121-18.278-38.892-37.176-61.764-50.864a157.732 157.732 0 00-5.84-3.33c-26.95-14.614-54.828-19.413-78.501-13.514-43.554 10.854-68.216 53.19-87.915 92.02l-.255-.128c19.725-38.888 44.429-81.287 88.099-92.17 23.744-5.917 51.694-1.109 78.707 13.54a154.28 154.28 0 015.85 3.336c22.902 13.704 42.685 32.615 61.816 50.902 2.165 2.068 4.326 4.134 6.49 6.19 37.49 35.64 76.01 68.607 114.489 97.989 62.659 47.935 125.78 86.79 187.61 115.484 38.709 17.968 89.931 37.782 142.866 31.526 60.579-7.166 113.847-47.66 159.024-85.052 1.713-1.416 3.421-2.832 5.123-4.248 48.886-40.57 99.437-82.523 161.053-95 6.944-1.42 14.303-2.487 21.872-3.176 38.198-3.463 78.888 3.825 124.397 22.281 43 17.438 84.852 42.95 116.51 63.226l-.155.243c-76.214-48.815-158.126-92.957-240.726-85.462-7.559.685-14.907 1.752-21.84 3.168-61.547 12.465-112.07 54.393-160.929 94.943-1.7 1.413-3.409 2.829-5.123 4.245-21.774 18.023-47.695 38.597-74.86 54.548-29.563 17.357-57.142 27.354-84.313 30.568a176.953 176.953 0 01-20.798 1.216'/%3E%3Cpath d='M898.619 403.492c-12.627 0-25.577-1.177-39.048-3.531-21.928-3.832-45.181-10.837-71.085-21.413-31.911-13.03-64.896-29.879-98.039-50.082-30.156-18.382-61.344-40.092-92.696-64.525-37.83-29.382-75.47-62.162-115.077-100.217-2.01-1.934-4.018-3.87-6.028-5.811-19.446-18.77-39.558-38.181-62.627-52.5a166.572 166.572 0 00-5.847-3.47c-26.708-15.16-54.573-21.064-78.466-16.628-44.8 8.32-71.295 47.407-92.613 83.39l-.297-.178c10.235-17.28 22.794-37.07 38.317-52.83 16.706-16.962 34.542-27.011 54.531-30.723 23.971-4.451 51.92 1.467 78.7 16.667 1.961 1.11 3.93 2.28 5.856 3.477 23.105 14.338 43.226 33.761 62.685 52.545 2.01 1.941 4.02 3.878 6.03 5.809 39.595 38.048 77.23 70.822 115.05 100.194 65.664 51.175 129.81 89.718 190.65 114.559 55.589 22.696 101.578 29.633 144.733 21.826 57.576-10.41 108.728-48.905 160.402-90.83l5.29-4.283c28.64-23.113 53.038-41.638 79.027-56.938 30.566-17.994 59.318-28.818 87.901-33.097 6.994-1.074 14.277-1.76 22.264-2.102 20.116-.86 41.287 1.313 62.922 6.461 19.636 4.67 40.337 11.96 61.529 21.662 34.73 15.898 71.229 38.19 114.86 70.153l-.205.281c-62.962-46.124-145.485-98.396-230.384-98.396-2.905 0-5.798.062-8.708.185-7.973.343-15.244 1.028-22.226 2.099-62.681 9.382-114.648 47.905-166.76 89.96l-5.29 4.283c-23.84 19.342-49.35 39.607-76.036 56.113-29.998 18.55-57.644 29.931-84.523 34.792-11.415 2.064-22.96 3.095-34.791 3.098'/%3E%3Cpath d='M874.029 398.54c-7.77 0-15.647-.404-23.688-1.212-22.987-2.304-46.652-7.852-72.35-16.967-32.156-11.406-65.678-27.504-99.643-47.85-30.224-18.105-61.856-40.215-94.021-65.725-36.547-28.848-74.343-62.317-115.549-102.315-1.831-1.777-3.66-3.561-5.489-5.342-19.785-19.272-40.242-39.2-63.52-54.16a184.069 184.069 0 00-5.84-3.607c-26.46-15.68-54.297-22.682-78.376-19.72-44.116 5.427-72.808 39.098-97.242 74.677l-.336-.23c10.332-15.046 24.366-34.186 41.33-48.778 17.495-15.044 35.875-23.573 56.197-26.073 12.574-1.547 26.033-.45 40.006 3.26 12.94 3.436 25.933 8.992 38.627 16.513a181.058 181.058 0 015.857 3.616c23.31 14.981 43.784 34.924 63.578 54.21 1.832 1.782 3.66 3.566 5.493 5.343 41.192 39.989 78.979 73.447 115.516 102.286 68.866 54.613 132.176 91.742 193.548 113.51 53.727 19.058 101.646 23.02 146.486 12.114 58.147-14.14 109.212-54.775 158.592-94.072l3.067-2.443a2121.42 2121.42 0 015.456-4.31c51.22-40.235 107.588-78.379 172.673-84.977 7.126-.72 14.528-1.053 22.638-1.024 20.278.084 41.499 3.228 63.073 9.348 19.748 5.603 40.382 13.868 61.328 24.566 35.449 18.101 72.454 43.295 113.13 77.018l-.26.314c-89.613-74.294-167.225-110.551-237.273-110.839-8.098-.035-15.483.304-22.595 1.025-64.981 6.588-121.29 44.693-172.462 84.889a1961.136 1961.136 0 00-5.454 4.31l-3.067 2.44c-24.298 19.335-49.424 39.33-75.751 56.26-29.794 19.161-56.942 31.553-82.998 37.892-16.626 4.043-33.371 6.05-50.681 6.052'/%3E%3Cpath d='M848.773 395.568c-25.86 0-52.486-4.22-80.287-12.665-32.477-9.868-66.54-25.243-101.24-45.704-30.844-18.184-62.036-40.106-95.357-67.014-35.7-28.676-72.567-61.905-116.023-104.575-1.62-1.594-3.242-3.189-4.863-4.786-20.147-19.836-40.982-40.347-64.494-55.999a189.903 189.903 0 00-5.846-3.75c-26.221-16.218-54.026-24.33-78.284-22.843-45.961 2.818-77.286 34.988-101.87 66.086l-.365-.29c16.287-20.606 29.965-34.425 44.343-44.806 18.242-13.17 37.168-20.188 57.863-21.457 12.641-.774 26.093.972 39.987 5.194 12.948 3.934 25.928 9.895 38.572 17.717a193.972 193.972 0 015.859 3.76c23.55 15.676 44.398 36.203 64.56 56.055 1.622 1.594 3.243 3.192 4.868 4.786 43.442 42.66 80.296 75.876 115.987 104.543 70.73 57.123 134.988 93.967 196.439 112.636 52.718 16.015 101.208 16.807 148.242 2.425 53.774-16.448 102.168-54.546 148.963-91.387 4.585-3.608 9.326-7.342 13.956-10.96 1.897-1.478 3.788-2.94 5.62-4.35 31.908-24.463 58.98-41.774 85.2-54.475 32.155-15.578 62.648-23.942 93.22-25.572 7.162-.382 14.69-.365 23.012.052 20.437 1.018 41.706 5.134 63.218 12.231 19.855 6.548 40.422 15.802 61.128 27.503 35.844 20.257 73.327 48.526 111.408 84.025l-.318.343c-84.148-78.438-163.367-120.035-235.46-123.637-8.306-.414-15.818-.433-22.964-.051-70.377 3.753-132.18 44.7-178.16 79.95-1.83 1.41-3.72 2.875-5.616 4.35-4.63 3.617-9.37 7.348-13.955 10.96-46.833 36.867-95.255 74.99-149.116 91.465-22.317 6.825-44.964 10.24-68.227 10.24'/%3E%3Cpath d='M824.102 392.596c-21.189 0-42.901-2.794-64.694-8.337-32.872-8.356-67.496-22.988-102.911-43.49-31.147-18.03-62.801-40.333-96.769-68.183-34.785-28.35-70.743-61.241-116.581-106.656l-4.14-4.102c-20.558-20.408-41.822-41.509-65.625-57.864a207.886 207.886 0 00-5.848-3.887c-26.01-16.718-53.793-25.925-78.232-25.925h-.026c-47.984.013-80.798 29.018-106.572 57.39l-.39-.355c16.94-18.647 31.996-31.602 47.385-40.768 18.963-11.295 38.453-16.79 59.577-16.795h.026c12.704 0 26.148 2.393 39.964 7.112 12.966 4.43 25.939 10.788 38.553 18.897a209.728 209.728 0 015.864 3.897c23.842 16.381 45.121 37.5 65.696 57.923l4.14 4.102c45.828 45.402 81.77 78.284 116.542 106.621 72.397 59.359 137.647 95.855 199.476 111.573 51.851 13.182 100.953 10.807 150.107-7.265 49.57-18.22 95.137-53.935 139.203-88.474 8.252-6.467 16.785-13.156 25.104-19.529a962.982 962.982 0 015.789-4.383c31.671-23.667 60.57-41.077 88.347-53.222 15.798-6.906 31.583-12.226 46.918-15.814 16.394-3.834 32.893-5.837 49.037-5.95 7.229-.048 14.884.32 23.404 1.127 39.892 3.78 81.74 19.08 124.38 45.476 36.537 22.62 73.47 53.203 109.773 90.9l-.381.366c-55.138-57.256-140.462-127.371-233.822-136.215-8.502-.808-16.143-1.173-23.35-1.124-57.703.4-116.167 24.193-183.99 74.879a992.163 992.163 0 00-5.784 4.377c-8.316 6.373-16.848 13.062-25.099 19.529-44.098 34.564-89.698 70.302-139.345 88.555-24.821 9.121-50.213 14.302-75.467 15.391-3.402.149-6.824.223-10.259.223'/%3E%3Cpath d='M799.752 391.605c-16.573 0-33.253-1.722-49.848-5.16-17.18-3.56-34.965-9.005-52.859-16.188-16.786-6.736-34.163-15.202-51.644-25.16-31.492-17.936-63.585-40.647-98.116-69.433-42.42-35.135-82.978-74.755-117.057-108.878l-3.275-3.283c-21.002-21.052-42.72-42.822-66.841-59.946a228.978 228.978 0 00-5.847-4.03c-26.188-17.502-53.223-27.544-78.178-29.04-39.392-2.362-73.688 12.682-111.194 48.78l-.41-.424c17.751-17.085 33.766-28.777 50.393-36.795 19.635-9.468 39.668-13.442 61.247-12.148 12.771.765 26.214 3.805 39.961 9.033 12.972 4.934 25.927 11.699 38.508 20.105a232.927 232.927 0 015.862 4.04c24.16 17.152 45.895 38.94 66.915 60.011l3.275 3.283c34.07 34.11 74.616 73.718 117.016 108.84 73.84 61.552 140.035 97.747 202.363 110.658 51.06 10.575 100.733 5.028 151.86-16.953 45.455-19.545 88.02-53.097 129.18-85.54 11.96-9.429 24.326-19.174 36.396-28.27a791.389 791.389 0 015.953-4.416c32.016-23.393 61.924-40.418 91.431-52.044 16.242-6.4 32.523-11.16 48.39-14.152 16.799-3.166 33.7-4.455 50.23-3.832 7.32.278 15.097.995 23.778 2.2 40.415 5.61 82.243 22.857 124.322 51.262 37.03 24.996 73.385 57.937 108.054 97.909l-.444.384c-74.25-85.605-156.648-138.51-232.013-148.97-8.661-1.202-16.42-1.922-23.72-2.197-60.15-2.265-122.194 20.602-189.681 69.915a739.008 739.008 0 00-5.947 4.413c-12.065 9.09-24.428 18.834-36.385 28.26-41.191 32.469-83.785 66.043-129.311 85.617-25.372 10.908-50.937 17.868-75.979 20.68a237.336 237.336 0 01-26.385 1.47'/%3E%3Cpath d='M776.379 390.615c-12.201 0-24.367-.988-36.546-2.953-17.423-2.81-35.486-7.7-53.685-14.53-17.041-6.396-34.697-14.68-52.485-24.625-31.9-17.832-64.458-40.91-99.54-70.553-42.365-35.573-82.924-75.906-117.612-110.92l-2.253-2.276c-21.513-21.726-43.758-44.193-68.27-62.114a253.566 253.566 0 00-5.852-4.164c-26.018-18.011-53.045-29.113-78.155-32.107-40.74-4.856-77.57 7.886-115.903 40.102l-.417-.496c18.299-15.38 35.78-26.1 53.44-32.772 20.279-7.664 40.875-10.11 62.958-7.477 12.834 1.53 26.28 5.208 39.96 10.933 12.98 5.431 25.929 12.592 38.485 21.284 1.959 1.35 3.93 2.756 5.868 4.175 24.555 17.95 46.815 40.437 68.345 62.181l2.253 2.275c34.68 35.006 75.227 75.326 117.573 110.88 75.224 63.563 142.41 99.4 205.393 109.565 50.428 8.138 100.713-.565 153.729-26.602 41.512-20.391 81.002-51.85 119.192-82.273 15.678-12.491 31.891-25.405 47.776-37.148a628.405 628.405 0 016.122-4.447c32.054-22.869 63.876-39.955 94.584-50.788 16.704-5.892 33.492-10.087 49.899-12.465 17.217-2.498 34.53-3.072 51.459-1.707 7.443.6 15.35 1.672 24.17 3.272 40.96 7.438 82.799 26.593 124.355 56.938 18.98 13.86 37.867 30.069 56.135 48.181 17.372 17.222 34.29 36.26 50.28 56.587l-.51.4c-70.81-90.008-152.625-147.353-230.376-161.467-8.8-1.597-16.685-2.665-24.106-3.266-63.256-5.098-127.207 16.109-195.513 64.841a695.678 695.678 0 00-6.114 4.44c-15.875 11.737-32.082 24.648-47.757 37.136-38.216 30.445-77.732 61.927-119.309 82.347-40.342 19.813-79.114 29.613-117.573 29.613'/%3E%3Cpath d='M755.614 391.605c-8.412 0-16.824-.5-25.284-1.495-17.66-2.079-35.988-6.424-54.478-12.917-17.285-6.066-35.213-14.183-53.287-24.127-32.315-17.78-65.319-41.264-100.89-71.793-40.224-34.31-78.813-73.105-118.09-113.165l-1.014-1.033c-22.075-22.522-44.9-45.811-69.86-64.633a292.12 292.12 0 00-5.854-4.307c-25.852-18.558-52.85-30.74-78.079-35.23-42.688-7.598-80.99 2.413-120.528 31.506l-.42-.57c19.075-14.034 37.54-23.461 56.453-28.82 20.88-5.916 42.019-6.836 64.621-2.813 25.329 4.509 52.427 16.733 78.366 35.352a278.76 278.76 0 015.867 4.317c25.002 18.854 47.846 42.162 69.941 64.704l1.015 1.033c39.264 40.044 77.84 78.829 118.043 113.12 76.467 65.626 144.594 101.173 208.275 108.673 49.885 5.872 100.742-6 155.486-36.296 37.684-20.856 74.015-50.372 109.15-78.915 19.353-15.724 39.365-31.983 59.09-46.333a546.245 546.245 0 016.287-4.485c68.41-47.818 136.27-68.007 201.693-60.012 7.592.93 15.62 2.35 24.544 4.349 41.467 9.285 83.288 30.38 124.3 62.701 18.963 14.945 37.642 32.257 55.52 51.454 17.22 18.493 33.765 38.807 49.174 60.377l-.577.41c-67.498-94.477-148.673-156.362-228.571-174.252-8.902-1.992-16.908-3.409-24.476-4.336-65.245-7.974-132.938 12.175-201.2 59.89a518.029 518.029 0 00-6.277 4.478c-19.713 14.338-39.715 30.59-59.06 46.307-35.159 28.563-71.516 58.102-109.255 78.987-26.889 14.884-52.091 25.09-77.038 31.207-18.174 4.456-35.882 6.667-53.587 6.667'/%3E%3Cpath d='M736.714 392.596c-5.148 0-10.3-.194-15.46-.584-17.91-1.353-36.517-5.154-55.312-11.3-17.544-5.735-35.754-13.68-54.122-23.611-32.784-17.722-66.254-41.589-102.318-72.96-41.112-35.552-80.508-76.076-118.605-115.263l-.045-.045c-22.498-23.15-45.762-47.087-71.282-66.887a307.603 307.603 0 00-5.859-4.446c-25.73-19.098-52.72-32.35-78.055-38.324-44.117-10.402-85.084-2.916-125.24 22.884l-.416-.646c19.864-12.764 39.328-20.891 59.506-24.847 21.467-4.209 43.164-3.6 66.328 1.861 25.435 5.998 52.526 19.295 78.336 38.455a295.873 295.873 0 015.872 4.457c25.562 19.832 48.845 43.79 71.363 66.957l.045.048c38.087 39.175 77.47 79.682 118.556 115.216 77.703 67.592 146.823 102.812 211.306 107.683 50.186 3.792 100.188-10.812 157.351-45.952 34.038-20.924 67.22-48.528 99.31-75.222 22.97-19.106 46.722-38.864 70.328-55.75a460.715 460.715 0 016.456-4.515c33.23-22.74 67.153-39.033 100.829-48.428 35.951-10.028 71.87-12.243 106.76-6.584 7.774 1.26 15.93 3.034 24.937 5.423 21.278 5.638 42.837 14.49 64.076 26.306 20.346 11.322 40.621 25.484 60.263 42.092 18.941 16.015 37.425 34.417 54.939 54.689 17.052 19.739 33.237 41.31 48.103 64.115l-.645.42c-63.474-97.365-146.188-165.48-226.934-186.88-8.982-2.382-17.114-4.15-24.861-5.406-68.03-11.035-137.685 7.433-207.032 54.885a495.392 495.392 0 00-6.444 4.509c-23.585 16.866-47.324 36.615-70.284 55.715-32.109 26.713-65.313 54.333-99.397 75.286-27.478 16.892-52.855 28.817-77.59 36.46-22.08 6.823-43.406 10.189-64.763 10.189'/%3E%3Cpath d='M718.582 394.577c-2.277 0-4.555-.042-6.836-.12-18.146-.633-37.022-3.902-56.102-9.716-17.797-5.42-36.276-13.205-54.926-23.141-17.21-9.17-35.068-20.439-53.085-33.499-16.373-11.866-33.392-25.589-50.588-40.782-38.844-34.152-76.174-73.007-112.272-110.583-2.284-2.38-4.568-4.756-6.85-7.13-21.33-22.193-45.505-47.348-71.637-68.257a351.013 351.013 0 00-5.86-4.595c-25.622-19.698-52.588-34.05-77.984-41.508-46.116-13.542-88.595-8.864-129.866 14.301l-.407-.724c41.477-23.28 84.163-27.981 130.506-14.374 25.492 7.486 52.555 21.887 78.254 41.646a337.946 337.946 0 015.874 4.606c26.174 20.942 50.37 46.118 71.718 68.33 2.281 2.373 4.565 4.75 6.85 7.13 36.088 37.562 73.405 76.405 112.223 110.534 78.84 69.673 148.898 104.649 214.181 106.931 49.894 1.743 100.449-15.963 159.113-55.727 30.523-20.684 60.55-46.464 89.594-71.394 26.471-22.721 53.84-46.215 81.32-65.6a453.336 453.336 0 016.622-4.558c33.888-22.786 68.851-38.711 103.919-47.332 36.833-9.055 73.649-9.994 109.423-2.79 7.975 1.605 16.254 3.734 25.31 6.507 21.442 6.567 43.054 16.37 64.233 29.139 20.417 12.31 40.625 27.487 60.062 45.106 18.892 17.127 37.167 36.663 54.317 58.062 16.849 21.024 32.66 43.903 46.995 68.005l-.713.427c-60.538-101.791-142.598-174.669-225.137-199.945-9.03-2.765-17.283-4.887-25.23-6.488a240.963 240.963 0 00-47.62-4.732c-55.004 0-111.26 18.532-165.096 54.73a415.668 415.668 0 00-6.607 4.552c-27.447 19.358-54.803 42.84-81.259 65.548-29.059 24.945-59.106 50.738-89.668 71.451-28.031 19.003-53.572 32.674-78.08 41.802-25.58 9.525-50.09 14.188-74.69 14.188'/%3E%3Cpath d='M700.462 395.568c-18.147 0-37.021-2.728-56.115-8.11-18.05-5.087-36.798-12.686-55.727-22.593-17.453-9.132-35.562-20.486-53.825-33.747-16.588-12.044-33.811-26.038-51.2-41.588-37.002-32.943-72.637-70.38-107.1-106.583-4.167-4.377-8.333-8.751-12.5-13.12-24.713-25.907-47.188-49.01-71.994-69.39a394.32 394.32 0 00-5.86-4.728c-25.552-20.251-52.494-35.656-77.914-44.55-48.096-16.826-92.09-14.971-134.492 5.669l-.387-.8C94.524 45.719 116.576 40.02 138.89 39.09c22.252-.927 45.68 2.85 69.63 11.23 25.515 8.926 52.547 24.38 78.174 44.692a395.968 395.968 0 015.872 4.738c24.845 20.412 47.34 43.535 72.072 69.465 4.166 4.367 8.333 8.741 12.499 13.119 34.45 36.19 70.077 73.614 107.05 106.534 79.603 71.19 150.352 105.812 216.24 105.812.274 0 .542-.003.817-.003 50.398-.22 100.012-20.36 160.874-65.309 27.168-20.062 54.1-43.928 80.147-67.009 29.845-26.448 60.704-53.794 92.048-75.529a396.181 396.181 0 016.784-4.587c34.587-22.79 70.59-38.292 107.01-46.077 37.734-8.065 75.444-7.723 112.085 1.018 8.2 1.955 16.601 4.432 25.685 7.572 21.608 7.469 43.274 18.186 64.396 31.857 20.484 13.258 40.624 29.396 59.861 47.967 18.83 18.181 36.895 38.783 53.691 61.235 16.628 22.228 32.067 46.343 45.886 71.667l-.78.426c-57.748-105.827-139.154-183.212-223.345-212.311-9.056-3.13-17.43-5.6-25.6-7.548-72.144-17.21-147.665-1.672-218.398 44.937a394.002 394.002 0 00-6.768 4.574c-31.302 21.706-62.141 49.035-91.964 75.464-26.063 23.094-53.011 46.976-80.208 67.061-28.57 21.096-54.27 36.468-78.57 46.992-28.46 12.322-55.553 18.371-82.831 18.49h-.785'/%3E%3Cpath d='M684.737 397.549c-16.352 0-33.236-2.243-50.305-6.688-18.316-4.77-37.35-12.204-56.57-22.1-17.706-9.119-36.077-20.586-54.6-34.082-16.813-12.252-34.257-26.547-51.846-42.489-35.498-32.055-69.746-68.453-102.866-103.652a12939.146 12939.146 0 00-17.291-18.35c-22.652-23.963-46.904-49.164-72.402-70.696a456.806 456.806 0 00-5.864-4.874c-25.54-20.888-52.477-37.383-77.897-47.704-50.063-20.324-95.6-21.286-139.21-2.941l-.369-.876c22.022-9.264 45.107-13.637 68.615-12.998 22.807.62 46.803 5.981 71.319 15.935 25.508 10.356 52.531 26.901 78.143 47.848a458.74 458.74 0 015.877 4.884c25.537 21.564 49.808 46.786 72.479 70.77 5.767 6.104 11.625 12.33 17.292 18.353 33.107 35.183 67.342 71.564 102.814 103.597 81.057 73.458 153.045 107.791 220.08 104.955 64.554-2.73 120.884-41.539 162.747-75.045 23.993-19.205 47.924-41.212 71.07-62.492 33.092-30.43 67.31-61.897 102.52-85.956a372.672 372.672 0 016.957-4.627c35.37-22.896 72.444-38.032 110.19-44.986 38.712-7.132 77.34-5.492 114.81 4.875 8.317 2.272 16.847 5.104 26.076 8.656 21.79 8.387 43.53 20.044 64.612 34.644 20.558 14.243 40.644 31.384 59.7 50.95 18.77 19.277 36.635 41 53.098 64.57 16.404 23.484 31.478 48.886 44.805 75.507l-.85.427c-55.125-110.112-135.934-192.197-221.707-225.212-9.198-3.54-17.698-6.361-25.986-8.625-74.455-20.6-151.992-6.77-224.231 39.992a357.859 357.859 0 00-6.937 4.614c-35.152 24.02-69.348 55.461-102.413 85.869-23.156 21.293-47.1 43.31-71.12 62.534-29.504 23.612-54.64 40.23-79.111 52.295-28.969 14.278-56.506 21.79-84.191 22.96-2.466.103-4.947.158-7.438.158'/%3E%3Cpath d='M669.127 399.53c-14.69 0-29.774-1.829-45.01-5.47-18.573-4.44-37.875-11.69-57.371-21.552-17.953-9.08-36.57-20.629-55.337-34.325-17.028-12.426-34.677-26.987-52.455-43.277-34.215-31.27-67.267-66.753-99.235-101.068-7.012-7.526-14.26-15.307-21.401-22.916-21.4-22.798-46.432-49.03-72.76-71.826a499.205 499.205 0 00-5.865-5.006c-25.933-21.82-52.119-38.89-77.83-50.735C130.662 19.769 82.27 15.887 38.029 31.818l-.343-.949c22.875-8.238 46.98-11.276 71.641-9.03 23.357 2.128 47.904 9.058 72.96 20.6 25.794 11.882 52.054 29 78.055 50.879a511.087 511.087 0 015.879 5.016c26.363 22.827 51.418 49.081 72.833 71.898 7.145 7.61 14.393 15.393 21.405 22.918 31.951 34.3 64.994 69.77 99.177 101.011 80.96 74.183 155.973 109.12 222.953 103.837 64.248-5.068 119.216-45.602 164.51-84.589 20.966-18.045 41.977-38.105 62.3-57.508 36.16-34.525 73.55-70.228 112.575-96.463a349.322 349.322 0 017.119-4.653c36.116-22.94 74.23-37.65 113.284-43.724 39.631-6.163 79.154-3.25 117.47 8.66 8.5 2.621 17.4 5.89 26.45 9.716 87.41 36.946 167.758 123.706 220.443 238.03l-.918.422c-52.58-114.098-132.738-200.674-219.92-237.523-9.018-3.813-17.885-7.07-26.355-9.682-75.72-23.535-157.371-11.122-229.911 34.952a357.485 357.485 0 00-7.1 4.638c-38.95 26.19-76.309 61.86-112.44 96.356-20.329 19.412-41.353 39.483-62.338 57.544-29.987 25.809-55.278 44.067-79.597 57.453-29.431 16.206-57.4 25.161-85.494 27.377-4.467.352-8.986.526-13.54.526'/%3E%3Cpath d='M653.41 402.502c-13.168 0-26.626-1.493-40.207-4.464-18.841-4.125-38.429-11.212-58.214-21.064-18.208-9.074-37.088-20.735-56.107-34.667-17.258-12.642-35.124-27.51-53.1-44.198-33.139-30.719-65.193-65.563-96.193-99.263-8.188-8.896-16.65-18.099-25-27.076-22.629-24.335-47.157-50.042-73.168-73.172a573.13 573.13 0 00-5.868-5.154c-26.047-22.58-52.227-40.72-77.815-53.918C114.755 12.199 64.771 5.414 19.178 19.361l-.313-1.024c23.769-7.27 48.911-8.984 74.726-5.09 23.94 3.61 49.053 12.131 74.638 25.327 25.663 13.237 51.916 31.425 78.025 54.061a597.44 597.44 0 015.88 5.163c26.044 23.159 50.592 48.888 73.24 73.242 8.35 8.98 16.815 18.183 25.003 27.082 30.985 33.684 63.026 68.512 96.133 99.202 82.025 76.135 158.053 110.798 225.974 103.03 64.74-7.404 120.438-51.864 166.386-94.38 18.344-16.88 36.775-35.231 54.601-52.978 38.875-38.707 79.075-78.729 121.676-106.983 2.4-1.592 4.853-3.171 7.286-4.695 36.908-23.07 76.089-37.399 116.456-42.593 40.59-5.221 81.034-1.026 120.208 12.47 8.824 3.029 17.856 6.664 26.843 10.805 88.783 40.907 168.539 132.434 218.818 251.107l-.986.417c-50.177-118.431-129.737-209.755-218.28-250.551-8.955-4.126-17.952-7.748-26.743-10.766-78.041-26.886-161.764-16.225-235.747 30.019a328.038 328.038 0 00-7.264 4.68c-42.513 28.195-82.674 68.181-121.514 106.85-17.83 17.752-36.27 36.11-54.627 53.007-30.348 28.08-55.804 48.039-80.112 62.807-29.896 18.163-58.315 28.58-86.879 31.85a169.408 169.408 0 01-19.196 1.082'/%3E%3Cpath d='M638.649 404.483c-11.752 0-23.71-1.201-35.773-3.603-19.1-3.8-38.955-10.713-59.015-20.537-18.455-9.043-37.579-20.799-56.838-34.94-17.473-12.83-35.543-27.982-53.708-45.032-32.193-30.223-63.363-64.497-93.508-97.642-34.51-37.952-70.199-77.193-107.558-110.496C148.454 17.541 70.758-11.315 1.315 6.466l-.28-1.094C20.268.447 40.477-.886 61.105 1.412c19.234 2.142 39.282 7.49 59.578 15.893 36.19 14.982 73.978 39.908 112.319 74.085 37.404 33.342 73.112 72.606 107.645 110.577 30.129 33.128 61.282 67.387 93.444 97.58 83.02 77.935 160.012 112.262 228.84 102.03 80.326-11.939 148.35-82.593 214.14-150.92 41.804-43.42 85.035-88.318 131.572-118.744 21.33-13.943 43.856-25.008 66.959-32.887 22.861-7.798 46.435-12.53 70.066-14.062 23.633-1.533 47.462.123 70.827 4.922 23.612 4.85 46.906 12.943 69.236 24.055 22.324 11.11 44.266 25.527 65.219 42.85 20.726 17.139 40.62 37.23 59.128 59.724 18.506 22.487 35.738 47.509 51.217 74.367 15.643 27.14 29.6 56.339 41.482 86.784l-1.054.41c-47.832-122.553-126.742-218.458-216.496-263.123-39.406-19.61-80.926-29.347-122.348-29.347-52.863 0-105.575 15.847-153.616 47.253-46.433 30.355-89.616 75.207-131.378 118.583-33.017 34.29-67.159 69.75-102.33 97.316-18.937 14.841-36.691 26.31-54.274 35.056-19.734 9.821-38.767 15.997-58.182 18.884a166.474 166.474 0 01-24.45 1.785'/%3E%3C/g%3E%3C/svg%3E\");\n}\n\n.%prefix%-subtitle {\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 1.71;\n    letter-spacing: normal;\n    text-align: center;\n    width: 300px;\n    height: 24px;\n    margin: 10px 0px 24px 0px;\n    color: #c2a2f6;\n}\n\n.%prefix%-separator {\n    margin-top: 20px;\n    width: 100%;\n    font-size: 12px;\n    display: flex;\n    align-items: center;\n    text-align: center;\n    color: white;\n}\n\n.%prefix%-separator::before,\n.%prefix%-separator::after {\n    content: '';\n    flex: 1;\n    opacity: 0.2;\n    border-bottom: 1px solid #d8d8d8;\n}\n\n.%prefix%-separator::before {\n    margin-right: .5em;\n}\n\n.%prefix%-separator::after {\n    margin-left: .5em;\n}\n\n.%prefix%-actions {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    position: relative;\n}\n\n.%prefix%-uri {\n    width: 100%;\n    padding: 20px 4px 0px 4px;\n}\n\n.%prefix%-background {\n    width: 240px;\n    height: 240px;\n    border-radius: 10px;\n    box-shadow: 0 4px 8px -2px rgba(141, 141, 148, 0.28), 0 0 2px 0 rgba(141, 141, 148, 0.16);\n    background-color: #ffffff;\n    position: relative;\n    z-index: 10;\n}\n\n.%prefix%-qr {\n    width: 200px;\n    position: absolute;\n    z-index: 5;\n    top: 20px;\n    left: 20px;\n}\n\n.%prefix%-qr svg {\n    width: 100%;\n    fill: #010c2c;\n}\n\n.%prefix%-footnote {\n    text-align: center;\n    width: 100%;\n    position: absolute;\n    bottom: -26px;\n    left: 0;\n    color: white;\n}\n\n.%prefix%-footnote a {\n    color: white;\n}\n\n.%prefix%-wskeepalive {\n    display: none;\n}\n\n.%prefix%-uri a {\n    width: 100%;\n    border-radius: 28px;\n    background-image: linear-gradient(94deg, #7543e3 5%, #582acb 98%);\n    font-size: 14px;\n    font-weight: 500;\n    font-stretch: normal;\n    font-style: normal;\n    letter-spacing: normal;\n    text-align: center;\n    color: #ffffff;\n    text-decoration: none;\n    flex-grow: 1;\n    flex: 1;\n    padding: 18px 0px 16px 0px;\n    display: block;\n}\n`\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","prototype","toString","Array","isArray","arr","Buffer","TYPED_ARRAY_SUPPORT","Uint8Array","__proto__","foo","typedArraySupport","K_MAX_LENGTH","arg","offset","allocUnsafe","that","ArrayBuffer","array","byteOffset","byteLength","RangeError","buf","undefined","fromArrayLike","fromArrayBuffer","string","createBuffer","actual","write","slice","fromString","obj","isBuffer","len","checked","copy","buffer","val","type","data","fromObject","from","size","i","utf8ToBytes","units","codePoint","Infinity","leadSurrogate","bytes","charCodeAt","Error","isView","species","Object","defineProperty","configurable","enumerable","writable","isFinite","remaining","src","dst","blitBuffer","utf8Write","start","end","newBuf","subarray","sliceLen","target","targetStart","set","fill","code","concat","list","pos","_isBuffer","b","toSJISFunction","CODEWORDS_COUNT","version","digit","kanji","exports","bit","level","defaultValue","isValid","toLowerCase","L","M","Q","H","BitBuffer","get","index","bufIndex","Math","floor","put","num","putBit","getLengthInBits","BitMatrix","BufferUtil","reservedBit","row","col","reserved","xor","isReserved","getSymbolSize","require$$0","posCount","intervals","ceil","positions","reverse","coords","getRowColCoords","posLength","j","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","PenaltyScores","getMaskAt","maskPattern","Patterns","mask","isNaN","parseInt","points","sameCountCol","sameCountRow","lastCol","lastRow","module","last","bitsCol","bitsRow","darkCount","modulesCount","abs","pattern","setupFormatFunc","numPatterns","keys","bestPattern","lowerPenalty","p","applyMask","penalty","getPenaltyN1","getPenaltyN2","getPenaltyN3","getPenaltyN4","EC_BLOCKS_TABLE","EC_CODEWORDS_TABLE","errorCorrectionLevel","ECLevel","EXP_TABLE","LOG_TABLE","x","p1","p2","coeff","GF","divident","divisor","degree","poly","mul","lookup","revLookup","Arr","inited","init","encodeChunk","uint8","tmp","output","join","fromByteArray","extraBytes","parts","maxChunkLength","len2","read","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","s","NaN","pow","c","rt","log","LN2","global","_kMaxLength","kMaxLength","encodingOrOffset","encoding","isEncoding","internalIsBuffer","assertSize","loweredCase","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","String","readUInt16BE","foundIndex","found","hexWrite","Number","strLen","parsed","substr","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","hi","lo","utf16leToBytes","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","poolSize","_augment","alloc","allocUnsafeSlow","compare","a","swap16","swap32","swap64","arguments","equals","inspect","match","thisStart","thisEnd","thisCopy","targetCopy","includes","toJSON","_arr","ret","out","toHex","checkOffset","ext","checkInt","max","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","readUIntLE","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","INVALID_BASE64_RE","b64","l","placeHolders","toByteArray","trim","replace","stringtrim","base64clean","isFastBuffer","isSlowBuffer","constructor","ReedSolomonEncoder","genPoly","initialize","Polynomial","generateECPolynomial","encode","pad","paddedData","remainder","mod","buff","numeric","byte","RegExp","TEST_KANJI","TEST_NUMERIC","TEST_ALPHANUMERIC","test","id","ccBits","mode","VersionCheck","dataStr","Regex","testNumeric","NUMERIC","testAlphanumeric","ALPHANUMERIC","testKanji","KANJI","BYTE","G18_BCH","Utils","getReservedBitsCount","Mode","getCharCountIndicator","getTotalBitsFromDataArray","segments","totalBits","forEach","reservedBits","getBitsLength","dataTotalCodewordsBits","ECCode","MIXED","usableBits","seg","ecl","currentVersion","getCapacity","getBestVersionForMixedData","getBestVersionForDataLength","getLength","G15_BCH","NumericData","bitBuffer","group","remainingNum","ALPHA_NUM_CHARS","AlphanumericData","ByteData","KanjiData","dijkstra","single_source_shortest_paths","graph","predecessors","costs","closest","u","cost_of_s_to_u","adjacent_nodes","cost_of_s_to_u_plus_cost_of_e","cost_of_s_to_v","open","PriorityQueue","make","empty","cost","hasOwnProperty","msg","extract_shortest_path_from_predecessor_list","nodes","find_path","opts","key","T","queue","sorter","default_sorter","item","sort","shift","getStringByteLength","unescape","encodeURIComponent","getSegments","regex","exec","getSegmentsFromString","byteSegs","kanjiSegs","numSegs","alphaNumSegs","BYTE_KANJI","s1","s2","map","getSegmentBitsLength","buildSingleSegment","modesHint","bestMode","getBestModeForData","reduce","acc","table","prevNodeIds","nodeGroup","currentNodeIds","node","lastCount","prevNodeId","buildGraph","segs","buildNodes","path","optimizedSegs","fromArray","curr","prevSeg","mergeSegments","setupFormatInfo","matrix","bits","FormatInfo","createData","remainingByte","totalCodewords","ecTotalCodewords","dataTotalCodewords","ecTotalBlocks","blocksInGroup1","totalCodewordsInGroup1","dataCodewordsInGroup1","dataCodewordsInGroup2","ecCount","rs","dcData","ecData","maxDataSize","dataSize","r","createCodewords","createSymbol","Segments","estimatedVersion","rawSegments","rawSplit","Version","getBestVersionForData","bestVersion","dataBits","moduleCount","modules","FinderPattern","setupFinderPattern","setupTimingPattern","AlignmentPattern","getPositions","setupAlignmentPattern","getEncodedBits","setupVersionInfo","inc","bitIndex","byteIndex","dark","setupData","MaskPattern","getBestMask","bind","options","toSJISFunc","hex2rgba","hex","hexCode","split","hexValue","color","margin","width","scale","light","rendererOpts","qrSize","getScale","imgData","qr","symbolSize","scaledMargin","palette","posDst","pxColor","qrData","canvas","canvasEl","getContext","document","createElement","getCanvasElement","getOptions","getImageWidth","ctx","image","createImageData","qrToImageData","clearRect","height","style","clearCanvas","putImageData","render","toDataURL","quality","getColorAttrib","attrib","alpha","toFixed","svgCmd","cmd","cb","qrcodesize","bg","moveBy","newRow","lineLength","qrToPath","viewBox","svgTag","renderCanvas","renderFunc","text","args","argsNum","isLastArgCb","canPromise","QRCode","CanvasRenderer","renderToDataURL","SvgRenderer","keyPrefix","Storage","localStorage","setItem","storageKey","getItem","removeItem","classPrefix","injectStyles","requestStatus","storage","storagePrefix","requestAccount","BrowserTransport","hide","activeCancel","activeRequest","styleEl","css","appendChild","createTextNode","head","containerEl","createEl","className","onclick","event","_this","stopPropagation","closeModal","requestEl","wrapper","class","closeButton","attrs","el","tag","_b","o","__values","attr","setAttribute","classList","remove","clearTimers","add","request","setupElements","sameDeviceRequest","clone","setInfoKey","returnUrl","sameDeviceUri","crossDeviceUri","isIdentity","title","subtitle","qrEl","_a","qrcode.toString","innerHTML","console","warn","error_1","linkEl","linkA","href","addEventListener","preventDefault","navigator","userAgent","iframe","window","location","infoEl","infoTitle","infoSubtitle","backgroundEl","waveBackground","divider","actionEl","footnoteEl","footnoteLink","emptyElement","logoEl","show","cancel","displayRequest","catch","session","metadata","sameDevice","onRequest","timeout","deviceName","name","Date","now","updateCountdown","timeLeft","timeFormatted","toISOString","textContent","countdownTimer","setInterval","scheme","getScheme","closeTimer","clearTimeout","setTimeout","error","message","firstChild","removeChild","returnUrlAlphabet","returnUrlAlphabetLen","rv","charAt","random"],"mappings":"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"}